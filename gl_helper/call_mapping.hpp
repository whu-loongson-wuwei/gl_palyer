/*this file is generated by gen_call_table.py.	please do not modify it manaully.*/
	#include<GL/glxext.h>
#include"function.h"

if(strcmp("glNewList",call_name)==0){
  (PFNGLNEWLISTPROC) func = (PFNGLNEWLISTPROC)glXGetProcAddress((const GLubyte*)"glNewList");
  continue;
}

if(strcmp("glEndList",call_name)==0){
  (PFNGLENDLISTPROC) func = (PFNGLENDLISTPROC)glXGetProcAddress((const GLubyte*)"glEndList");
  continue;
}

if(strcmp("glCallList",call_name)==0){
  (PFNGLCALLLISTPROC) func = (PFNGLCALLLISTPROC)glXGetProcAddress((const GLubyte*)"glCallList");
  continue;
}

if(strcmp("glCallLists",call_name)==0){
  (PFNGLCALLLISTSPROC) func = (PFNGLCALLLISTSPROC)glXGetProcAddress((const GLubyte*)"glCallLists");
  continue;
}

if(strcmp("glDeleteLists",call_name)==0){
  (PFNGLDELETELISTSPROC) func = (PFNGLDELETELISTSPROC)glXGetProcAddress((const GLubyte*)"glDeleteLists");
  continue;
}

if(strcmp("glGenLists",call_name)==0){
  (PFNGLGENLISTSPROC) func = (PFNGLGENLISTSPROC)glXGetProcAddress((const GLubyte*)"glGenLists");
  continue;
}

if(strcmp("glListBase",call_name)==0){
  (PFNGLLISTBASEPROC) func = (PFNGLLISTBASEPROC)glXGetProcAddress((const GLubyte*)"glListBase");
  continue;
}

if(strcmp("glBegin",call_name)==0){
  (PFNGLBEGINPROC) func = (PFNGLBEGINPROC)glXGetProcAddress((const GLubyte*)"glBegin");
  continue;
}

if(strcmp("glBitmap",call_name)==0){
  (PFNGLBITMAPPROC) func = (PFNGLBITMAPPROC)glXGetProcAddress((const GLubyte*)"glBitmap");
  continue;
}

if(strcmp("glColor3b",call_name)==0){
  (PFNGLCOLOR3BPROC) func = (PFNGLCOLOR3BPROC)glXGetProcAddress((const GLubyte*)"glColor3b");
  continue;
}

if(strcmp("glColor3bv",call_name)==0){
  (PFNGLCOLOR3BVPROC) func = (PFNGLCOLOR3BVPROC)glXGetProcAddress((const GLubyte*)"glColor3bv");
  continue;
}

if(strcmp("glColor3d",call_name)==0){
  (PFNGLCOLOR3DPROC) func = (PFNGLCOLOR3DPROC)glXGetProcAddress((const GLubyte*)"glColor3d");
  continue;
}

if(strcmp("glColor3dv",call_name)==0){
  (PFNGLCOLOR3DVPROC) func = (PFNGLCOLOR3DVPROC)glXGetProcAddress((const GLubyte*)"glColor3dv");
  continue;
}

if(strcmp("glColor3f",call_name)==0){
  (PFNGLCOLOR3FPROC) func = (PFNGLCOLOR3FPROC)glXGetProcAddress((const GLubyte*)"glColor3f");
  continue;
}

if(strcmp("glColor3fv",call_name)==0){
  (PFNGLCOLOR3FVPROC) func = (PFNGLCOLOR3FVPROC)glXGetProcAddress((const GLubyte*)"glColor3fv");
  continue;
}

if(strcmp("glColor3i",call_name)==0){
  (PFNGLCOLOR3IPROC) func = (PFNGLCOLOR3IPROC)glXGetProcAddress((const GLubyte*)"glColor3i");
  continue;
}

if(strcmp("glColor3iv",call_name)==0){
  (PFNGLCOLOR3IVPROC) func = (PFNGLCOLOR3IVPROC)glXGetProcAddress((const GLubyte*)"glColor3iv");
  continue;
}

if(strcmp("glColor3s",call_name)==0){
  (PFNGLCOLOR3SPROC) func = (PFNGLCOLOR3SPROC)glXGetProcAddress((const GLubyte*)"glColor3s");
  continue;
}

if(strcmp("glColor3sv",call_name)==0){
  (PFNGLCOLOR3SVPROC) func = (PFNGLCOLOR3SVPROC)glXGetProcAddress((const GLubyte*)"glColor3sv");
  continue;
}

if(strcmp("glColor3ub",call_name)==0){
  (PFNGLCOLOR3UBPROC) func = (PFNGLCOLOR3UBPROC)glXGetProcAddress((const GLubyte*)"glColor3ub");
  continue;
}

if(strcmp("glColor3ubv",call_name)==0){
  (PFNGLCOLOR3UBVPROC) func = (PFNGLCOLOR3UBVPROC)glXGetProcAddress((const GLubyte*)"glColor3ubv");
  continue;
}

if(strcmp("glColor3ui",call_name)==0){
  (PFNGLCOLOR3UIPROC) func = (PFNGLCOLOR3UIPROC)glXGetProcAddress((const GLubyte*)"glColor3ui");
  continue;
}

if(strcmp("glColor3uiv",call_name)==0){
  (PFNGLCOLOR3UIVPROC) func = (PFNGLCOLOR3UIVPROC)glXGetProcAddress((const GLubyte*)"glColor3uiv");
  continue;
}

if(strcmp("glColor3us",call_name)==0){
  (PFNGLCOLOR3USPROC) func = (PFNGLCOLOR3USPROC)glXGetProcAddress((const GLubyte*)"glColor3us");
  continue;
}

if(strcmp("glColor3usv",call_name)==0){
  (PFNGLCOLOR3USVPROC) func = (PFNGLCOLOR3USVPROC)glXGetProcAddress((const GLubyte*)"glColor3usv");
  continue;
}

if(strcmp("glColor4b",call_name)==0){
  (PFNGLCOLOR4BPROC) func = (PFNGLCOLOR4BPROC)glXGetProcAddress((const GLubyte*)"glColor4b");
  continue;
}

if(strcmp("glColor4bv",call_name)==0){
  (PFNGLCOLOR4BVPROC) func = (PFNGLCOLOR4BVPROC)glXGetProcAddress((const GLubyte*)"glColor4bv");
  continue;
}

if(strcmp("glColor4d",call_name)==0){
  (PFNGLCOLOR4DPROC) func = (PFNGLCOLOR4DPROC)glXGetProcAddress((const GLubyte*)"glColor4d");
  continue;
}

if(strcmp("glColor4dv",call_name)==0){
  (PFNGLCOLOR4DVPROC) func = (PFNGLCOLOR4DVPROC)glXGetProcAddress((const GLubyte*)"glColor4dv");
  continue;
}

if(strcmp("glColor4f",call_name)==0){
  (PFNGLCOLOR4FPROC) func = (PFNGLCOLOR4FPROC)glXGetProcAddress((const GLubyte*)"glColor4f");
  continue;
}

if(strcmp("glColor4fv",call_name)==0){
  (PFNGLCOLOR4FVPROC) func = (PFNGLCOLOR4FVPROC)glXGetProcAddress((const GLubyte*)"glColor4fv");
  continue;
}

if(strcmp("glColor4i",call_name)==0){
  (PFNGLCOLOR4IPROC) func = (PFNGLCOLOR4IPROC)glXGetProcAddress((const GLubyte*)"glColor4i");
  continue;
}

if(strcmp("glColor4iv",call_name)==0){
  (PFNGLCOLOR4IVPROC) func = (PFNGLCOLOR4IVPROC)glXGetProcAddress((const GLubyte*)"glColor4iv");
  continue;
}

if(strcmp("glColor4s",call_name)==0){
  (PFNGLCOLOR4SPROC) func = (PFNGLCOLOR4SPROC)glXGetProcAddress((const GLubyte*)"glColor4s");
  continue;
}

if(strcmp("glColor4sv",call_name)==0){
  (PFNGLCOLOR4SVPROC) func = (PFNGLCOLOR4SVPROC)glXGetProcAddress((const GLubyte*)"glColor4sv");
  continue;
}

if(strcmp("glColor4ub",call_name)==0){
  (PFNGLCOLOR4UBPROC) func = (PFNGLCOLOR4UBPROC)glXGetProcAddress((const GLubyte*)"glColor4ub");
  continue;
}

if(strcmp("glColor4ubv",call_name)==0){
  (PFNGLCOLOR4UBVPROC) func = (PFNGLCOLOR4UBVPROC)glXGetProcAddress((const GLubyte*)"glColor4ubv");
  continue;
}

if(strcmp("glColor4ui",call_name)==0){
  (PFNGLCOLOR4UIPROC) func = (PFNGLCOLOR4UIPROC)glXGetProcAddress((const GLubyte*)"glColor4ui");
  continue;
}

if(strcmp("glColor4uiv",call_name)==0){
  (PFNGLCOLOR4UIVPROC) func = (PFNGLCOLOR4UIVPROC)glXGetProcAddress((const GLubyte*)"glColor4uiv");
  continue;
}

if(strcmp("glColor4us",call_name)==0){
  (PFNGLCOLOR4USPROC) func = (PFNGLCOLOR4USPROC)glXGetProcAddress((const GLubyte*)"glColor4us");
  continue;
}

if(strcmp("glColor4usv",call_name)==0){
  (PFNGLCOLOR4USVPROC) func = (PFNGLCOLOR4USVPROC)glXGetProcAddress((const GLubyte*)"glColor4usv");
  continue;
}

if(strcmp("glEdgeFlag",call_name)==0){
  (PFNGLEDGEFLAGPROC) func = (PFNGLEDGEFLAGPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlag");
  continue;
}

if(strcmp("glEdgeFlagv",call_name)==0){
  (PFNGLEDGEFLAGVPROC) func = (PFNGLEDGEFLAGVPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagv");
  continue;
}

if(strcmp("glEnd",call_name)==0){
  (PFNGLENDPROC) func = (PFNGLENDPROC)glXGetProcAddress((const GLubyte*)"glEnd");
  continue;
}

if(strcmp("glIndexd",call_name)==0){
  (PFNGLINDEXDPROC) func = (PFNGLINDEXDPROC)glXGetProcAddress((const GLubyte*)"glIndexd");
  continue;
}

if(strcmp("glIndexdv",call_name)==0){
  (PFNGLINDEXDVPROC) func = (PFNGLINDEXDVPROC)glXGetProcAddress((const GLubyte*)"glIndexdv");
  continue;
}

if(strcmp("glIndexf",call_name)==0){
  (PFNGLINDEXFPROC) func = (PFNGLINDEXFPROC)glXGetProcAddress((const GLubyte*)"glIndexf");
  continue;
}

if(strcmp("glIndexfv",call_name)==0){
  (PFNGLINDEXFVPROC) func = (PFNGLINDEXFVPROC)glXGetProcAddress((const GLubyte*)"glIndexfv");
  continue;
}

if(strcmp("glIndexi",call_name)==0){
  (PFNGLINDEXIPROC) func = (PFNGLINDEXIPROC)glXGetProcAddress((const GLubyte*)"glIndexi");
  continue;
}

if(strcmp("glIndexiv",call_name)==0){
  (PFNGLINDEXIVPROC) func = (PFNGLINDEXIVPROC)glXGetProcAddress((const GLubyte*)"glIndexiv");
  continue;
}

if(strcmp("glIndexs",call_name)==0){
  (PFNGLINDEXSPROC) func = (PFNGLINDEXSPROC)glXGetProcAddress((const GLubyte*)"glIndexs");
  continue;
}

if(strcmp("glIndexsv",call_name)==0){
  (PFNGLINDEXSVPROC) func = (PFNGLINDEXSVPROC)glXGetProcAddress((const GLubyte*)"glIndexsv");
  continue;
}

if(strcmp("glNormal3b",call_name)==0){
  (PFNGLNORMAL3BPROC) func = (PFNGLNORMAL3BPROC)glXGetProcAddress((const GLubyte*)"glNormal3b");
  continue;
}

if(strcmp("glNormal3bv",call_name)==0){
  (PFNGLNORMAL3BVPROC) func = (PFNGLNORMAL3BVPROC)glXGetProcAddress((const GLubyte*)"glNormal3bv");
  continue;
}

if(strcmp("glNormal3d",call_name)==0){
  (PFNGLNORMAL3DPROC) func = (PFNGLNORMAL3DPROC)glXGetProcAddress((const GLubyte*)"glNormal3d");
  continue;
}

if(strcmp("glNormal3dv",call_name)==0){
  (PFNGLNORMAL3DVPROC) func = (PFNGLNORMAL3DVPROC)glXGetProcAddress((const GLubyte*)"glNormal3dv");
  continue;
}

if(strcmp("glNormal3f",call_name)==0){
  (PFNGLNORMAL3FPROC) func = (PFNGLNORMAL3FPROC)glXGetProcAddress((const GLubyte*)"glNormal3f");
  continue;
}

if(strcmp("glNormal3fv",call_name)==0){
  (PFNGLNORMAL3FVPROC) func = (PFNGLNORMAL3FVPROC)glXGetProcAddress((const GLubyte*)"glNormal3fv");
  continue;
}

if(strcmp("glNormal3i",call_name)==0){
  (PFNGLNORMAL3IPROC) func = (PFNGLNORMAL3IPROC)glXGetProcAddress((const GLubyte*)"glNormal3i");
  continue;
}

if(strcmp("glNormal3iv",call_name)==0){
  (PFNGLNORMAL3IVPROC) func = (PFNGLNORMAL3IVPROC)glXGetProcAddress((const GLubyte*)"glNormal3iv");
  continue;
}

if(strcmp("glNormal3s",call_name)==0){
  (PFNGLNORMAL3SPROC) func = (PFNGLNORMAL3SPROC)glXGetProcAddress((const GLubyte*)"glNormal3s");
  continue;
}

if(strcmp("glNormal3sv",call_name)==0){
  (PFNGLNORMAL3SVPROC) func = (PFNGLNORMAL3SVPROC)glXGetProcAddress((const GLubyte*)"glNormal3sv");
  continue;
}

if(strcmp("glRasterPos2d",call_name)==0){
  (PFNGLRASTERPOS2DPROC) func = (PFNGLRASTERPOS2DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2d");
  continue;
}

if(strcmp("glRasterPos2dv",call_name)==0){
  (PFNGLRASTERPOS2DVPROC) func = (PFNGLRASTERPOS2DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2dv");
  continue;
}

if(strcmp("glRasterPos2f",call_name)==0){
  (PFNGLRASTERPOS2FPROC) func = (PFNGLRASTERPOS2FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2f");
  continue;
}

if(strcmp("glRasterPos2fv",call_name)==0){
  (PFNGLRASTERPOS2FVPROC) func = (PFNGLRASTERPOS2FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2fv");
  continue;
}

if(strcmp("glRasterPos2i",call_name)==0){
  (PFNGLRASTERPOS2IPROC) func = (PFNGLRASTERPOS2IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2i");
  continue;
}

if(strcmp("glRasterPos2iv",call_name)==0){
  (PFNGLRASTERPOS2IVPROC) func = (PFNGLRASTERPOS2IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2iv");
  continue;
}

if(strcmp("glRasterPos2s",call_name)==0){
  (PFNGLRASTERPOS2SPROC) func = (PFNGLRASTERPOS2SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2s");
  continue;
}

if(strcmp("glRasterPos2sv",call_name)==0){
  (PFNGLRASTERPOS2SVPROC) func = (PFNGLRASTERPOS2SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2sv");
  continue;
}

if(strcmp("glRasterPos3d",call_name)==0){
  (PFNGLRASTERPOS3DPROC) func = (PFNGLRASTERPOS3DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3d");
  continue;
}

if(strcmp("glRasterPos3dv",call_name)==0){
  (PFNGLRASTERPOS3DVPROC) func = (PFNGLRASTERPOS3DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3dv");
  continue;
}

if(strcmp("glRasterPos3f",call_name)==0){
  (PFNGLRASTERPOS3FPROC) func = (PFNGLRASTERPOS3FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3f");
  continue;
}

if(strcmp("glRasterPos3fv",call_name)==0){
  (PFNGLRASTERPOS3FVPROC) func = (PFNGLRASTERPOS3FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3fv");
  continue;
}

if(strcmp("glRasterPos3i",call_name)==0){
  (PFNGLRASTERPOS3IPROC) func = (PFNGLRASTERPOS3IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3i");
  continue;
}

if(strcmp("glRasterPos3iv",call_name)==0){
  (PFNGLRASTERPOS3IVPROC) func = (PFNGLRASTERPOS3IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3iv");
  continue;
}

if(strcmp("glRasterPos3s",call_name)==0){
  (PFNGLRASTERPOS3SPROC) func = (PFNGLRASTERPOS3SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3s");
  continue;
}

if(strcmp("glRasterPos3sv",call_name)==0){
  (PFNGLRASTERPOS3SVPROC) func = (PFNGLRASTERPOS3SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3sv");
  continue;
}

if(strcmp("glRasterPos4d",call_name)==0){
  (PFNGLRASTERPOS4DPROC) func = (PFNGLRASTERPOS4DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4d");
  continue;
}

if(strcmp("glRasterPos4dv",call_name)==0){
  (PFNGLRASTERPOS4DVPROC) func = (PFNGLRASTERPOS4DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4dv");
  continue;
}

if(strcmp("glRasterPos4f",call_name)==0){
  (PFNGLRASTERPOS4FPROC) func = (PFNGLRASTERPOS4FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4f");
  continue;
}

if(strcmp("glRasterPos4fv",call_name)==0){
  (PFNGLRASTERPOS4FVPROC) func = (PFNGLRASTERPOS4FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4fv");
  continue;
}

if(strcmp("glRasterPos4i",call_name)==0){
  (PFNGLRASTERPOS4IPROC) func = (PFNGLRASTERPOS4IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4i");
  continue;
}

if(strcmp("glRasterPos4iv",call_name)==0){
  (PFNGLRASTERPOS4IVPROC) func = (PFNGLRASTERPOS4IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4iv");
  continue;
}

if(strcmp("glRasterPos4s",call_name)==0){
  (PFNGLRASTERPOS4SPROC) func = (PFNGLRASTERPOS4SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4s");
  continue;
}

if(strcmp("glRasterPos4sv",call_name)==0){
  (PFNGLRASTERPOS4SVPROC) func = (PFNGLRASTERPOS4SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4sv");
  continue;
}

if(strcmp("glRectd",call_name)==0){
  (PFNGLRECTDPROC) func = (PFNGLRECTDPROC)glXGetProcAddress((const GLubyte*)"glRectd");
  continue;
}

if(strcmp("glRectdv",call_name)==0){
  (PFNGLRECTDVPROC) func = (PFNGLRECTDVPROC)glXGetProcAddress((const GLubyte*)"glRectdv");
  continue;
}

if(strcmp("glRectf",call_name)==0){
  (PFNGLRECTFPROC) func = (PFNGLRECTFPROC)glXGetProcAddress((const GLubyte*)"glRectf");
  continue;
}

if(strcmp("glRectfv",call_name)==0){
  (PFNGLRECTFVPROC) func = (PFNGLRECTFVPROC)glXGetProcAddress((const GLubyte*)"glRectfv");
  continue;
}

if(strcmp("glRecti",call_name)==0){
  (PFNGLRECTIPROC) func = (PFNGLRECTIPROC)glXGetProcAddress((const GLubyte*)"glRecti");
  continue;
}

if(strcmp("glRectiv",call_name)==0){
  (PFNGLRECTIVPROC) func = (PFNGLRECTIVPROC)glXGetProcAddress((const GLubyte*)"glRectiv");
  continue;
}

if(strcmp("glRects",call_name)==0){
  (PFNGLRECTSPROC) func = (PFNGLRECTSPROC)glXGetProcAddress((const GLubyte*)"glRects");
  continue;
}

if(strcmp("glRectsv",call_name)==0){
  (PFNGLRECTSVPROC) func = (PFNGLRECTSVPROC)glXGetProcAddress((const GLubyte*)"glRectsv");
  continue;
}

if(strcmp("glTexCoord1d",call_name)==0){
  (PFNGLTEXCOORD1DPROC) func = (PFNGLTEXCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1d");
  continue;
}

if(strcmp("glTexCoord1dv",call_name)==0){
  (PFNGLTEXCOORD1DVPROC) func = (PFNGLTEXCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1dv");
  continue;
}

if(strcmp("glTexCoord1f",call_name)==0){
  (PFNGLTEXCOORD1FPROC) func = (PFNGLTEXCOORD1FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1f");
  continue;
}

if(strcmp("glTexCoord1fv",call_name)==0){
  (PFNGLTEXCOORD1FVPROC) func = (PFNGLTEXCOORD1FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1fv");
  continue;
}

if(strcmp("glTexCoord1i",call_name)==0){
  (PFNGLTEXCOORD1IPROC) func = (PFNGLTEXCOORD1IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1i");
  continue;
}

if(strcmp("glTexCoord1iv",call_name)==0){
  (PFNGLTEXCOORD1IVPROC) func = (PFNGLTEXCOORD1IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1iv");
  continue;
}

if(strcmp("glTexCoord1s",call_name)==0){
  (PFNGLTEXCOORD1SPROC) func = (PFNGLTEXCOORD1SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1s");
  continue;
}

if(strcmp("glTexCoord1sv",call_name)==0){
  (PFNGLTEXCOORD1SVPROC) func = (PFNGLTEXCOORD1SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1sv");
  continue;
}

if(strcmp("glTexCoord2d",call_name)==0){
  (PFNGLTEXCOORD2DPROC) func = (PFNGLTEXCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2d");
  continue;
}

if(strcmp("glTexCoord2dv",call_name)==0){
  (PFNGLTEXCOORD2DVPROC) func = (PFNGLTEXCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2dv");
  continue;
}

if(strcmp("glTexCoord2f",call_name)==0){
  (PFNGLTEXCOORD2FPROC) func = (PFNGLTEXCOORD2FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2f");
  continue;
}

if(strcmp("glTexCoord2fv",call_name)==0){
  (PFNGLTEXCOORD2FVPROC) func = (PFNGLTEXCOORD2FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2fv");
  continue;
}

if(strcmp("glTexCoord2i",call_name)==0){
  (PFNGLTEXCOORD2IPROC) func = (PFNGLTEXCOORD2IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2i");
  continue;
}

if(strcmp("glTexCoord2iv",call_name)==0){
  (PFNGLTEXCOORD2IVPROC) func = (PFNGLTEXCOORD2IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2iv");
  continue;
}

if(strcmp("glTexCoord2s",call_name)==0){
  (PFNGLTEXCOORD2SPROC) func = (PFNGLTEXCOORD2SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2s");
  continue;
}

if(strcmp("glTexCoord2sv",call_name)==0){
  (PFNGLTEXCOORD2SVPROC) func = (PFNGLTEXCOORD2SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2sv");
  continue;
}

if(strcmp("glTexCoord3d",call_name)==0){
  (PFNGLTEXCOORD3DPROC) func = (PFNGLTEXCOORD3DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3d");
  continue;
}

if(strcmp("glTexCoord3dv",call_name)==0){
  (PFNGLTEXCOORD3DVPROC) func = (PFNGLTEXCOORD3DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3dv");
  continue;
}

if(strcmp("glTexCoord3f",call_name)==0){
  (PFNGLTEXCOORD3FPROC) func = (PFNGLTEXCOORD3FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3f");
  continue;
}

if(strcmp("glTexCoord3fv",call_name)==0){
  (PFNGLTEXCOORD3FVPROC) func = (PFNGLTEXCOORD3FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3fv");
  continue;
}

if(strcmp("glTexCoord3i",call_name)==0){
  (PFNGLTEXCOORD3IPROC) func = (PFNGLTEXCOORD3IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3i");
  continue;
}

if(strcmp("glTexCoord3iv",call_name)==0){
  (PFNGLTEXCOORD3IVPROC) func = (PFNGLTEXCOORD3IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3iv");
  continue;
}

if(strcmp("glTexCoord3s",call_name)==0){
  (PFNGLTEXCOORD3SPROC) func = (PFNGLTEXCOORD3SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3s");
  continue;
}

if(strcmp("glTexCoord3sv",call_name)==0){
  (PFNGLTEXCOORD3SVPROC) func = (PFNGLTEXCOORD3SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3sv");
  continue;
}

if(strcmp("glTexCoord4d",call_name)==0){
  (PFNGLTEXCOORD4DPROC) func = (PFNGLTEXCOORD4DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4d");
  continue;
}

if(strcmp("glTexCoord4dv",call_name)==0){
  (PFNGLTEXCOORD4DVPROC) func = (PFNGLTEXCOORD4DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4dv");
  continue;
}

if(strcmp("glTexCoord4f",call_name)==0){
  (PFNGLTEXCOORD4FPROC) func = (PFNGLTEXCOORD4FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4f");
  continue;
}

if(strcmp("glTexCoord4fv",call_name)==0){
  (PFNGLTEXCOORD4FVPROC) func = (PFNGLTEXCOORD4FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4fv");
  continue;
}

if(strcmp("glTexCoord4i",call_name)==0){
  (PFNGLTEXCOORD4IPROC) func = (PFNGLTEXCOORD4IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4i");
  continue;
}

if(strcmp("glTexCoord4iv",call_name)==0){
  (PFNGLTEXCOORD4IVPROC) func = (PFNGLTEXCOORD4IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4iv");
  continue;
}

if(strcmp("glTexCoord4s",call_name)==0){
  (PFNGLTEXCOORD4SPROC) func = (PFNGLTEXCOORD4SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4s");
  continue;
}

if(strcmp("glTexCoord4sv",call_name)==0){
  (PFNGLTEXCOORD4SVPROC) func = (PFNGLTEXCOORD4SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4sv");
  continue;
}

if(strcmp("glVertex2d",call_name)==0){
  (PFNGLVERTEX2DPROC) func = (PFNGLVERTEX2DPROC)glXGetProcAddress((const GLubyte*)"glVertex2d");
  continue;
}

if(strcmp("glVertex2dv",call_name)==0){
  (PFNGLVERTEX2DVPROC) func = (PFNGLVERTEX2DVPROC)glXGetProcAddress((const GLubyte*)"glVertex2dv");
  continue;
}

if(strcmp("glVertex2f",call_name)==0){
  (PFNGLVERTEX2FPROC) func = (PFNGLVERTEX2FPROC)glXGetProcAddress((const GLubyte*)"glVertex2f");
  continue;
}

if(strcmp("glVertex2fv",call_name)==0){
  (PFNGLVERTEX2FVPROC) func = (PFNGLVERTEX2FVPROC)glXGetProcAddress((const GLubyte*)"glVertex2fv");
  continue;
}

if(strcmp("glVertex2i",call_name)==0){
  (PFNGLVERTEX2IPROC) func = (PFNGLVERTEX2IPROC)glXGetProcAddress((const GLubyte*)"glVertex2i");
  continue;
}

if(strcmp("glVertex2iv",call_name)==0){
  (PFNGLVERTEX2IVPROC) func = (PFNGLVERTEX2IVPROC)glXGetProcAddress((const GLubyte*)"glVertex2iv");
  continue;
}

if(strcmp("glVertex2s",call_name)==0){
  (PFNGLVERTEX2SPROC) func = (PFNGLVERTEX2SPROC)glXGetProcAddress((const GLubyte*)"glVertex2s");
  continue;
}

if(strcmp("glVertex2sv",call_name)==0){
  (PFNGLVERTEX2SVPROC) func = (PFNGLVERTEX2SVPROC)glXGetProcAddress((const GLubyte*)"glVertex2sv");
  continue;
}

if(strcmp("glVertex3d",call_name)==0){
  (PFNGLVERTEX3DPROC) func = (PFNGLVERTEX3DPROC)glXGetProcAddress((const GLubyte*)"glVertex3d");
  continue;
}

if(strcmp("glVertex3dv",call_name)==0){
  (PFNGLVERTEX3DVPROC) func = (PFNGLVERTEX3DVPROC)glXGetProcAddress((const GLubyte*)"glVertex3dv");
  continue;
}

if(strcmp("glVertex3f",call_name)==0){
  (PFNGLVERTEX3FPROC) func = (PFNGLVERTEX3FPROC)glXGetProcAddress((const GLubyte*)"glVertex3f");
  continue;
}

if(strcmp("glVertex3fv",call_name)==0){
  (PFNGLVERTEX3FVPROC) func = (PFNGLVERTEX3FVPROC)glXGetProcAddress((const GLubyte*)"glVertex3fv");
  continue;
}

if(strcmp("glVertex3i",call_name)==0){
  (PFNGLVERTEX3IPROC) func = (PFNGLVERTEX3IPROC)glXGetProcAddress((const GLubyte*)"glVertex3i");
  continue;
}

if(strcmp("glVertex3iv",call_name)==0){
  (PFNGLVERTEX3IVPROC) func = (PFNGLVERTEX3IVPROC)glXGetProcAddress((const GLubyte*)"glVertex3iv");
  continue;
}

if(strcmp("glVertex3s",call_name)==0){
  (PFNGLVERTEX3SPROC) func = (PFNGLVERTEX3SPROC)glXGetProcAddress((const GLubyte*)"glVertex3s");
  continue;
}

if(strcmp("glVertex3sv",call_name)==0){
  (PFNGLVERTEX3SVPROC) func = (PFNGLVERTEX3SVPROC)glXGetProcAddress((const GLubyte*)"glVertex3sv");
  continue;
}

if(strcmp("glVertex4d",call_name)==0){
  (PFNGLVERTEX4DPROC) func = (PFNGLVERTEX4DPROC)glXGetProcAddress((const GLubyte*)"glVertex4d");
  continue;
}

if(strcmp("glVertex4dv",call_name)==0){
  (PFNGLVERTEX4DVPROC) func = (PFNGLVERTEX4DVPROC)glXGetProcAddress((const GLubyte*)"glVertex4dv");
  continue;
}

if(strcmp("glVertex4f",call_name)==0){
  (PFNGLVERTEX4FPROC) func = (PFNGLVERTEX4FPROC)glXGetProcAddress((const GLubyte*)"glVertex4f");
  continue;
}

if(strcmp("glVertex4fv",call_name)==0){
  (PFNGLVERTEX4FVPROC) func = (PFNGLVERTEX4FVPROC)glXGetProcAddress((const GLubyte*)"glVertex4fv");
  continue;
}

if(strcmp("glVertex4i",call_name)==0){
  (PFNGLVERTEX4IPROC) func = (PFNGLVERTEX4IPROC)glXGetProcAddress((const GLubyte*)"glVertex4i");
  continue;
}

if(strcmp("glVertex4iv",call_name)==0){
  (PFNGLVERTEX4IVPROC) func = (PFNGLVERTEX4IVPROC)glXGetProcAddress((const GLubyte*)"glVertex4iv");
  continue;
}

if(strcmp("glVertex4s",call_name)==0){
  (PFNGLVERTEX4SPROC) func = (PFNGLVERTEX4SPROC)glXGetProcAddress((const GLubyte*)"glVertex4s");
  continue;
}

if(strcmp("glVertex4sv",call_name)==0){
  (PFNGLVERTEX4SVPROC) func = (PFNGLVERTEX4SVPROC)glXGetProcAddress((const GLubyte*)"glVertex4sv");
  continue;
}

if(strcmp("glClipPlane",call_name)==0){
  (PFNGLCLIPPLANEPROC) func = (PFNGLCLIPPLANEPROC)glXGetProcAddress((const GLubyte*)"glClipPlane");
  continue;
}

if(strcmp("glColorMaterial",call_name)==0){
  (PFNGLCOLORMATERIALPROC) func = (PFNGLCOLORMATERIALPROC)glXGetProcAddress((const GLubyte*)"glColorMaterial");
  continue;
}

if(strcmp("glCullFace",call_name)==0){
  (PFNGLCULLFACEPROC) func = (PFNGLCULLFACEPROC)glXGetProcAddress((const GLubyte*)"glCullFace");
  continue;
}

if(strcmp("glFogf",call_name)==0){
  (PFNGLFOGFPROC) func = (PFNGLFOGFPROC)glXGetProcAddress((const GLubyte*)"glFogf");
  continue;
}

if(strcmp("glFogfv",call_name)==0){
  (PFNGLFOGFVPROC) func = (PFNGLFOGFVPROC)glXGetProcAddress((const GLubyte*)"glFogfv");
  continue;
}

if(strcmp("glFogi",call_name)==0){
  (PFNGLFOGIPROC) func = (PFNGLFOGIPROC)glXGetProcAddress((const GLubyte*)"glFogi");
  continue;
}

if(strcmp("glFogiv",call_name)==0){
  (PFNGLFOGIVPROC) func = (PFNGLFOGIVPROC)glXGetProcAddress((const GLubyte*)"glFogiv");
  continue;
}

if(strcmp("glFrontFace",call_name)==0){
  (PFNGLFRONTFACEPROC) func = (PFNGLFRONTFACEPROC)glXGetProcAddress((const GLubyte*)"glFrontFace");
  continue;
}

if(strcmp("glHint",call_name)==0){
  (PFNGLHINTPROC) func = (PFNGLHINTPROC)glXGetProcAddress((const GLubyte*)"glHint");
  continue;
}

if(strcmp("glLightf",call_name)==0){
  (PFNGLLIGHTFPROC) func = (PFNGLLIGHTFPROC)glXGetProcAddress((const GLubyte*)"glLightf");
  continue;
}

if(strcmp("glLightfv",call_name)==0){
  (PFNGLLIGHTFVPROC) func = (PFNGLLIGHTFVPROC)glXGetProcAddress((const GLubyte*)"glLightfv");
  continue;
}

if(strcmp("glLighti",call_name)==0){
  (PFNGLLIGHTIPROC) func = (PFNGLLIGHTIPROC)glXGetProcAddress((const GLubyte*)"glLighti");
  continue;
}

if(strcmp("glLightiv",call_name)==0){
  (PFNGLLIGHTIVPROC) func = (PFNGLLIGHTIVPROC)glXGetProcAddress((const GLubyte*)"glLightiv");
  continue;
}

if(strcmp("glLightModelf",call_name)==0){
  (PFNGLLIGHTMODELFPROC) func = (PFNGLLIGHTMODELFPROC)glXGetProcAddress((const GLubyte*)"glLightModelf");
  continue;
}

if(strcmp("glLightModelfv",call_name)==0){
  (PFNGLLIGHTMODELFVPROC) func = (PFNGLLIGHTMODELFVPROC)glXGetProcAddress((const GLubyte*)"glLightModelfv");
  continue;
}

if(strcmp("glLightModeli",call_name)==0){
  (PFNGLLIGHTMODELIPROC) func = (PFNGLLIGHTMODELIPROC)glXGetProcAddress((const GLubyte*)"glLightModeli");
  continue;
}

if(strcmp("glLightModeliv",call_name)==0){
  (PFNGLLIGHTMODELIVPROC) func = (PFNGLLIGHTMODELIVPROC)glXGetProcAddress((const GLubyte*)"glLightModeliv");
  continue;
}

if(strcmp("glLineStipple",call_name)==0){
  (PFNGLLINESTIPPLEPROC) func = (PFNGLLINESTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glLineStipple");
  continue;
}

if(strcmp("glLineWidth",call_name)==0){
  (PFNGLLINEWIDTHPROC) func = (PFNGLLINEWIDTHPROC)glXGetProcAddress((const GLubyte*)"glLineWidth");
  continue;
}

if(strcmp("glMaterialf",call_name)==0){
  (PFNGLMATERIALFPROC) func = (PFNGLMATERIALFPROC)glXGetProcAddress((const GLubyte*)"glMaterialf");
  continue;
}

if(strcmp("glMaterialfv",call_name)==0){
  (PFNGLMATERIALFVPROC) func = (PFNGLMATERIALFVPROC)glXGetProcAddress((const GLubyte*)"glMaterialfv");
  continue;
}

if(strcmp("glMateriali",call_name)==0){
  (PFNGLMATERIALIPROC) func = (PFNGLMATERIALIPROC)glXGetProcAddress((const GLubyte*)"glMateriali");
  continue;
}

if(strcmp("glMaterialiv",call_name)==0){
  (PFNGLMATERIALIVPROC) func = (PFNGLMATERIALIVPROC)glXGetProcAddress((const GLubyte*)"glMaterialiv");
  continue;
}

if(strcmp("glPointSize",call_name)==0){
  (PFNGLPOINTSIZEPROC) func = (PFNGLPOINTSIZEPROC)glXGetProcAddress((const GLubyte*)"glPointSize");
  continue;
}

if(strcmp("glPolygonMode",call_name)==0){
  (PFNGLPOLYGONMODEPROC) func = (PFNGLPOLYGONMODEPROC)glXGetProcAddress((const GLubyte*)"glPolygonMode");
  continue;
}

if(strcmp("glPolygonStipple",call_name)==0){
  (PFNGLPOLYGONSTIPPLEPROC) func = (PFNGLPOLYGONSTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glPolygonStipple");
  continue;
}

if(strcmp("glScissor",call_name)==0){
  (PFNGLSCISSORPROC) func = (PFNGLSCISSORPROC)glXGetProcAddress((const GLubyte*)"glScissor");
  continue;
}

if(strcmp("glShadeModel",call_name)==0){
  (PFNGLSHADEMODELPROC) func = (PFNGLSHADEMODELPROC)glXGetProcAddress((const GLubyte*)"glShadeModel");
  continue;
}

if(strcmp("glTexParameterf",call_name)==0){
  (PFNGLTEXPARAMETERFPROC) func = (PFNGLTEXPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glTexParameterf");
  continue;
}

if(strcmp("glTexParameterfv",call_name)==0){
  (PFNGLTEXPARAMETERFVPROC) func = (PFNGLTEXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterfv");
  continue;
}

if(strcmp("glTexParameteri",call_name)==0){
  (PFNGLTEXPARAMETERIPROC) func = (PFNGLTEXPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glTexParameteri");
  continue;
}

if(strcmp("glTexParameteriv",call_name)==0){
  (PFNGLTEXPARAMETERIVPROC) func = (PFNGLTEXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameteriv");
  continue;
}

if(strcmp("glTexImage1D",call_name)==0){
  (PFNGLTEXIMAGE1DPROC) func = (PFNGLTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexImage1D");
  continue;
}

if(strcmp("glTexImage2D",call_name)==0){
  (PFNGLTEXIMAGE2DPROC) func = (PFNGLTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexImage2D");
  continue;
}

if(strcmp("glTexEnvf",call_name)==0){
  (PFNGLTEXENVFPROC) func = (PFNGLTEXENVFPROC)glXGetProcAddress((const GLubyte*)"glTexEnvf");
  continue;
}

if(strcmp("glTexEnvfv",call_name)==0){
  (PFNGLTEXENVFVPROC) func = (PFNGLTEXENVFVPROC)glXGetProcAddress((const GLubyte*)"glTexEnvfv");
  continue;
}

if(strcmp("glTexEnvi",call_name)==0){
  (PFNGLTEXENVIPROC) func = (PFNGLTEXENVIPROC)glXGetProcAddress((const GLubyte*)"glTexEnvi");
  continue;
}

if(strcmp("glTexEnviv",call_name)==0){
  (PFNGLTEXENVIVPROC) func = (PFNGLTEXENVIVPROC)glXGetProcAddress((const GLubyte*)"glTexEnviv");
  continue;
}

if(strcmp("glTexGend",call_name)==0){
  (PFNGLTEXGENDPROC) func = (PFNGLTEXGENDPROC)glXGetProcAddress((const GLubyte*)"glTexGend");
  continue;
}

if(strcmp("glTexGendv",call_name)==0){
  (PFNGLTEXGENDVPROC) func = (PFNGLTEXGENDVPROC)glXGetProcAddress((const GLubyte*)"glTexGendv");
  continue;
}

if(strcmp("glTexGenf",call_name)==0){
  (PFNGLTEXGENFPROC) func = (PFNGLTEXGENFPROC)glXGetProcAddress((const GLubyte*)"glTexGenf");
  continue;
}

if(strcmp("glTexGenfv",call_name)==0){
  (PFNGLTEXGENFVPROC) func = (PFNGLTEXGENFVPROC)glXGetProcAddress((const GLubyte*)"glTexGenfv");
  continue;
}

if(strcmp("glTexGeni",call_name)==0){
  (PFNGLTEXGENIPROC) func = (PFNGLTEXGENIPROC)glXGetProcAddress((const GLubyte*)"glTexGeni");
  continue;
}

if(strcmp("glTexGeniv",call_name)==0){
  (PFNGLTEXGENIVPROC) func = (PFNGLTEXGENIVPROC)glXGetProcAddress((const GLubyte*)"glTexGeniv");
  continue;
}

if(strcmp("glFeedbackBuffer",call_name)==0){
  (PFNGLFEEDBACKBUFFERPROC) func = (PFNGLFEEDBACKBUFFERPROC)glXGetProcAddress((const GLubyte*)"glFeedbackBuffer");
  continue;
}

if(strcmp("glSelectBuffer",call_name)==0){
  (PFNGLSELECTBUFFERPROC) func = (PFNGLSELECTBUFFERPROC)glXGetProcAddress((const GLubyte*)"glSelectBuffer");
  continue;
}

if(strcmp("glRenderMode",call_name)==0){
  (PFNGLRENDERMODEPROC) func = (PFNGLRENDERMODEPROC)glXGetProcAddress((const GLubyte*)"glRenderMode");
  continue;
}

if(strcmp("glInitNames",call_name)==0){
  (PFNGLINITNAMESPROC) func = (PFNGLINITNAMESPROC)glXGetProcAddress((const GLubyte*)"glInitNames");
  continue;
}

if(strcmp("glLoadName",call_name)==0){
  (PFNGLLOADNAMEPROC) func = (PFNGLLOADNAMEPROC)glXGetProcAddress((const GLubyte*)"glLoadName");
  continue;
}

if(strcmp("glPassThrough",call_name)==0){
  (PFNGLPASSTHROUGHPROC) func = (PFNGLPASSTHROUGHPROC)glXGetProcAddress((const GLubyte*)"glPassThrough");
  continue;
}

if(strcmp("glPopName",call_name)==0){
  (PFNGLPOPNAMEPROC) func = (PFNGLPOPNAMEPROC)glXGetProcAddress((const GLubyte*)"glPopName");
  continue;
}

if(strcmp("glPushName",call_name)==0){
  (PFNGLPUSHNAMEPROC) func = (PFNGLPUSHNAMEPROC)glXGetProcAddress((const GLubyte*)"glPushName");
  continue;
}

if(strcmp("glDrawBuffer",call_name)==0){
  (PFNGLDRAWBUFFERPROC) func = (PFNGLDRAWBUFFERPROC)glXGetProcAddress((const GLubyte*)"glDrawBuffer");
  continue;
}

if(strcmp("glClear",call_name)==0){
  (PFNGLCLEARPROC) func = (PFNGLCLEARPROC)glXGetProcAddress((const GLubyte*)"glClear");
  continue;
}

if(strcmp("glClearAccum",call_name)==0){
  (PFNGLCLEARACCUMPROC) func = (PFNGLCLEARACCUMPROC)glXGetProcAddress((const GLubyte*)"glClearAccum");
  continue;
}

if(strcmp("glClearIndex",call_name)==0){
  (PFNGLCLEARINDEXPROC) func = (PFNGLCLEARINDEXPROC)glXGetProcAddress((const GLubyte*)"glClearIndex");
  continue;
}

if(strcmp("glClearColor",call_name)==0){
  (PFNGLCLEARCOLORPROC) func = (PFNGLCLEARCOLORPROC)glXGetProcAddress((const GLubyte*)"glClearColor");
  continue;
}

if(strcmp("glClearStencil",call_name)==0){
  (PFNGLCLEARSTENCILPROC) func = (PFNGLCLEARSTENCILPROC)glXGetProcAddress((const GLubyte*)"glClearStencil");
  continue;
}

if(strcmp("glClearDepth",call_name)==0){
  (PFNGLCLEARDEPTHPROC) func = (PFNGLCLEARDEPTHPROC)glXGetProcAddress((const GLubyte*)"glClearDepth");
  continue;
}

if(strcmp("glStencilMask",call_name)==0){
  (PFNGLSTENCILMASKPROC) func = (PFNGLSTENCILMASKPROC)glXGetProcAddress((const GLubyte*)"glStencilMask");
  continue;
}

if(strcmp("glColorMask",call_name)==0){
  (PFNGLCOLORMASKPROC) func = (PFNGLCOLORMASKPROC)glXGetProcAddress((const GLubyte*)"glColorMask");
  continue;
}

if(strcmp("glDepthMask",call_name)==0){
  (PFNGLDEPTHMASKPROC) func = (PFNGLDEPTHMASKPROC)glXGetProcAddress((const GLubyte*)"glDepthMask");
  continue;
}

if(strcmp("glIndexMask",call_name)==0){
  (PFNGLINDEXMASKPROC) func = (PFNGLINDEXMASKPROC)glXGetProcAddress((const GLubyte*)"glIndexMask");
  continue;
}

if(strcmp("glAccum",call_name)==0){
  (PFNGLACCUMPROC) func = (PFNGLACCUMPROC)glXGetProcAddress((const GLubyte*)"glAccum");
  continue;
}

if(strcmp("glDisable",call_name)==0){
  (PFNGLDISABLEPROC) func = (PFNGLDISABLEPROC)glXGetProcAddress((const GLubyte*)"glDisable");
  continue;
}

if(strcmp("glEnable",call_name)==0){
  (PFNGLENABLEPROC) func = (PFNGLENABLEPROC)glXGetProcAddress((const GLubyte*)"glEnable");
  continue;
}

if(strcmp("glFinish",call_name)==0){
  (PFNGLFINISHPROC) func = (PFNGLFINISHPROC)glXGetProcAddress((const GLubyte*)"glFinish");
  continue;
}

if(strcmp("glFlush",call_name)==0){
  (PFNGLFLUSHPROC) func = (PFNGLFLUSHPROC)glXGetProcAddress((const GLubyte*)"glFlush");
  continue;
}

if(strcmp("glPopAttrib",call_name)==0){
  (PFNGLPOPATTRIBPROC) func = (PFNGLPOPATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPopAttrib");
  continue;
}

if(strcmp("glPushAttrib",call_name)==0){
  (PFNGLPUSHATTRIBPROC) func = (PFNGLPUSHATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPushAttrib");
  continue;
}

if(strcmp("glMap1d",call_name)==0){
  (PFNGLMAP1DPROC) func = (PFNGLMAP1DPROC)glXGetProcAddress((const GLubyte*)"glMap1d");
  continue;
}

if(strcmp("glMap1f",call_name)==0){
  (PFNGLMAP1FPROC) func = (PFNGLMAP1FPROC)glXGetProcAddress((const GLubyte*)"glMap1f");
  continue;
}

if(strcmp("glMap2d",call_name)==0){
  (PFNGLMAP2DPROC) func = (PFNGLMAP2DPROC)glXGetProcAddress((const GLubyte*)"glMap2d");
  continue;
}

if(strcmp("glMap2f",call_name)==0){
  (PFNGLMAP2FPROC) func = (PFNGLMAP2FPROC)glXGetProcAddress((const GLubyte*)"glMap2f");
  continue;
}

if(strcmp("glMapGrid1d",call_name)==0){
  (PFNGLMAPGRID1DPROC) func = (PFNGLMAPGRID1DPROC)glXGetProcAddress((const GLubyte*)"glMapGrid1d");
  continue;
}

if(strcmp("glMapGrid1f",call_name)==0){
  (PFNGLMAPGRID1FPROC) func = (PFNGLMAPGRID1FPROC)glXGetProcAddress((const GLubyte*)"glMapGrid1f");
  continue;
}

if(strcmp("glMapGrid2d",call_name)==0){
  (PFNGLMAPGRID2DPROC) func = (PFNGLMAPGRID2DPROC)glXGetProcAddress((const GLubyte*)"glMapGrid2d");
  continue;
}

if(strcmp("glMapGrid2f",call_name)==0){
  (PFNGLMAPGRID2FPROC) func = (PFNGLMAPGRID2FPROC)glXGetProcAddress((const GLubyte*)"glMapGrid2f");
  continue;
}

if(strcmp("glEvalCoord1d",call_name)==0){
  (PFNGLEVALCOORD1DPROC) func = (PFNGLEVALCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1d");
  continue;
}

if(strcmp("glEvalCoord1dv",call_name)==0){
  (PFNGLEVALCOORD1DVPROC) func = (PFNGLEVALCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1dv");
  continue;
}

if(strcmp("glEvalCoord1f",call_name)==0){
  (PFNGLEVALCOORD1FPROC) func = (PFNGLEVALCOORD1FPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1f");
  continue;
}

if(strcmp("glEvalCoord1fv",call_name)==0){
  (PFNGLEVALCOORD1FVPROC) func = (PFNGLEVALCOORD1FVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1fv");
  continue;
}

if(strcmp("glEvalCoord2d",call_name)==0){
  (PFNGLEVALCOORD2DPROC) func = (PFNGLEVALCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2d");
  continue;
}

if(strcmp("glEvalCoord2dv",call_name)==0){
  (PFNGLEVALCOORD2DVPROC) func = (PFNGLEVALCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2dv");
  continue;
}

if(strcmp("glEvalCoord2f",call_name)==0){
  (PFNGLEVALCOORD2FPROC) func = (PFNGLEVALCOORD2FPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2f");
  continue;
}

if(strcmp("glEvalCoord2fv",call_name)==0){
  (PFNGLEVALCOORD2FVPROC) func = (PFNGLEVALCOORD2FVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2fv");
  continue;
}

if(strcmp("glEvalMesh1",call_name)==0){
  (PFNGLEVALMESH1PROC) func = (PFNGLEVALMESH1PROC)glXGetProcAddress((const GLubyte*)"glEvalMesh1");
  continue;
}

if(strcmp("glEvalPoint1",call_name)==0){
  (PFNGLEVALPOINT1PROC) func = (PFNGLEVALPOINT1PROC)glXGetProcAddress((const GLubyte*)"glEvalPoint1");
  continue;
}

if(strcmp("glEvalMesh2",call_name)==0){
  (PFNGLEVALMESH2PROC) func = (PFNGLEVALMESH2PROC)glXGetProcAddress((const GLubyte*)"glEvalMesh2");
  continue;
}

if(strcmp("glEvalPoint2",call_name)==0){
  (PFNGLEVALPOINT2PROC) func = (PFNGLEVALPOINT2PROC)glXGetProcAddress((const GLubyte*)"glEvalPoint2");
  continue;
}

if(strcmp("glAlphaFunc",call_name)==0){
  (PFNGLALPHAFUNCPROC) func = (PFNGLALPHAFUNCPROC)glXGetProcAddress((const GLubyte*)"glAlphaFunc");
  continue;
}

if(strcmp("glBlendFunc",call_name)==0){
  (PFNGLBLENDFUNCPROC) func = (PFNGLBLENDFUNCPROC)glXGetProcAddress((const GLubyte*)"glBlendFunc");
  continue;
}

if(strcmp("glLogicOp",call_name)==0){
  (PFNGLLOGICOPPROC) func = (PFNGLLOGICOPPROC)glXGetProcAddress((const GLubyte*)"glLogicOp");
  continue;
}

if(strcmp("glStencilFunc",call_name)==0){
  (PFNGLSTENCILFUNCPROC) func = (PFNGLSTENCILFUNCPROC)glXGetProcAddress((const GLubyte*)"glStencilFunc");
  continue;
}

if(strcmp("glStencilOp",call_name)==0){
  (PFNGLSTENCILOPPROC) func = (PFNGLSTENCILOPPROC)glXGetProcAddress((const GLubyte*)"glStencilOp");
  continue;
}

if(strcmp("glDepthFunc",call_name)==0){
  (PFNGLDEPTHFUNCPROC) func = (PFNGLDEPTHFUNCPROC)glXGetProcAddress((const GLubyte*)"glDepthFunc");
  continue;
}

if(strcmp("glPixelZoom",call_name)==0){
  (PFNGLPIXELZOOMPROC) func = (PFNGLPIXELZOOMPROC)glXGetProcAddress((const GLubyte*)"glPixelZoom");
  continue;
}

if(strcmp("glPixelTransferf",call_name)==0){
  (PFNGLPIXELTRANSFERFPROC) func = (PFNGLPIXELTRANSFERFPROC)glXGetProcAddress((const GLubyte*)"glPixelTransferf");
  continue;
}

if(strcmp("glPixelTransferi",call_name)==0){
  (PFNGLPIXELTRANSFERIPROC) func = (PFNGLPIXELTRANSFERIPROC)glXGetProcAddress((const GLubyte*)"glPixelTransferi");
  continue;
}

if(strcmp("glPixelStoref",call_name)==0){
  (PFNGLPIXELSTOREFPROC) func = (PFNGLPIXELSTOREFPROC)glXGetProcAddress((const GLubyte*)"glPixelStoref");
  continue;
}

if(strcmp("glPixelStorei",call_name)==0){
  (PFNGLPIXELSTOREIPROC) func = (PFNGLPIXELSTOREIPROC)glXGetProcAddress((const GLubyte*)"glPixelStorei");
  continue;
}

if(strcmp("glPixelMapfv",call_name)==0){
  (PFNGLPIXELMAPFVPROC) func = (PFNGLPIXELMAPFVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapfv");
  continue;
}

if(strcmp("glPixelMapuiv",call_name)==0){
  (PFNGLPIXELMAPUIVPROC) func = (PFNGLPIXELMAPUIVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapuiv");
  continue;
}

if(strcmp("glPixelMapusv",call_name)==0){
  (PFNGLPIXELMAPUSVPROC) func = (PFNGLPIXELMAPUSVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapusv");
  continue;
}

if(strcmp("glReadBuffer",call_name)==0){
  (PFNGLREADBUFFERPROC) func = (PFNGLREADBUFFERPROC)glXGetProcAddress((const GLubyte*)"glReadBuffer");
  continue;
}

if(strcmp("glCopyPixels",call_name)==0){
  (PFNGLCOPYPIXELSPROC) func = (PFNGLCOPYPIXELSPROC)glXGetProcAddress((const GLubyte*)"glCopyPixels");
  continue;
}

if(strcmp("glReadPixels",call_name)==0){
  (PFNGLREADPIXELSPROC) func = (PFNGLREADPIXELSPROC)glXGetProcAddress((const GLubyte*)"glReadPixels");
  continue;
}

if(strcmp("glDrawPixels",call_name)==0){
  (PFNGLDRAWPIXELSPROC) func = (PFNGLDRAWPIXELSPROC)glXGetProcAddress((const GLubyte*)"glDrawPixels");
  continue;
}

if(strcmp("glGetBooleanv",call_name)==0){
  (PFNGLGETBOOLEANVPROC) func = (PFNGLGETBOOLEANVPROC)glXGetProcAddress((const GLubyte*)"glGetBooleanv");
  continue;
}

if(strcmp("glGetClipPlane",call_name)==0){
  (PFNGLGETCLIPPLANEPROC) func = (PFNGLGETCLIPPLANEPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlane");
  continue;
}

if(strcmp("glGetDoublev",call_name)==0){
  (PFNGLGETDOUBLEVPROC) func = (PFNGLGETDOUBLEVPROC)glXGetProcAddress((const GLubyte*)"glGetDoublev");
  continue;
}

if(strcmp("glGetError",call_name)==0){
  (PFNGLGETERRORPROC) func = (PFNGLGETERRORPROC)glXGetProcAddress((const GLubyte*)"glGetError");
  continue;
}

if(strcmp("glGetFloatv",call_name)==0){
  (PFNGLGETFLOATVPROC) func = (PFNGLGETFLOATVPROC)glXGetProcAddress((const GLubyte*)"glGetFloatv");
  continue;
}

if(strcmp("glGetIntegerv",call_name)==0){
  (PFNGLGETINTEGERVPROC) func = (PFNGLGETINTEGERVPROC)glXGetProcAddress((const GLubyte*)"glGetIntegerv");
  continue;
}

if(strcmp("glGetLightfv",call_name)==0){
  (PFNGLGETLIGHTFVPROC) func = (PFNGLGETLIGHTFVPROC)glXGetProcAddress((const GLubyte*)"glGetLightfv");
  continue;
}

if(strcmp("glGetLightiv",call_name)==0){
  (PFNGLGETLIGHTIVPROC) func = (PFNGLGETLIGHTIVPROC)glXGetProcAddress((const GLubyte*)"glGetLightiv");
  continue;
}

if(strcmp("glGetMapdv",call_name)==0){
  (PFNGLGETMAPDVPROC) func = (PFNGLGETMAPDVPROC)glXGetProcAddress((const GLubyte*)"glGetMapdv");
  continue;
}

if(strcmp("glGetMapfv",call_name)==0){
  (PFNGLGETMAPFVPROC) func = (PFNGLGETMAPFVPROC)glXGetProcAddress((const GLubyte*)"glGetMapfv");
  continue;
}

if(strcmp("glGetMapiv",call_name)==0){
  (PFNGLGETMAPIVPROC) func = (PFNGLGETMAPIVPROC)glXGetProcAddress((const GLubyte*)"glGetMapiv");
  continue;
}

if(strcmp("glGetMaterialfv",call_name)==0){
  (PFNGLGETMATERIALFVPROC) func = (PFNGLGETMATERIALFVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialfv");
  continue;
}

if(strcmp("glGetMaterialiv",call_name)==0){
  (PFNGLGETMATERIALIVPROC) func = (PFNGLGETMATERIALIVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialiv");
  continue;
}

if(strcmp("glGetPixelMapfv",call_name)==0){
  (PFNGLGETPIXELMAPFVPROC) func = (PFNGLGETPIXELMAPFVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapfv");
  continue;
}

if(strcmp("glGetPixelMapuiv",call_name)==0){
  (PFNGLGETPIXELMAPUIVPROC) func = (PFNGLGETPIXELMAPUIVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapuiv");
  continue;
}

if(strcmp("glGetPixelMapusv",call_name)==0){
  (PFNGLGETPIXELMAPUSVPROC) func = (PFNGLGETPIXELMAPUSVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapusv");
  continue;
}

if(strcmp("glGetPolygonStipple",call_name)==0){
  (PFNGLGETPOLYGONSTIPPLEPROC) func = (PFNGLGETPOLYGONSTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glGetPolygonStipple");
  continue;
}

if(strcmp("glGetString",call_name)==0){
  (PFNGLGETSTRINGPROC) func = (PFNGLGETSTRINGPROC)glXGetProcAddress((const GLubyte*)"glGetString");
  continue;
}

if(strcmp("glGetTexEnvfv",call_name)==0){
  (PFNGLGETTEXENVFVPROC) func = (PFNGLGETTEXENVFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnvfv");
  continue;
}

if(strcmp("glGetTexEnviv",call_name)==0){
  (PFNGLGETTEXENVIVPROC) func = (PFNGLGETTEXENVIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnviv");
  continue;
}

if(strcmp("glGetTexGendv",call_name)==0){
  (PFNGLGETTEXGENDVPROC) func = (PFNGLGETTEXGENDVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGendv");
  continue;
}

if(strcmp("glGetTexGenfv",call_name)==0){
  (PFNGLGETTEXGENFVPROC) func = (PFNGLGETTEXGENFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGenfv");
  continue;
}

if(strcmp("glGetTexGeniv",call_name)==0){
  (PFNGLGETTEXGENIVPROC) func = (PFNGLGETTEXGENIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGeniv");
  continue;
}

if(strcmp("glGetTexImage",call_name)==0){
  (PFNGLGETTEXIMAGEPROC) func = (PFNGLGETTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTexImage");
  continue;
}

if(strcmp("glGetTexParameterfv",call_name)==0){
  (PFNGLGETTEXPARAMETERFVPROC) func = (PFNGLGETTEXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterfv");
  continue;
}

if(strcmp("glGetTexParameteriv",call_name)==0){
  (PFNGLGETTEXPARAMETERIVPROC) func = (PFNGLGETTEXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameteriv");
  continue;
}

if(strcmp("glGetTexLevelParameterfv",call_name)==0){
  (PFNGLGETTEXLEVELPARAMETERFVPROC) func = (PFNGLGETTEXLEVELPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexLevelParameterfv");
  continue;
}

if(strcmp("glGetTexLevelParameteriv",call_name)==0){
  (PFNGLGETTEXLEVELPARAMETERIVPROC) func = (PFNGLGETTEXLEVELPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexLevelParameteriv");
  continue;
}

if(strcmp("glIsEnabled",call_name)==0){
  (PFNGLISENABLEDPROC) func = (PFNGLISENABLEDPROC)glXGetProcAddress((const GLubyte*)"glIsEnabled");
  continue;
}

if(strcmp("glIsList",call_name)==0){
  (PFNGLISLISTPROC) func = (PFNGLISLISTPROC)glXGetProcAddress((const GLubyte*)"glIsList");
  continue;
}

if(strcmp("glDepthRange",call_name)==0){
  (PFNGLDEPTHRANGEPROC) func = (PFNGLDEPTHRANGEPROC)glXGetProcAddress((const GLubyte*)"glDepthRange");
  continue;
}

if(strcmp("glFrustum",call_name)==0){
  (PFNGLFRUSTUMPROC) func = (PFNGLFRUSTUMPROC)glXGetProcAddress((const GLubyte*)"glFrustum");
  continue;
}

if(strcmp("glLoadIdentity",call_name)==0){
  (PFNGLLOADIDENTITYPROC) func = (PFNGLLOADIDENTITYPROC)glXGetProcAddress((const GLubyte*)"glLoadIdentity");
  continue;
}

if(strcmp("glLoadMatrixf",call_name)==0){
  (PFNGLLOADMATRIXFPROC) func = (PFNGLLOADMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixf");
  continue;
}

if(strcmp("glLoadMatrixd",call_name)==0){
  (PFNGLLOADMATRIXDPROC) func = (PFNGLLOADMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixd");
  continue;
}

if(strcmp("glMatrixMode",call_name)==0){
  (PFNGLMATRIXMODEPROC) func = (PFNGLMATRIXMODEPROC)glXGetProcAddress((const GLubyte*)"glMatrixMode");
  continue;
}

if(strcmp("glMultMatrixf",call_name)==0){
  (PFNGLMULTMATRIXFPROC) func = (PFNGLMULTMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixf");
  continue;
}

if(strcmp("glMultMatrixd",call_name)==0){
  (PFNGLMULTMATRIXDPROC) func = (PFNGLMULTMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixd");
  continue;
}

if(strcmp("glOrtho",call_name)==0){
  (PFNGLORTHOPROC) func = (PFNGLORTHOPROC)glXGetProcAddress((const GLubyte*)"glOrtho");
  continue;
}

if(strcmp("glPopMatrix",call_name)==0){
  (PFNGLPOPMATRIXPROC) func = (PFNGLPOPMATRIXPROC)glXGetProcAddress((const GLubyte*)"glPopMatrix");
  continue;
}

if(strcmp("glPushMatrix",call_name)==0){
  (PFNGLPUSHMATRIXPROC) func = (PFNGLPUSHMATRIXPROC)glXGetProcAddress((const GLubyte*)"glPushMatrix");
  continue;
}

if(strcmp("glRotated",call_name)==0){
  (PFNGLROTATEDPROC) func = (PFNGLROTATEDPROC)glXGetProcAddress((const GLubyte*)"glRotated");
  continue;
}

if(strcmp("glRotatef",call_name)==0){
  (PFNGLROTATEFPROC) func = (PFNGLROTATEFPROC)glXGetProcAddress((const GLubyte*)"glRotatef");
  continue;
}

if(strcmp("glScaled",call_name)==0){
  (PFNGLSCALEDPROC) func = (PFNGLSCALEDPROC)glXGetProcAddress((const GLubyte*)"glScaled");
  continue;
}

if(strcmp("glScalef",call_name)==0){
  (PFNGLSCALEFPROC) func = (PFNGLSCALEFPROC)glXGetProcAddress((const GLubyte*)"glScalef");
  continue;
}

if(strcmp("glTranslated",call_name)==0){
  (PFNGLTRANSLATEDPROC) func = (PFNGLTRANSLATEDPROC)glXGetProcAddress((const GLubyte*)"glTranslated");
  continue;
}

if(strcmp("glTranslatef",call_name)==0){
  (PFNGLTRANSLATEFPROC) func = (PFNGLTRANSLATEFPROC)glXGetProcAddress((const GLubyte*)"glTranslatef");
  continue;
}

if(strcmp("glViewport",call_name)==0){
  (PFNGLVIEWPORTPROC) func = (PFNGLVIEWPORTPROC)glXGetProcAddress((const GLubyte*)"glViewport");
  continue;
}

if(strcmp("glArrayElement",call_name)==0){
  (PFNGLARRAYELEMENTPROC) func = (PFNGLARRAYELEMENTPROC)glXGetProcAddress((const GLubyte*)"glArrayElement");
  continue;
}

if(strcmp("glBindTexture",call_name)==0){
  (PFNGLBINDTEXTUREPROC) func = (PFNGLBINDTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glBindTexture");
  continue;
}

if(strcmp("glColorPointer",call_name)==0){
  (PFNGLCOLORPOINTERPROC) func = (PFNGLCOLORPOINTERPROC)glXGetProcAddress((const GLubyte*)"glColorPointer");
  continue;
}

if(strcmp("glDisableClientState",call_name)==0){
  (PFNGLDISABLECLIENTSTATEPROC) func = (PFNGLDISABLECLIENTSTATEPROC)glXGetProcAddress((const GLubyte*)"glDisableClientState");
  continue;
}

if(strcmp("glDrawArrays",call_name)==0){
  (PFNGLDRAWARRAYSPROC) func = (PFNGLDRAWARRAYSPROC)glXGetProcAddress((const GLubyte*)"glDrawArrays");
  continue;
}

if(strcmp("glDrawElements",call_name)==0){
  (PFNGLDRAWELEMENTSPROC) func = (PFNGLDRAWELEMENTSPROC)glXGetProcAddress((const GLubyte*)"glDrawElements");
  continue;
}

if(strcmp("glEdgeFlagPointer",call_name)==0){
  (PFNGLEDGEFLAGPOINTERPROC) func = (PFNGLEDGEFLAGPOINTERPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagPointer");
  continue;
}

if(strcmp("glEnableClientState",call_name)==0){
  (PFNGLENABLECLIENTSTATEPROC) func = (PFNGLENABLECLIENTSTATEPROC)glXGetProcAddress((const GLubyte*)"glEnableClientState");
  continue;
}

if(strcmp("glIndexPointer",call_name)==0){
  (PFNGLINDEXPOINTERPROC) func = (PFNGLINDEXPOINTERPROC)glXGetProcAddress((const GLubyte*)"glIndexPointer");
  continue;
}

if(strcmp("glIndexub",call_name)==0){
  (PFNGLINDEXUBPROC) func = (PFNGLINDEXUBPROC)glXGetProcAddress((const GLubyte*)"glIndexub");
  continue;
}

if(strcmp("glIndexubv",call_name)==0){
  (PFNGLINDEXUBVPROC) func = (PFNGLINDEXUBVPROC)glXGetProcAddress((const GLubyte*)"glIndexubv");
  continue;
}

if(strcmp("glInterleavedArrays",call_name)==0){
  (PFNGLINTERLEAVEDARRAYSPROC) func = (PFNGLINTERLEAVEDARRAYSPROC)glXGetProcAddress((const GLubyte*)"glInterleavedArrays");
  continue;
}

if(strcmp("glNormalPointer",call_name)==0){
  (PFNGLNORMALPOINTERPROC) func = (PFNGLNORMALPOINTERPROC)glXGetProcAddress((const GLubyte*)"glNormalPointer");
  continue;
}

if(strcmp("glPolygonOffset",call_name)==0){
  (PFNGLPOLYGONOFFSETPROC) func = (PFNGLPOLYGONOFFSETPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffset");
  continue;
}

if(strcmp("glTexCoordPointer",call_name)==0){
  (PFNGLTEXCOORDPOINTERPROC) func = (PFNGLTEXCOORDPOINTERPROC)glXGetProcAddress((const GLubyte*)"glTexCoordPointer");
  continue;
}

if(strcmp("glVertexPointer",call_name)==0){
  (PFNGLVERTEXPOINTERPROC) func = (PFNGLVERTEXPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexPointer");
  continue;
}

if(strcmp("glAreTexturesResident",call_name)==0){
  (PFNGLARETEXTURESRESIDENTPROC) func = (PFNGLARETEXTURESRESIDENTPROC)glXGetProcAddress((const GLubyte*)"glAreTexturesResident");
  continue;
}

if(strcmp("glCopyTexImage1D",call_name)==0){
  (PFNGLCOPYTEXIMAGE1DPROC) func = (PFNGLCOPYTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexImage1D");
  continue;
}

if(strcmp("glCopyTexImage2D",call_name)==0){
  (PFNGLCOPYTEXIMAGE2DPROC) func = (PFNGLCOPYTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexImage2D");
  continue;
}

if(strcmp("glCopyTexSubImage1D",call_name)==0){
  (PFNGLCOPYTEXSUBIMAGE1DPROC) func = (PFNGLCOPYTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage1D");
  continue;
}

if(strcmp("glCopyTexSubImage2D",call_name)==0){
  (PFNGLCOPYTEXSUBIMAGE2DPROC) func = (PFNGLCOPYTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage2D");
  continue;
}

if(strcmp("glDeleteTextures",call_name)==0){
  (PFNGLDELETETEXTURESPROC) func = (PFNGLDELETETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glDeleteTextures");
  continue;
}

if(strcmp("glGenTextures",call_name)==0){
  (PFNGLGENTEXTURESPROC) func = (PFNGLGENTEXTURESPROC)glXGetProcAddress((const GLubyte*)"glGenTextures");
  continue;
}

if(strcmp("glGetPointerv",call_name)==0){
  (PFNGLGETPOINTERVPROC) func = (PFNGLGETPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetPointerv");
  continue;
}

if(strcmp("glIsTexture",call_name)==0){
  (PFNGLISTEXTUREPROC) func = (PFNGLISTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glIsTexture");
  continue;
}

if(strcmp("glPrioritizeTextures",call_name)==0){
  (PFNGLPRIORITIZETEXTURESPROC) func = (PFNGLPRIORITIZETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glPrioritizeTextures");
  continue;
}

if(strcmp("glTexSubImage1D",call_name)==0){
  (PFNGLTEXSUBIMAGE1DPROC) func = (PFNGLTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage1D");
  continue;
}

if(strcmp("glTexSubImage2D",call_name)==0){
  (PFNGLTEXSUBIMAGE2DPROC) func = (PFNGLTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage2D");
  continue;
}

if(strcmp("glPopClientAttrib",call_name)==0){
  (PFNGLPOPCLIENTATTRIBPROC) func = (PFNGLPOPCLIENTATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPopClientAttrib");
  continue;
}

if(strcmp("glPushClientAttrib",call_name)==0){
  (PFNGLPUSHCLIENTATTRIBPROC) func = (PFNGLPUSHCLIENTATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPushClientAttrib");
  continue;
}

if(strcmp("glBlendColor",call_name)==0){
  (PFNGLBLENDCOLORPROC) func = (PFNGLBLENDCOLORPROC)glXGetProcAddress((const GLubyte*)"glBlendColor");
  continue;
}

if(strcmp("glBlendEquation",call_name)==0){
  (PFNGLBLENDEQUATIONPROC) func = (PFNGLBLENDEQUATIONPROC)glXGetProcAddress((const GLubyte*)"glBlendEquation");
  continue;
}

if(strcmp("glDrawRangeElements",call_name)==0){
  (PFNGLDRAWRANGEELEMENTSPROC) func = (PFNGLDRAWRANGEELEMENTSPROC)glXGetProcAddress((const GLubyte*)"glDrawRangeElements");
  continue;
}

if(strcmp("glColorTable",call_name)==0){
  (PFNGLCOLORTABLEPROC) func = (PFNGLCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glColorTable");
  continue;
}

if(strcmp("glColorTableParameterfv",call_name)==0){
  (PFNGLCOLORTABLEPARAMETERFVPROC) func = (PFNGLCOLORTABLEPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glColorTableParameterfv");
  continue;
}

if(strcmp("glColorTableParameteriv",call_name)==0){
  (PFNGLCOLORTABLEPARAMETERIVPROC) func = (PFNGLCOLORTABLEPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glColorTableParameteriv");
  continue;
}

if(strcmp("glCopyColorTable",call_name)==0){
  (PFNGLCOPYCOLORTABLEPROC) func = (PFNGLCOPYCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glCopyColorTable");
  continue;
}

if(strcmp("glGetColorTable",call_name)==0){
  (PFNGLGETCOLORTABLEPROC) func = (PFNGLGETCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glGetColorTable");
  continue;
}

if(strcmp("glGetColorTableParameterfv",call_name)==0){
  (PFNGLGETCOLORTABLEPARAMETERFVPROC) func = (PFNGLGETCOLORTABLEPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetColorTableParameterfv");
  continue;
}

if(strcmp("glGetColorTableParameteriv",call_name)==0){
  (PFNGLGETCOLORTABLEPARAMETERIVPROC) func = (PFNGLGETCOLORTABLEPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetColorTableParameteriv");
  continue;
}

if(strcmp("glColorSubTable",call_name)==0){
  (PFNGLCOLORSUBTABLEPROC) func = (PFNGLCOLORSUBTABLEPROC)glXGetProcAddress((const GLubyte*)"glColorSubTable");
  continue;
}

if(strcmp("glCopyColorSubTable",call_name)==0){
  (PFNGLCOPYCOLORSUBTABLEPROC) func = (PFNGLCOPYCOLORSUBTABLEPROC)glXGetProcAddress((const GLubyte*)"glCopyColorSubTable");
  continue;
}

if(strcmp("glConvolutionFilter1D",call_name)==0){
  (PFNGLCONVOLUTIONFILTER1DPROC) func = (PFNGLCONVOLUTIONFILTER1DPROC)glXGetProcAddress((const GLubyte*)"glConvolutionFilter1D");
  continue;
}

if(strcmp("glConvolutionFilter2D",call_name)==0){
  (PFNGLCONVOLUTIONFILTER2DPROC) func = (PFNGLCONVOLUTIONFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glConvolutionFilter2D");
  continue;
}

if(strcmp("glConvolutionParameterf",call_name)==0){
  (PFNGLCONVOLUTIONPARAMETERFPROC) func = (PFNGLCONVOLUTIONPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameterf");
  continue;
}

if(strcmp("glConvolutionParameterfv",call_name)==0){
  (PFNGLCONVOLUTIONPARAMETERFVPROC) func = (PFNGLCONVOLUTIONPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameterfv");
  continue;
}

if(strcmp("glConvolutionParameteri",call_name)==0){
  (PFNGLCONVOLUTIONPARAMETERIPROC) func = (PFNGLCONVOLUTIONPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameteri");
  continue;
}

if(strcmp("glConvolutionParameteriv",call_name)==0){
  (PFNGLCONVOLUTIONPARAMETERIVPROC) func = (PFNGLCONVOLUTIONPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameteriv");
  continue;
}

if(strcmp("glCopyConvolutionFilter1D",call_name)==0){
  (PFNGLCOPYCONVOLUTIONFILTER1DPROC) func = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)glXGetProcAddress((const GLubyte*)"glCopyConvolutionFilter1D");
  continue;
}

if(strcmp("glCopyConvolutionFilter2D",call_name)==0){
  (PFNGLCOPYCONVOLUTIONFILTER2DPROC) func = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glCopyConvolutionFilter2D");
  continue;
}

if(strcmp("glGetConvolutionFilter",call_name)==0){
  (PFNGLGETCONVOLUTIONFILTERPROC) func = (PFNGLGETCONVOLUTIONFILTERPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionFilter");
  continue;
}

if(strcmp("glGetConvolutionParameterfv",call_name)==0){
  (PFNGLGETCONVOLUTIONPARAMETERFVPROC) func = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionParameterfv");
  continue;
}

if(strcmp("glGetConvolutionParameteriv",call_name)==0){
  (PFNGLGETCONVOLUTIONPARAMETERIVPROC) func = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionParameteriv");
  continue;
}

if(strcmp("glGetSeparableFilter",call_name)==0){
  (PFNGLGETSEPARABLEFILTERPROC) func = (PFNGLGETSEPARABLEFILTERPROC)glXGetProcAddress((const GLubyte*)"glGetSeparableFilter");
  continue;
}

if(strcmp("glSeparableFilter2D",call_name)==0){
  (PFNGLSEPARABLEFILTER2DPROC) func = (PFNGLSEPARABLEFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glSeparableFilter2D");
  continue;
}

if(strcmp("glGetHistogram",call_name)==0){
  (PFNGLGETHISTOGRAMPROC) func = (PFNGLGETHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glGetHistogram");
  continue;
}

if(strcmp("glGetHistogramParameterfv",call_name)==0){
  (PFNGLGETHISTOGRAMPARAMETERFVPROC) func = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetHistogramParameterfv");
  continue;
}

if(strcmp("glGetHistogramParameteriv",call_name)==0){
  (PFNGLGETHISTOGRAMPARAMETERIVPROC) func = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetHistogramParameteriv");
  continue;
}

if(strcmp("glGetMinmax",call_name)==0){
  (PFNGLGETMINMAXPROC) func = (PFNGLGETMINMAXPROC)glXGetProcAddress((const GLubyte*)"glGetMinmax");
  continue;
}

if(strcmp("glGetMinmaxParameterfv",call_name)==0){
  (PFNGLGETMINMAXPARAMETERFVPROC) func = (PFNGLGETMINMAXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetMinmaxParameterfv");
  continue;
}

if(strcmp("glGetMinmaxParameteriv",call_name)==0){
  (PFNGLGETMINMAXPARAMETERIVPROC) func = (PFNGLGETMINMAXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetMinmaxParameteriv");
  continue;
}

if(strcmp("glHistogram",call_name)==0){
  (PFNGLHISTOGRAMPROC) func = (PFNGLHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glHistogram");
  continue;
}

if(strcmp("glMinmax",call_name)==0){
  (PFNGLMINMAXPROC) func = (PFNGLMINMAXPROC)glXGetProcAddress((const GLubyte*)"glMinmax");
  continue;
}

if(strcmp("glResetHistogram",call_name)==0){
  (PFNGLRESETHISTOGRAMPROC) func = (PFNGLRESETHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glResetHistogram");
  continue;
}

if(strcmp("glResetMinmax",call_name)==0){
  (PFNGLRESETMINMAXPROC) func = (PFNGLRESETMINMAXPROC)glXGetProcAddress((const GLubyte*)"glResetMinmax");
  continue;
}

if(strcmp("glTexImage3D",call_name)==0){
  (PFNGLTEXIMAGE3DPROC) func = (PFNGLTEXIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexImage3D");
  continue;
}

if(strcmp("glTexSubImage3D",call_name)==0){
  (PFNGLTEXSUBIMAGE3DPROC) func = (PFNGLTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage3D");
  continue;
}

if(strcmp("glCopyTexSubImage3D",call_name)==0){
  (PFNGLCOPYTEXSUBIMAGE3DPROC) func = (PFNGLCOPYTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage3D");
  continue;
}

if(strcmp("glActiveTexture",call_name)==0){
  (PFNGLACTIVETEXTUREPROC) func = (PFNGLACTIVETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glActiveTexture");
  continue;
}

if(strcmp("glClientActiveTexture",call_name)==0){
  (PFNGLCLIENTACTIVETEXTUREPROC) func = (PFNGLCLIENTACTIVETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glClientActiveTexture");
  continue;
}

if(strcmp("glMultiTexCoord1d",call_name)==0){
  (PFNGLMULTITEXCOORD1DPROC) func = (PFNGLMULTITEXCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1d");
  continue;
}

if(strcmp("glMultiTexCoord1dv",call_name)==0){
  (PFNGLMULTITEXCOORD1DVPROC) func = (PFNGLMULTITEXCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1dv");
  continue;
}

if(strcmp("glMultiTexCoord1fARB",call_name)==0){
  (PFNGLMULTITEXCOORD1FARBPROC) func = (PFNGLMULTITEXCOORD1FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1fARB");
  continue;
}

if(strcmp("glMultiTexCoord1fvARB",call_name)==0){
  (PFNGLMULTITEXCOORD1FVARBPROC) func = (PFNGLMULTITEXCOORD1FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1fvARB");
  continue;
}

if(strcmp("glMultiTexCoord1i",call_name)==0){
  (PFNGLMULTITEXCOORD1IPROC) func = (PFNGLMULTITEXCOORD1IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1i");
  continue;
}

if(strcmp("glMultiTexCoord1iv",call_name)==0){
  (PFNGLMULTITEXCOORD1IVPROC) func = (PFNGLMULTITEXCOORD1IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1iv");
  continue;
}

if(strcmp("glMultiTexCoord1s",call_name)==0){
  (PFNGLMULTITEXCOORD1SPROC) func = (PFNGLMULTITEXCOORD1SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1s");
  continue;
}

if(strcmp("glMultiTexCoord1sv",call_name)==0){
  (PFNGLMULTITEXCOORD1SVPROC) func = (PFNGLMULTITEXCOORD1SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1sv");
  continue;
}

if(strcmp("glMultiTexCoord2d",call_name)==0){
  (PFNGLMULTITEXCOORD2DPROC) func = (PFNGLMULTITEXCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2d");
  continue;
}

if(strcmp("glMultiTexCoord2dv",call_name)==0){
  (PFNGLMULTITEXCOORD2DVPROC) func = (PFNGLMULTITEXCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2dv");
  continue;
}

if(strcmp("glMultiTexCoord2fARB",call_name)==0){
  (PFNGLMULTITEXCOORD2FARBPROC) func = (PFNGLMULTITEXCOORD2FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2fARB");
  continue;
}

if(strcmp("glMultiTexCoord2fvARB",call_name)==0){
  (PFNGLMULTITEXCOORD2FVARBPROC) func = (PFNGLMULTITEXCOORD2FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2fvARB");
  continue;
}

if(strcmp("glMultiTexCoord2i",call_name)==0){
  (PFNGLMULTITEXCOORD2IPROC) func = (PFNGLMULTITEXCOORD2IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2i");
  continue;
}

if(strcmp("glMultiTexCoord2iv",call_name)==0){
  (PFNGLMULTITEXCOORD2IVPROC) func = (PFNGLMULTITEXCOORD2IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2iv");
  continue;
}

if(strcmp("glMultiTexCoord2s",call_name)==0){
  (PFNGLMULTITEXCOORD2SPROC) func = (PFNGLMULTITEXCOORD2SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2s");
  continue;
}

if(strcmp("glMultiTexCoord2sv",call_name)==0){
  (PFNGLMULTITEXCOORD2SVPROC) func = (PFNGLMULTITEXCOORD2SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2sv");
  continue;
}

if(strcmp("glMultiTexCoord3d",call_name)==0){
  (PFNGLMULTITEXCOORD3DPROC) func = (PFNGLMULTITEXCOORD3DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3d");
  continue;
}

if(strcmp("glMultiTexCoord3dv",call_name)==0){
  (PFNGLMULTITEXCOORD3DVPROC) func = (PFNGLMULTITEXCOORD3DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3dv");
  continue;
}

if(strcmp("glMultiTexCoord3fARB",call_name)==0){
  (PFNGLMULTITEXCOORD3FARBPROC) func = (PFNGLMULTITEXCOORD3FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3fARB");
  continue;
}

if(strcmp("glMultiTexCoord3fvARB",call_name)==0){
  (PFNGLMULTITEXCOORD3FVARBPROC) func = (PFNGLMULTITEXCOORD3FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3fvARB");
  continue;
}

if(strcmp("glMultiTexCoord3i",call_name)==0){
  (PFNGLMULTITEXCOORD3IPROC) func = (PFNGLMULTITEXCOORD3IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3i");
  continue;
}

if(strcmp("glMultiTexCoord3iv",call_name)==0){
  (PFNGLMULTITEXCOORD3IVPROC) func = (PFNGLMULTITEXCOORD3IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3iv");
  continue;
}

if(strcmp("glMultiTexCoord3s",call_name)==0){
  (PFNGLMULTITEXCOORD3SPROC) func = (PFNGLMULTITEXCOORD3SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3s");
  continue;
}

if(strcmp("glMultiTexCoord3sv",call_name)==0){
  (PFNGLMULTITEXCOORD3SVPROC) func = (PFNGLMULTITEXCOORD3SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3sv");
  continue;
}

if(strcmp("glMultiTexCoord4d",call_name)==0){
  (PFNGLMULTITEXCOORD4DPROC) func = (PFNGLMULTITEXCOORD4DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4d");
  continue;
}

if(strcmp("glMultiTexCoord4dv",call_name)==0){
  (PFNGLMULTITEXCOORD4DVPROC) func = (PFNGLMULTITEXCOORD4DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4dv");
  continue;
}

if(strcmp("glMultiTexCoord4fARB",call_name)==0){
  (PFNGLMULTITEXCOORD4FARBPROC) func = (PFNGLMULTITEXCOORD4FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4fARB");
  continue;
}

if(strcmp("glMultiTexCoord4fvARB",call_name)==0){
  (PFNGLMULTITEXCOORD4FVARBPROC) func = (PFNGLMULTITEXCOORD4FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4fvARB");
  continue;
}

if(strcmp("glMultiTexCoord4i",call_name)==0){
  (PFNGLMULTITEXCOORD4IPROC) func = (PFNGLMULTITEXCOORD4IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4i");
  continue;
}

if(strcmp("glMultiTexCoord4iv",call_name)==0){
  (PFNGLMULTITEXCOORD4IVPROC) func = (PFNGLMULTITEXCOORD4IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4iv");
  continue;
}

if(strcmp("glMultiTexCoord4s",call_name)==0){
  (PFNGLMULTITEXCOORD4SPROC) func = (PFNGLMULTITEXCOORD4SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4s");
  continue;
}

if(strcmp("glMultiTexCoord4sv",call_name)==0){
  (PFNGLMULTITEXCOORD4SVPROC) func = (PFNGLMULTITEXCOORD4SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4sv");
  continue;
}

if(strcmp("glCompressedTexImage1D",call_name)==0){
  (PFNGLCOMPRESSEDTEXIMAGE1DPROC) func = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage1D");
  continue;
}

if(strcmp("glCompressedTexImage2D",call_name)==0){
  (PFNGLCOMPRESSEDTEXIMAGE2DPROC) func = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage2D");
  continue;
}

if(strcmp("glCompressedTexImage3D",call_name)==0){
  (PFNGLCOMPRESSEDTEXIMAGE3DPROC) func = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage3D");
  continue;
}

if(strcmp("glCompressedTexSubImage1D",call_name)==0){
  (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) func = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage1D");
  continue;
}

if(strcmp("glCompressedTexSubImage2D",call_name)==0){
  (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) func = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage2D");
  continue;
}

if(strcmp("glCompressedTexSubImage3D",call_name)==0){
  (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) func = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage3D");
  continue;
}

if(strcmp("glGetCompressedTexImage",call_name)==0){
  (PFNGLGETCOMPRESSEDTEXIMAGEPROC) func = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTexImage");
  continue;
}

if(strcmp("glLoadTransposeMatrixd",call_name)==0){
  (PFNGLLOADTRANSPOSEMATRIXDPROC) func = (PFNGLLOADTRANSPOSEMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glLoadTransposeMatrixd");
  continue;
}

if(strcmp("glLoadTransposeMatrixf",call_name)==0){
  (PFNGLLOADTRANSPOSEMATRIXFPROC) func = (PFNGLLOADTRANSPOSEMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glLoadTransposeMatrixf");
  continue;
}

if(strcmp("glMultTransposeMatrixd",call_name)==0){
  (PFNGLMULTTRANSPOSEMATRIXDPROC) func = (PFNGLMULTTRANSPOSEMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glMultTransposeMatrixd");
  continue;
}

if(strcmp("glMultTransposeMatrixf",call_name)==0){
  (PFNGLMULTTRANSPOSEMATRIXFPROC) func = (PFNGLMULTTRANSPOSEMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glMultTransposeMatrixf");
  continue;
}

if(strcmp("glSampleCoverage",call_name)==0){
  (PFNGLSAMPLECOVERAGEPROC) func = (PFNGLSAMPLECOVERAGEPROC)glXGetProcAddress((const GLubyte*)"glSampleCoverage");
  continue;
}

if(strcmp("glBlendFuncSeparate",call_name)==0){
  (PFNGLBLENDFUNCSEPARATEPROC) func = (PFNGLBLENDFUNCSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glBlendFuncSeparate");
  continue;
}

if(strcmp("glFogCoordPointer",call_name)==0){
  (PFNGLFOGCOORDPOINTERPROC) func = (PFNGLFOGCOORDPOINTERPROC)glXGetProcAddress((const GLubyte*)"glFogCoordPointer");
  continue;
}

if(strcmp("glFogCoordd",call_name)==0){
  (PFNGLFOGCOORDDPROC) func = (PFNGLFOGCOORDDPROC)glXGetProcAddress((const GLubyte*)"glFogCoordd");
  continue;
}

if(strcmp("glFogCoorddv",call_name)==0){
  (PFNGLFOGCOORDDVPROC) func = (PFNGLFOGCOORDDVPROC)glXGetProcAddress((const GLubyte*)"glFogCoorddv");
  continue;
}

if(strcmp("glMultiDrawArrays",call_name)==0){
  (PFNGLMULTIDRAWARRAYSPROC) func = (PFNGLMULTIDRAWARRAYSPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArrays");
  continue;
}

if(strcmp("glPointParameterf",call_name)==0){
  (PFNGLPOINTPARAMETERFPROC) func = (PFNGLPOINTPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glPointParameterf");
  continue;
}

if(strcmp("glPointParameterfv",call_name)==0){
  (PFNGLPOINTPARAMETERFVPROC) func = (PFNGLPOINTPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glPointParameterfv");
  continue;
}

if(strcmp("glPointParameteri",call_name)==0){
  (PFNGLPOINTPARAMETERIPROC) func = (PFNGLPOINTPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glPointParameteri");
  continue;
}

if(strcmp("glPointParameteriv",call_name)==0){
  (PFNGLPOINTPARAMETERIVPROC) func = (PFNGLPOINTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glPointParameteriv");
  continue;
}

if(strcmp("glSecondaryColor3b",call_name)==0){
  (PFNGLSECONDARYCOLOR3BPROC) func = (PFNGLSECONDARYCOLOR3BPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3b");
  continue;
}

if(strcmp("glSecondaryColor3bv",call_name)==0){
  (PFNGLSECONDARYCOLOR3BVPROC) func = (PFNGLSECONDARYCOLOR3BVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3bv");
  continue;
}

if(strcmp("glSecondaryColor3d",call_name)==0){
  (PFNGLSECONDARYCOLOR3DPROC) func = (PFNGLSECONDARYCOLOR3DPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3d");
  continue;
}

if(strcmp("glSecondaryColor3dv",call_name)==0){
  (PFNGLSECONDARYCOLOR3DVPROC) func = (PFNGLSECONDARYCOLOR3DVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3dv");
  continue;
}

if(strcmp("glSecondaryColor3i",call_name)==0){
  (PFNGLSECONDARYCOLOR3IPROC) func = (PFNGLSECONDARYCOLOR3IPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3i");
  continue;
}

if(strcmp("glSecondaryColor3iv",call_name)==0){
  (PFNGLSECONDARYCOLOR3IVPROC) func = (PFNGLSECONDARYCOLOR3IVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3iv");
  continue;
}

if(strcmp("glSecondaryColor3s",call_name)==0){
  (PFNGLSECONDARYCOLOR3SPROC) func = (PFNGLSECONDARYCOLOR3SPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3s");
  continue;
}

if(strcmp("glSecondaryColor3sv",call_name)==0){
  (PFNGLSECONDARYCOLOR3SVPROC) func = (PFNGLSECONDARYCOLOR3SVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3sv");
  continue;
}

if(strcmp("glSecondaryColor3ub",call_name)==0){
  (PFNGLSECONDARYCOLOR3UBPROC) func = (PFNGLSECONDARYCOLOR3UBPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ub");
  continue;
}

if(strcmp("glSecondaryColor3ubv",call_name)==0){
  (PFNGLSECONDARYCOLOR3UBVPROC) func = (PFNGLSECONDARYCOLOR3UBVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ubv");
  continue;
}

if(strcmp("glSecondaryColor3ui",call_name)==0){
  (PFNGLSECONDARYCOLOR3UIPROC) func = (PFNGLSECONDARYCOLOR3UIPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ui");
  continue;
}

if(strcmp("glSecondaryColor3uiv",call_name)==0){
  (PFNGLSECONDARYCOLOR3UIVPROC) func = (PFNGLSECONDARYCOLOR3UIVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3uiv");
  continue;
}

if(strcmp("glSecondaryColor3us",call_name)==0){
  (PFNGLSECONDARYCOLOR3USPROC) func = (PFNGLSECONDARYCOLOR3USPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3us");
  continue;
}

if(strcmp("glSecondaryColor3usv",call_name)==0){
  (PFNGLSECONDARYCOLOR3USVPROC) func = (PFNGLSECONDARYCOLOR3USVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3usv");
  continue;
}

if(strcmp("glSecondaryColorPointer",call_name)==0){
  (PFNGLSECONDARYCOLORPOINTERPROC) func = (PFNGLSECONDARYCOLORPOINTERPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorPointer");
  continue;
}

if(strcmp("glWindowPos2d",call_name)==0){
  (PFNGLWINDOWPOS2DPROC) func = (PFNGLWINDOWPOS2DPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2d");
  continue;
}

if(strcmp("glWindowPos2dv",call_name)==0){
  (PFNGLWINDOWPOS2DVPROC) func = (PFNGLWINDOWPOS2DVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2dv");
  continue;
}

if(strcmp("glWindowPos2f",call_name)==0){
  (PFNGLWINDOWPOS2FPROC) func = (PFNGLWINDOWPOS2FPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2f");
  continue;
}

if(strcmp("glWindowPos2fv",call_name)==0){
  (PFNGLWINDOWPOS2FVPROC) func = (PFNGLWINDOWPOS2FVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2fv");
  continue;
}

if(strcmp("glWindowPos2i",call_name)==0){
  (PFNGLWINDOWPOS2IPROC) func = (PFNGLWINDOWPOS2IPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2i");
  continue;
}

if(strcmp("glWindowPos2iv",call_name)==0){
  (PFNGLWINDOWPOS2IVPROC) func = (PFNGLWINDOWPOS2IVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2iv");
  continue;
}

if(strcmp("glWindowPos2s",call_name)==0){
  (PFNGLWINDOWPOS2SPROC) func = (PFNGLWINDOWPOS2SPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2s");
  continue;
}

if(strcmp("glWindowPos2sv",call_name)==0){
  (PFNGLWINDOWPOS2SVPROC) func = (PFNGLWINDOWPOS2SVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2sv");
  continue;
}

if(strcmp("glWindowPos3d",call_name)==0){
  (PFNGLWINDOWPOS3DPROC) func = (PFNGLWINDOWPOS3DPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3d");
  continue;
}

if(strcmp("glWindowPos3dv",call_name)==0){
  (PFNGLWINDOWPOS3DVPROC) func = (PFNGLWINDOWPOS3DVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3dv");
  continue;
}

if(strcmp("glWindowPos3f",call_name)==0){
  (PFNGLWINDOWPOS3FPROC) func = (PFNGLWINDOWPOS3FPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3f");
  continue;
}

if(strcmp("glWindowPos3fv",call_name)==0){
  (PFNGLWINDOWPOS3FVPROC) func = (PFNGLWINDOWPOS3FVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3fv");
  continue;
}

if(strcmp("glWindowPos3i",call_name)==0){
  (PFNGLWINDOWPOS3IPROC) func = (PFNGLWINDOWPOS3IPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3i");
  continue;
}

if(strcmp("glWindowPos3iv",call_name)==0){
  (PFNGLWINDOWPOS3IVPROC) func = (PFNGLWINDOWPOS3IVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3iv");
  continue;
}

if(strcmp("glWindowPos3s",call_name)==0){
  (PFNGLWINDOWPOS3SPROC) func = (PFNGLWINDOWPOS3SPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3s");
  continue;
}

if(strcmp("glWindowPos3sv",call_name)==0){
  (PFNGLWINDOWPOS3SVPROC) func = (PFNGLWINDOWPOS3SVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3sv");
  continue;
}

if(strcmp("glBeginQuery",call_name)==0){
  (PFNGLBEGINQUERYPROC) func = (PFNGLBEGINQUERYPROC)glXGetProcAddress((const GLubyte*)"glBeginQuery");
  continue;
}

if(strcmp("glBindBuffer",call_name)==0){
  (PFNGLBINDBUFFERPROC) func = (PFNGLBINDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindBuffer");
  continue;
}

if(strcmp("glBufferData",call_name)==0){
  (PFNGLBUFFERDATAPROC) func = (PFNGLBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glBufferData");
  continue;
}

if(strcmp("glBufferSubData",call_name)==0){
  (PFNGLBUFFERSUBDATAPROC) func = (PFNGLBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glBufferSubData");
  continue;
}

if(strcmp("glDeleteBuffers",call_name)==0){
  (PFNGLDELETEBUFFERSPROC) func = (PFNGLDELETEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteBuffers");
  continue;
}

if(strcmp("glDeleteQueries",call_name)==0){
  (PFNGLDELETEQUERIESPROC) func = (PFNGLDELETEQUERIESPROC)glXGetProcAddress((const GLubyte*)"glDeleteQueries");
  continue;
}

if(strcmp("glEndQuery",call_name)==0){
  (PFNGLENDQUERYPROC) func = (PFNGLENDQUERYPROC)glXGetProcAddress((const GLubyte*)"glEndQuery");
  continue;
}

if(strcmp("glGenBuffers",call_name)==0){
  (PFNGLGENBUFFERSPROC) func = (PFNGLGENBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenBuffers");
  continue;
}

if(strcmp("glGenQueries",call_name)==0){
  (PFNGLGENQUERIESPROC) func = (PFNGLGENQUERIESPROC)glXGetProcAddress((const GLubyte*)"glGenQueries");
  continue;
}

if(strcmp("glGetBufferParameteriv",call_name)==0){
  (PFNGLGETBUFFERPARAMETERIVPROC) func = (PFNGLGETBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetBufferParameteriv");
  continue;
}

if(strcmp("glGetBufferPointerv",call_name)==0){
  (PFNGLGETBUFFERPOINTERVPROC) func = (PFNGLGETBUFFERPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetBufferPointerv");
  continue;
}

if(strcmp("glGetBufferSubData",call_name)==0){
  (PFNGLGETBUFFERSUBDATAPROC) func = (PFNGLGETBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glGetBufferSubData");
  continue;
}

if(strcmp("glGetQueryObjectiv",call_name)==0){
  (PFNGLGETQUERYOBJECTIVPROC) func = (PFNGLGETQUERYOBJECTIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectiv");
  continue;
}

if(strcmp("glGetQueryObjectuiv",call_name)==0){
  (PFNGLGETQUERYOBJECTUIVPROC) func = (PFNGLGETQUERYOBJECTUIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectuiv");
  continue;
}

if(strcmp("glGetQueryiv",call_name)==0){
  (PFNGLGETQUERYIVPROC) func = (PFNGLGETQUERYIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryiv");
  continue;
}

if(strcmp("glIsBuffer",call_name)==0){
  (PFNGLISBUFFERPROC) func = (PFNGLISBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsBuffer");
  continue;
}

if(strcmp("glIsQuery",call_name)==0){
  (PFNGLISQUERYPROC) func = (PFNGLISQUERYPROC)glXGetProcAddress((const GLubyte*)"glIsQuery");
  continue;
}

if(strcmp("glMapBuffer",call_name)==0){
  (PFNGLMAPBUFFERPROC) func = (PFNGLMAPBUFFERPROC)glXGetProcAddress((const GLubyte*)"glMapBuffer");
  continue;
}

if(strcmp("glUnmapBuffer",call_name)==0){
  (PFNGLUNMAPBUFFERPROC) func = (PFNGLUNMAPBUFFERPROC)glXGetProcAddress((const GLubyte*)"glUnmapBuffer");
  continue;
}

if(strcmp("glAttachShader",call_name)==0){
  (PFNGLATTACHSHADERPROC) func = (PFNGLATTACHSHADERPROC)glXGetProcAddress((const GLubyte*)"glAttachShader");
  continue;
}

if(strcmp("glBindAttribLocation",call_name)==0){
  (PFNGLBINDATTRIBLOCATIONPROC) func = (PFNGLBINDATTRIBLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glBindAttribLocation");
  continue;
}

if(strcmp("glBlendEquationSeparate",call_name)==0){
  (PFNGLBLENDEQUATIONSEPARATEPROC) func = (PFNGLBLENDEQUATIONSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationSeparate");
  continue;
}

if(strcmp("glCompileShader",call_name)==0){
  (PFNGLCOMPILESHADERPROC) func = (PFNGLCOMPILESHADERPROC)glXGetProcAddress((const GLubyte*)"glCompileShader");
  continue;
}

if(strcmp("glCreateProgram",call_name)==0){
  (PFNGLCREATEPROGRAMPROC) func = (PFNGLCREATEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glCreateProgram");
  continue;
}

if(strcmp("glCreateShader",call_name)==0){
  (PFNGLCREATESHADERPROC) func = (PFNGLCREATESHADERPROC)glXGetProcAddress((const GLubyte*)"glCreateShader");
  continue;
}

if(strcmp("glDeleteProgram",call_name)==0){
  (PFNGLDELETEPROGRAMPROC) func = (PFNGLDELETEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgram");
  continue;
}

if(strcmp("glDeleteShader",call_name)==0){
  (PFNGLDELETESHADERPROC) func = (PFNGLDELETESHADERPROC)glXGetProcAddress((const GLubyte*)"glDeleteShader");
  continue;
}

if(strcmp("glDetachShader",call_name)==0){
  (PFNGLDETACHSHADERPROC) func = (PFNGLDETACHSHADERPROC)glXGetProcAddress((const GLubyte*)"glDetachShader");
  continue;
}

if(strcmp("glDisableVertexAttribArray",call_name)==0){
  (PFNGLDISABLEVERTEXATTRIBARRAYPROC) func = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)glXGetProcAddress((const GLubyte*)"glDisableVertexAttribArray");
  continue;
}

if(strcmp("glDrawBuffers",call_name)==0){
  (PFNGLDRAWBUFFERSPROC) func = (PFNGLDRAWBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDrawBuffers");
  continue;
}

if(strcmp("glEnableVertexAttribArray",call_name)==0){
  (PFNGLENABLEVERTEXATTRIBARRAYPROC) func = (PFNGLENABLEVERTEXATTRIBARRAYPROC)glXGetProcAddress((const GLubyte*)"glEnableVertexAttribArray");
  continue;
}

if(strcmp("glGetActiveAttrib",call_name)==0){
  (PFNGLGETACTIVEATTRIBPROC) func = (PFNGLGETACTIVEATTRIBPROC)glXGetProcAddress((const GLubyte*)"glGetActiveAttrib");
  continue;
}

if(strcmp("glGetActiveUniform",call_name)==0){
  (PFNGLGETACTIVEUNIFORMPROC) func = (PFNGLGETACTIVEUNIFORMPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniform");
  continue;
}

if(strcmp("glGetAttachedShaders",call_name)==0){
  (PFNGLGETATTACHEDSHADERSPROC) func = (PFNGLGETATTACHEDSHADERSPROC)glXGetProcAddress((const GLubyte*)"glGetAttachedShaders");
  continue;
}

if(strcmp("glGetAttribLocation",call_name)==0){
  (PFNGLGETATTRIBLOCATIONPROC) func = (PFNGLGETATTRIBLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetAttribLocation");
  continue;
}

if(strcmp("glGetProgramInfoLog",call_name)==0){
  (PFNGLGETPROGRAMINFOLOGPROC) func = (PFNGLGETPROGRAMINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetProgramInfoLog");
  continue;
}

if(strcmp("glGetProgramiv",call_name)==0){
  (PFNGLGETPROGRAMIVPROC) func = (PFNGLGETPROGRAMIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramiv");
  continue;
}

if(strcmp("glGetShaderInfoLog",call_name)==0){
  (PFNGLGETSHADERINFOLOGPROC) func = (PFNGLGETSHADERINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetShaderInfoLog");
  continue;
}

if(strcmp("glGetShaderSource",call_name)==0){
  (PFNGLGETSHADERSOURCEPROC) func = (PFNGLGETSHADERSOURCEPROC)glXGetProcAddress((const GLubyte*)"glGetShaderSource");
  continue;
}

if(strcmp("glGetShaderiv",call_name)==0){
  (PFNGLGETSHADERIVPROC) func = (PFNGLGETSHADERIVPROC)glXGetProcAddress((const GLubyte*)"glGetShaderiv");
  continue;
}

if(strcmp("glGetUniformLocation",call_name)==0){
  (PFNGLGETUNIFORMLOCATIONPROC) func = (PFNGLGETUNIFORMLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetUniformLocation");
  continue;
}

if(strcmp("glGetUniformfv",call_name)==0){
  (PFNGLGETUNIFORMFVPROC) func = (PFNGLGETUNIFORMFVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformfv");
  continue;
}

if(strcmp("glGetUniformiv",call_name)==0){
  (PFNGLGETUNIFORMIVPROC) func = (PFNGLGETUNIFORMIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformiv");
  continue;
}

if(strcmp("glGetVertexAttribPointerv",call_name)==0){
  (PFNGLGETVERTEXATTRIBPOINTERVPROC) func = (PFNGLGETVERTEXATTRIBPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribPointerv");
  continue;
}

if(strcmp("glGetVertexAttribdv",call_name)==0){
  (PFNGLGETVERTEXATTRIBDVPROC) func = (PFNGLGETVERTEXATTRIBDVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribdv");
  continue;
}

if(strcmp("glGetVertexAttribfv",call_name)==0){
  (PFNGLGETVERTEXATTRIBFVPROC) func = (PFNGLGETVERTEXATTRIBFVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribfv");
  continue;
}

if(strcmp("glGetVertexAttribiv",call_name)==0){
  (PFNGLGETVERTEXATTRIBIVPROC) func = (PFNGLGETVERTEXATTRIBIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribiv");
  continue;
}

if(strcmp("glIsProgram",call_name)==0){
  (PFNGLISPROGRAMPROC) func = (PFNGLISPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glIsProgram");
  continue;
}

if(strcmp("glIsShader",call_name)==0){
  (PFNGLISSHADERPROC) func = (PFNGLISSHADERPROC)glXGetProcAddress((const GLubyte*)"glIsShader");
  continue;
}

if(strcmp("glLinkProgram",call_name)==0){
  (PFNGLLINKPROGRAMPROC) func = (PFNGLLINKPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glLinkProgram");
  continue;
}

if(strcmp("glShaderSource",call_name)==0){
  (PFNGLSHADERSOURCEPROC) func = (PFNGLSHADERSOURCEPROC)glXGetProcAddress((const GLubyte*)"glShaderSource");
  continue;
}

if(strcmp("glStencilFuncSeparate",call_name)==0){
  (PFNGLSTENCILFUNCSEPARATEPROC) func = (PFNGLSTENCILFUNCSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilFuncSeparate");
  continue;
}

if(strcmp("glStencilMaskSeparate",call_name)==0){
  (PFNGLSTENCILMASKSEPARATEPROC) func = (PFNGLSTENCILMASKSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilMaskSeparate");
  continue;
}

if(strcmp("glStencilOpSeparate",call_name)==0){
  (PFNGLSTENCILOPSEPARATEPROC) func = (PFNGLSTENCILOPSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilOpSeparate");
  continue;
}

if(strcmp("glUniform1f",call_name)==0){
  (PFNGLUNIFORM1FPROC) func = (PFNGLUNIFORM1FPROC)glXGetProcAddress((const GLubyte*)"glUniform1f");
  continue;
}

if(strcmp("glUniform1fv",call_name)==0){
  (PFNGLUNIFORM1FVPROC) func = (PFNGLUNIFORM1FVPROC)glXGetProcAddress((const GLubyte*)"glUniform1fv");
  continue;
}

if(strcmp("glUniform1i",call_name)==0){
  (PFNGLUNIFORM1IPROC) func = (PFNGLUNIFORM1IPROC)glXGetProcAddress((const GLubyte*)"glUniform1i");
  continue;
}

if(strcmp("glUniform1iv",call_name)==0){
  (PFNGLUNIFORM1IVPROC) func = (PFNGLUNIFORM1IVPROC)glXGetProcAddress((const GLubyte*)"glUniform1iv");
  continue;
}

if(strcmp("glUniform2f",call_name)==0){
  (PFNGLUNIFORM2FPROC) func = (PFNGLUNIFORM2FPROC)glXGetProcAddress((const GLubyte*)"glUniform2f");
  continue;
}

if(strcmp("glUniform2fv",call_name)==0){
  (PFNGLUNIFORM2FVPROC) func = (PFNGLUNIFORM2FVPROC)glXGetProcAddress((const GLubyte*)"glUniform2fv");
  continue;
}

if(strcmp("glUniform2i",call_name)==0){
  (PFNGLUNIFORM2IPROC) func = (PFNGLUNIFORM2IPROC)glXGetProcAddress((const GLubyte*)"glUniform2i");
  continue;
}

if(strcmp("glUniform2iv",call_name)==0){
  (PFNGLUNIFORM2IVPROC) func = (PFNGLUNIFORM2IVPROC)glXGetProcAddress((const GLubyte*)"glUniform2iv");
  continue;
}

if(strcmp("glUniform3f",call_name)==0){
  (PFNGLUNIFORM3FPROC) func = (PFNGLUNIFORM3FPROC)glXGetProcAddress((const GLubyte*)"glUniform3f");
  continue;
}

if(strcmp("glUniform3fv",call_name)==0){
  (PFNGLUNIFORM3FVPROC) func = (PFNGLUNIFORM3FVPROC)glXGetProcAddress((const GLubyte*)"glUniform3fv");
  continue;
}

if(strcmp("glUniform3i",call_name)==0){
  (PFNGLUNIFORM3IPROC) func = (PFNGLUNIFORM3IPROC)glXGetProcAddress((const GLubyte*)"glUniform3i");
  continue;
}

if(strcmp("glUniform3iv",call_name)==0){
  (PFNGLUNIFORM3IVPROC) func = (PFNGLUNIFORM3IVPROC)glXGetProcAddress((const GLubyte*)"glUniform3iv");
  continue;
}

if(strcmp("glUniform4f",call_name)==0){
  (PFNGLUNIFORM4FPROC) func = (PFNGLUNIFORM4FPROC)glXGetProcAddress((const GLubyte*)"glUniform4f");
  continue;
}

if(strcmp("glUniform4fv",call_name)==0){
  (PFNGLUNIFORM4FVPROC) func = (PFNGLUNIFORM4FVPROC)glXGetProcAddress((const GLubyte*)"glUniform4fv");
  continue;
}

if(strcmp("glUniform4i",call_name)==0){
  (PFNGLUNIFORM4IPROC) func = (PFNGLUNIFORM4IPROC)glXGetProcAddress((const GLubyte*)"glUniform4i");
  continue;
}

if(strcmp("glUniform4iv",call_name)==0){
  (PFNGLUNIFORM4IVPROC) func = (PFNGLUNIFORM4IVPROC)glXGetProcAddress((const GLubyte*)"glUniform4iv");
  continue;
}

if(strcmp("glUniformMatrix2fv",call_name)==0){
  (PFNGLUNIFORMMATRIX2FVPROC) func = (PFNGLUNIFORMMATRIX2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2fv");
  continue;
}

if(strcmp("glUniformMatrix3fv",call_name)==0){
  (PFNGLUNIFORMMATRIX3FVPROC) func = (PFNGLUNIFORMMATRIX3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3fv");
  continue;
}

if(strcmp("glUniformMatrix4fv",call_name)==0){
  (PFNGLUNIFORMMATRIX4FVPROC) func = (PFNGLUNIFORMMATRIX4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4fv");
  continue;
}

if(strcmp("glUseProgram",call_name)==0){
  (PFNGLUSEPROGRAMPROC) func = (PFNGLUSEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glUseProgram");
  continue;
}

if(strcmp("glValidateProgram",call_name)==0){
  (PFNGLVALIDATEPROGRAMPROC) func = (PFNGLVALIDATEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glValidateProgram");
  continue;
}

if(strcmp("glVertexAttrib1d",call_name)==0){
  (PFNGLVERTEXATTRIB1DPROC) func = (PFNGLVERTEXATTRIB1DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1d");
  continue;
}

if(strcmp("glVertexAttrib1dv",call_name)==0){
  (PFNGLVERTEXATTRIB1DVPROC) func = (PFNGLVERTEXATTRIB1DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dv");
  continue;
}

if(strcmp("glVertexAttrib1s",call_name)==0){
  (PFNGLVERTEXATTRIB1SPROC) func = (PFNGLVERTEXATTRIB1SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1s");
  continue;
}

if(strcmp("glVertexAttrib1sv",call_name)==0){
  (PFNGLVERTEXATTRIB1SVPROC) func = (PFNGLVERTEXATTRIB1SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1sv");
  continue;
}

if(strcmp("glVertexAttrib2d",call_name)==0){
  (PFNGLVERTEXATTRIB2DPROC) func = (PFNGLVERTEXATTRIB2DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2d");
  continue;
}

if(strcmp("glVertexAttrib2dv",call_name)==0){
  (PFNGLVERTEXATTRIB2DVPROC) func = (PFNGLVERTEXATTRIB2DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dv");
  continue;
}

if(strcmp("glVertexAttrib2s",call_name)==0){
  (PFNGLVERTEXATTRIB2SPROC) func = (PFNGLVERTEXATTRIB2SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2s");
  continue;
}

if(strcmp("glVertexAttrib2sv",call_name)==0){
  (PFNGLVERTEXATTRIB2SVPROC) func = (PFNGLVERTEXATTRIB2SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2sv");
  continue;
}

if(strcmp("glVertexAttrib3d",call_name)==0){
  (PFNGLVERTEXATTRIB3DPROC) func = (PFNGLVERTEXATTRIB3DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3d");
  continue;
}

if(strcmp("glVertexAttrib3dv",call_name)==0){
  (PFNGLVERTEXATTRIB3DVPROC) func = (PFNGLVERTEXATTRIB3DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dv");
  continue;
}

if(strcmp("glVertexAttrib3s",call_name)==0){
  (PFNGLVERTEXATTRIB3SPROC) func = (PFNGLVERTEXATTRIB3SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3s");
  continue;
}

if(strcmp("glVertexAttrib3sv",call_name)==0){
  (PFNGLVERTEXATTRIB3SVPROC) func = (PFNGLVERTEXATTRIB3SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3sv");
  continue;
}

if(strcmp("glVertexAttrib4Nbv",call_name)==0){
  (PFNGLVERTEXATTRIB4NBVPROC) func = (PFNGLVERTEXATTRIB4NBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nbv");
  continue;
}

if(strcmp("glVertexAttrib4Niv",call_name)==0){
  (PFNGLVERTEXATTRIB4NIVPROC) func = (PFNGLVERTEXATTRIB4NIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Niv");
  continue;
}

if(strcmp("glVertexAttrib4Nsv",call_name)==0){
  (PFNGLVERTEXATTRIB4NSVPROC) func = (PFNGLVERTEXATTRIB4NSVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nsv");
  continue;
}

if(strcmp("glVertexAttrib4Nub",call_name)==0){
  (PFNGLVERTEXATTRIB4NUBPROC) func = (PFNGLVERTEXATTRIB4NUBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nub");
  continue;
}

if(strcmp("glVertexAttrib4Nubv",call_name)==0){
  (PFNGLVERTEXATTRIB4NUBVPROC) func = (PFNGLVERTEXATTRIB4NUBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nubv");
  continue;
}

if(strcmp("glVertexAttrib4Nuiv",call_name)==0){
  (PFNGLVERTEXATTRIB4NUIVPROC) func = (PFNGLVERTEXATTRIB4NUIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nuiv");
  continue;
}

if(strcmp("glVertexAttrib4Nusv",call_name)==0){
  (PFNGLVERTEXATTRIB4NUSVPROC) func = (PFNGLVERTEXATTRIB4NUSVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nusv");
  continue;
}

if(strcmp("glVertexAttrib4bv",call_name)==0){
  (PFNGLVERTEXATTRIB4BVPROC) func = (PFNGLVERTEXATTRIB4BVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4bv");
  continue;
}

if(strcmp("glVertexAttrib4d",call_name)==0){
  (PFNGLVERTEXATTRIB4DPROC) func = (PFNGLVERTEXATTRIB4DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4d");
  continue;
}

if(strcmp("glVertexAttrib4dv",call_name)==0){
  (PFNGLVERTEXATTRIB4DVPROC) func = (PFNGLVERTEXATTRIB4DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dv");
  continue;
}

if(strcmp("glVertexAttrib4iv",call_name)==0){
  (PFNGLVERTEXATTRIB4IVPROC) func = (PFNGLVERTEXATTRIB4IVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4iv");
  continue;
}

if(strcmp("glVertexAttrib4s",call_name)==0){
  (PFNGLVERTEXATTRIB4SPROC) func = (PFNGLVERTEXATTRIB4SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4s");
  continue;
}

if(strcmp("glVertexAttrib4sv",call_name)==0){
  (PFNGLVERTEXATTRIB4SVPROC) func = (PFNGLVERTEXATTRIB4SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4sv");
  continue;
}

if(strcmp("glVertexAttrib4ubv",call_name)==0){
  (PFNGLVERTEXATTRIB4UBVPROC) func = (PFNGLVERTEXATTRIB4UBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubv");
  continue;
}

if(strcmp("glVertexAttrib4uiv",call_name)==0){
  (PFNGLVERTEXATTRIB4UIVPROC) func = (PFNGLVERTEXATTRIB4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4uiv");
  continue;
}

if(strcmp("glVertexAttrib4usv",call_name)==0){
  (PFNGLVERTEXATTRIB4USVPROC) func = (PFNGLVERTEXATTRIB4USVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4usv");
  continue;
}

if(strcmp("glVertexAttribPointer",call_name)==0){
  (PFNGLVERTEXATTRIBPOINTERPROC) func = (PFNGLVERTEXATTRIBPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribPointer");
  continue;
}

if(strcmp("glUniformMatrix2x3fv",call_name)==0){
  (PFNGLUNIFORMMATRIX2X3FVPROC) func = (PFNGLUNIFORMMATRIX2X3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x3fv");
  continue;
}

if(strcmp("glUniformMatrix2x4fv",call_name)==0){
  (PFNGLUNIFORMMATRIX2X4FVPROC) func = (PFNGLUNIFORMMATRIX2X4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x4fv");
  continue;
}

if(strcmp("glUniformMatrix3x2fv",call_name)==0){
  (PFNGLUNIFORMMATRIX3X2FVPROC) func = (PFNGLUNIFORMMATRIX3X2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x2fv");
  continue;
}

if(strcmp("glUniformMatrix3x4fv",call_name)==0){
  (PFNGLUNIFORMMATRIX3X4FVPROC) func = (PFNGLUNIFORMMATRIX3X4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x4fv");
  continue;
}

if(strcmp("glUniformMatrix4x2fv",call_name)==0){
  (PFNGLUNIFORMMATRIX4X2FVPROC) func = (PFNGLUNIFORMMATRIX4X2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x2fv");
  continue;
}

if(strcmp("glUniformMatrix4x3fv",call_name)==0){
  (PFNGLUNIFORMMATRIX4X3FVPROC) func = (PFNGLUNIFORMMATRIX4X3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x3fv");
  continue;
}

if(strcmp("glBeginConditionalRender",call_name)==0){
  (PFNGLBEGINCONDITIONALRENDERPROC) func = (PFNGLBEGINCONDITIONALRENDERPROC)glXGetProcAddress((const GLubyte*)"glBeginConditionalRender");
  continue;
}

if(strcmp("glBeginTransformFeedback",call_name)==0){
  (PFNGLBEGINTRANSFORMFEEDBACKPROC) func = (PFNGLBEGINTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glBeginTransformFeedback");
  continue;
}

if(strcmp("glBindBufferBase",call_name)==0){
  (PFNGLBINDBUFFERBASEPROC) func = (PFNGLBINDBUFFERBASEPROC)glXGetProcAddress((const GLubyte*)"glBindBufferBase");
  continue;
}

if(strcmp("glBindBufferRange",call_name)==0){
  (PFNGLBINDBUFFERRANGEPROC) func = (PFNGLBINDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glBindBufferRange");
  continue;
}

if(strcmp("glBindFragDataLocation",call_name)==0){
  (PFNGLBINDFRAGDATALOCATIONPROC) func = (PFNGLBINDFRAGDATALOCATIONPROC)glXGetProcAddress((const GLubyte*)"glBindFragDataLocation");
  continue;
}

if(strcmp("glClampColor",call_name)==0){
  (PFNGLCLAMPCOLORPROC) func = (PFNGLCLAMPCOLORPROC)glXGetProcAddress((const GLubyte*)"glClampColor");
  continue;
}

if(strcmp("glClearBufferfi",call_name)==0){
  (PFNGLCLEARBUFFERFIPROC) func = (PFNGLCLEARBUFFERFIPROC)glXGetProcAddress((const GLubyte*)"glClearBufferfi");
  continue;
}

if(strcmp("glClearBufferfv",call_name)==0){
  (PFNGLCLEARBUFFERFVPROC) func = (PFNGLCLEARBUFFERFVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferfv");
  continue;
}

if(strcmp("glClearBufferiv",call_name)==0){
  (PFNGLCLEARBUFFERIVPROC) func = (PFNGLCLEARBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferiv");
  continue;
}

if(strcmp("glClearBufferuiv",call_name)==0){
  (PFNGLCLEARBUFFERUIVPROC) func = (PFNGLCLEARBUFFERUIVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferuiv");
  continue;
}

if(strcmp("glColorMaski",call_name)==0){
  (PFNGLCOLORMASKIPROC) func = (PFNGLCOLORMASKIPROC)glXGetProcAddress((const GLubyte*)"glColorMaski");
  continue;
}

if(strcmp("glDisablei",call_name)==0){
  (PFNGLDISABLEIPROC) func = (PFNGLDISABLEIPROC)glXGetProcAddress((const GLubyte*)"glDisablei");
  continue;
}

if(strcmp("glEnablei",call_name)==0){
  (PFNGLENABLEIPROC) func = (PFNGLENABLEIPROC)glXGetProcAddress((const GLubyte*)"glEnablei");
  continue;
}

if(strcmp("glEndConditionalRender",call_name)==0){
  (PFNGLENDCONDITIONALRENDERPROC) func = (PFNGLENDCONDITIONALRENDERPROC)glXGetProcAddress((const GLubyte*)"glEndConditionalRender");
  continue;
}

if(strcmp("glEndTransformFeedback",call_name)==0){
  (PFNGLENDTRANSFORMFEEDBACKPROC) func = (PFNGLENDTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glEndTransformFeedback");
  continue;
}

if(strcmp("glGetBooleani_v",call_name)==0){
  (PFNGLGETBOOLEANI_VPROC) func = (PFNGLGETBOOLEANI_VPROC)glXGetProcAddress((const GLubyte*)"glGetBooleani_v");
  continue;
}

if(strcmp("glGetFragDataLocation",call_name)==0){
  (PFNGLGETFRAGDATALOCATIONPROC) func = (PFNGLGETFRAGDATALOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetFragDataLocation");
  continue;
}

if(strcmp("glGetIntegeri_v",call_name)==0){
  (PFNGLGETINTEGERI_VPROC) func = (PFNGLGETINTEGERI_VPROC)glXGetProcAddress((const GLubyte*)"glGetIntegeri_v");
  continue;
}

if(strcmp("glGetStringi",call_name)==0){
  (PFNGLGETSTRINGIPROC) func = (PFNGLGETSTRINGIPROC)glXGetProcAddress((const GLubyte*)"glGetStringi");
  continue;
}

if(strcmp("glGetTexParameterIiv",call_name)==0){
  (PFNGLGETTEXPARAMETERIIVPROC) func = (PFNGLGETTEXPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterIiv");
  continue;
}

if(strcmp("glGetTexParameterIuiv",call_name)==0){
  (PFNGLGETTEXPARAMETERIUIVPROC) func = (PFNGLGETTEXPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterIuiv");
  continue;
}

if(strcmp("glGetTransformFeedbackVarying",call_name)==0){
  (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) func = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbackVarying");
  continue;
}

if(strcmp("glGetUniformuiv",call_name)==0){
  (PFNGLGETUNIFORMUIVPROC) func = (PFNGLGETUNIFORMUIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformuiv");
  continue;
}

if(strcmp("glGetVertexAttribIiv",call_name)==0){
  (PFNGLGETVERTEXATTRIBIIVPROC) func = (PFNGLGETVERTEXATTRIBIIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribIiv");
  continue;
}

if(strcmp("glGetVertexAttribIuiv",call_name)==0){
  (PFNGLGETVERTEXATTRIBIUIVPROC) func = (PFNGLGETVERTEXATTRIBIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribIuiv");
  continue;
}

if(strcmp("glIsEnabledi",call_name)==0){
  (PFNGLISENABLEDIPROC) func = (PFNGLISENABLEDIPROC)glXGetProcAddress((const GLubyte*)"glIsEnabledi");
  continue;
}

if(strcmp("glTexParameterIiv",call_name)==0){
  (PFNGLTEXPARAMETERIIVPROC) func = (PFNGLTEXPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterIiv");
  continue;
}

if(strcmp("glTexParameterIuiv",call_name)==0){
  (PFNGLTEXPARAMETERIUIVPROC) func = (PFNGLTEXPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterIuiv");
  continue;
}

if(strcmp("glTransformFeedbackVaryings",call_name)==0){
  (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) func = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackVaryings");
  continue;
}

if(strcmp("glUniform1ui",call_name)==0){
  (PFNGLUNIFORM1UIPROC) func = (PFNGLUNIFORM1UIPROC)glXGetProcAddress((const GLubyte*)"glUniform1ui");
  continue;
}

if(strcmp("glUniform1uiv",call_name)==0){
  (PFNGLUNIFORM1UIVPROC) func = (PFNGLUNIFORM1UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform1uiv");
  continue;
}

if(strcmp("glUniform2ui",call_name)==0){
  (PFNGLUNIFORM2UIPROC) func = (PFNGLUNIFORM2UIPROC)glXGetProcAddress((const GLubyte*)"glUniform2ui");
  continue;
}

if(strcmp("glUniform2uiv",call_name)==0){
  (PFNGLUNIFORM2UIVPROC) func = (PFNGLUNIFORM2UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform2uiv");
  continue;
}

if(strcmp("glUniform3ui",call_name)==0){
  (PFNGLUNIFORM3UIPROC) func = (PFNGLUNIFORM3UIPROC)glXGetProcAddress((const GLubyte*)"glUniform3ui");
  continue;
}

if(strcmp("glUniform3uiv",call_name)==0){
  (PFNGLUNIFORM3UIVPROC) func = (PFNGLUNIFORM3UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform3uiv");
  continue;
}

if(strcmp("glUniform4ui",call_name)==0){
  (PFNGLUNIFORM4UIPROC) func = (PFNGLUNIFORM4UIPROC)glXGetProcAddress((const GLubyte*)"glUniform4ui");
  continue;
}

if(strcmp("glUniform4uiv",call_name)==0){
  (PFNGLUNIFORM4UIVPROC) func = (PFNGLUNIFORM4UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform4uiv");
  continue;
}

if(strcmp("glVertexAttribI1iv",call_name)==0){
  (PFNGLVERTEXATTRIBI1IVPROC) func = (PFNGLVERTEXATTRIBI1IVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1iv");
  continue;
}

if(strcmp("glVertexAttribI1uiv",call_name)==0){
  (PFNGLVERTEXATTRIBI1UIVPROC) func = (PFNGLVERTEXATTRIBI1UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1uiv");
  continue;
}

if(strcmp("glVertexAttribI4bv",call_name)==0){
  (PFNGLVERTEXATTRIBI4BVPROC) func = (PFNGLVERTEXATTRIBI4BVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4bv");
  continue;
}

if(strcmp("glVertexAttribI4sv",call_name)==0){
  (PFNGLVERTEXATTRIBI4SVPROC) func = (PFNGLVERTEXATTRIBI4SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4sv");
  continue;
}

if(strcmp("glVertexAttribI4ubv",call_name)==0){
  (PFNGLVERTEXATTRIBI4UBVPROC) func = (PFNGLVERTEXATTRIBI4UBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4ubv");
  continue;
}

if(strcmp("glVertexAttribI4usv",call_name)==0){
  (PFNGLVERTEXATTRIBI4USVPROC) func = (PFNGLVERTEXATTRIBI4USVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4usv");
  continue;
}

if(strcmp("glVertexAttribIPointer",call_name)==0){
  (PFNGLVERTEXATTRIBIPOINTERPROC) func = (PFNGLVERTEXATTRIBIPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribIPointer");
  continue;
}

if(strcmp("glPrimitiveRestartIndex",call_name)==0){
  (PFNGLPRIMITIVERESTARTINDEXPROC) func = (PFNGLPRIMITIVERESTARTINDEXPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveRestartIndex");
  continue;
}

if(strcmp("glTexBuffer",call_name)==0){
  (PFNGLTEXBUFFERPROC) func = (PFNGLTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glTexBuffer");
  continue;
}

if(strcmp("glFramebufferTexture",call_name)==0){
  (PFNGLFRAMEBUFFERTEXTUREPROC) func = (PFNGLFRAMEBUFFERTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture");
  continue;
}

if(strcmp("glGetBufferParameteri64v",call_name)==0){
  (PFNGLGETBUFFERPARAMETERI64VPROC) func = (PFNGLGETBUFFERPARAMETERI64VPROC)glXGetProcAddress((const GLubyte*)"glGetBufferParameteri64v");
  continue;
}

if(strcmp("glGetInteger64i_v",call_name)==0){
  (PFNGLGETINTEGER64I_VPROC) func = (PFNGLGETINTEGER64I_VPROC)glXGetProcAddress((const GLubyte*)"glGetInteger64i_v");
  continue;
}

if(strcmp("glVertexAttribDivisor",call_name)==0){
  (PFNGLVERTEXATTRIBDIVISORPROC) func = (PFNGLVERTEXATTRIBDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribDivisor");
  continue;
}

if(strcmp("glMinSampleShading",call_name)==0){
  (PFNGLMINSAMPLESHADINGPROC) func = (PFNGLMINSAMPLESHADINGPROC)glXGetProcAddress((const GLubyte*)"glMinSampleShading");
  continue;
}

if(strcmp("glMemoryBarrierByRegion",call_name)==0){
  (PFNGLMEMORYBARRIERBYREGIONPROC) func = (PFNGLMEMORYBARRIERBYREGIONPROC)glXGetProcAddress((const GLubyte*)"glMemoryBarrierByRegion");
  continue;
}

if(strcmp("glBindProgramARB",call_name)==0){
  (PFNGLBINDPROGRAMARBPROC) func = (PFNGLBINDPROGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glBindProgramARB");
  continue;
}

if(strcmp("glDeleteProgramsARB",call_name)==0){
  (PFNGLDELETEPROGRAMSARBPROC) func = (PFNGLDELETEPROGRAMSARBPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgramsARB");
  continue;
}

if(strcmp("glGenProgramsARB",call_name)==0){
  (PFNGLGENPROGRAMSARBPROC) func = (PFNGLGENPROGRAMSARBPROC)glXGetProcAddress((const GLubyte*)"glGenProgramsARB");
  continue;
}

if(strcmp("glGetProgramEnvParameterdvARB",call_name)==0){
  (PFNGLGETPROGRAMENVPARAMETERDVARBPROC) func = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramEnvParameterdvARB");
  continue;
}

if(strcmp("glGetProgramEnvParameterfvARB",call_name)==0){
  (PFNGLGETPROGRAMENVPARAMETERFVARBPROC) func = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramEnvParameterfvARB");
  continue;
}

if(strcmp("glGetProgramLocalParameterdvARB",call_name)==0){
  (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) func = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramLocalParameterdvARB");
  continue;
}

if(strcmp("glGetProgramLocalParameterfvARB",call_name)==0){
  (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) func = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramLocalParameterfvARB");
  continue;
}

if(strcmp("glGetProgramStringARB",call_name)==0){
  (PFNGLGETPROGRAMSTRINGARBPROC) func = (PFNGLGETPROGRAMSTRINGARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStringARB");
  continue;
}

if(strcmp("glGetProgramivARB",call_name)==0){
  (PFNGLGETPROGRAMIVARBPROC) func = (PFNGLGETPROGRAMIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramivARB");
  continue;
}

if(strcmp("glIsProgramARB",call_name)==0){
  (PFNGLISPROGRAMARBPROC) func = (PFNGLISPROGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glIsProgramARB");
  continue;
}

if(strcmp("glProgramEnvParameter4dARB",call_name)==0){
  (PFNGLPROGRAMENVPARAMETER4DARBPROC) func = (PFNGLPROGRAMENVPARAMETER4DARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4dARB");
  continue;
}

if(strcmp("glProgramEnvParameter4dvARB",call_name)==0){
  (PFNGLPROGRAMENVPARAMETER4DVARBPROC) func = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4dvARB");
  continue;
}

if(strcmp("glProgramEnvParameter4fARB",call_name)==0){
  (PFNGLPROGRAMENVPARAMETER4FARBPROC) func = (PFNGLPROGRAMENVPARAMETER4FARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4fARB");
  continue;
}

if(strcmp("glProgramEnvParameter4fvARB",call_name)==0){
  (PFNGLPROGRAMENVPARAMETER4FVARBPROC) func = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4fvARB");
  continue;
}

if(strcmp("glProgramLocalParameter4dARB",call_name)==0){
  (PFNGLPROGRAMLOCALPARAMETER4DARBPROC) func = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4dARB");
  continue;
}

if(strcmp("glProgramLocalParameter4dvARB",call_name)==0){
  (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) func = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4dvARB");
  continue;
}

if(strcmp("glProgramLocalParameter4fARB",call_name)==0){
  (PFNGLPROGRAMLOCALPARAMETER4FARBPROC) func = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4fARB");
  continue;
}

if(strcmp("glProgramLocalParameter4fvARB",call_name)==0){
  (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) func = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4fvARB");
  continue;
}

if(strcmp("glProgramStringARB",call_name)==0){
  (PFNGLPROGRAMSTRINGARBPROC) func = (PFNGLPROGRAMSTRINGARBPROC)glXGetProcAddress((const GLubyte*)"glProgramStringARB");
  continue;
}

if(strcmp("glVertexAttrib1fARB",call_name)==0){
  (PFNGLVERTEXATTRIB1FARBPROC) func = (PFNGLVERTEXATTRIB1FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fARB");
  continue;
}

if(strcmp("glVertexAttrib1fvARB",call_name)==0){
  (PFNGLVERTEXATTRIB1FVARBPROC) func = (PFNGLVERTEXATTRIB1FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fvARB");
  continue;
}

if(strcmp("glVertexAttrib2fARB",call_name)==0){
  (PFNGLVERTEXATTRIB2FARBPROC) func = (PFNGLVERTEXATTRIB2FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fARB");
  continue;
}

if(strcmp("glVertexAttrib2fvARB",call_name)==0){
  (PFNGLVERTEXATTRIB2FVARBPROC) func = (PFNGLVERTEXATTRIB2FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fvARB");
  continue;
}

if(strcmp("glVertexAttrib3fARB",call_name)==0){
  (PFNGLVERTEXATTRIB3FARBPROC) func = (PFNGLVERTEXATTRIB3FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fARB");
  continue;
}

if(strcmp("glVertexAttrib3fvARB",call_name)==0){
  (PFNGLVERTEXATTRIB3FVARBPROC) func = (PFNGLVERTEXATTRIB3FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fvARB");
  continue;
}

if(strcmp("glVertexAttrib4fARB",call_name)==0){
  (PFNGLVERTEXATTRIB4FARBPROC) func = (PFNGLVERTEXATTRIB4FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fARB");
  continue;
}

if(strcmp("glVertexAttrib4fvARB",call_name)==0){
  (PFNGLVERTEXATTRIB4FVARBPROC) func = (PFNGLVERTEXATTRIB4FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fvARB");
  continue;
}

if(strcmp("glAttachObjectARB",call_name)==0){
  (PFNGLATTACHOBJECTARBPROC) func = (PFNGLATTACHOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glAttachObjectARB");
  continue;
}

if(strcmp("glCreateProgramObjectARB",call_name)==0){
  (PFNGLCREATEPROGRAMOBJECTARBPROC) func = (PFNGLCREATEPROGRAMOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glCreateProgramObjectARB");
  continue;
}

if(strcmp("glCreateShaderObjectARB",call_name)==0){
  (PFNGLCREATESHADEROBJECTARBPROC) func = (PFNGLCREATESHADEROBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderObjectARB");
  continue;
}

if(strcmp("glDeleteObjectARB",call_name)==0){
  (PFNGLDELETEOBJECTARBPROC) func = (PFNGLDELETEOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glDeleteObjectARB");
  continue;
}

if(strcmp("glDetachObjectARB",call_name)==0){
  (PFNGLDETACHOBJECTARBPROC) func = (PFNGLDETACHOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glDetachObjectARB");
  continue;
}

if(strcmp("glGetAttachedObjectsARB",call_name)==0){
  (PFNGLGETATTACHEDOBJECTSARBPROC) func = (PFNGLGETATTACHEDOBJECTSARBPROC)glXGetProcAddress((const GLubyte*)"glGetAttachedObjectsARB");
  continue;
}

if(strcmp("glGetHandleARB",call_name)==0){
  (PFNGLGETHANDLEARBPROC) func = (PFNGLGETHANDLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetHandleARB");
  continue;
}

if(strcmp("glGetInfoLogARB",call_name)==0){
  (PFNGLGETINFOLOGARBPROC) func = (PFNGLGETINFOLOGARBPROC)glXGetProcAddress((const GLubyte*)"glGetInfoLogARB");
  continue;
}

if(strcmp("glGetObjectParameterfvARB",call_name)==0){
  (PFNGLGETOBJECTPARAMETERFVARBPROC) func = (PFNGLGETOBJECTPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterfvARB");
  continue;
}

if(strcmp("glGetObjectParameterivARB",call_name)==0){
  (PFNGLGETOBJECTPARAMETERIVARBPROC) func = (PFNGLGETOBJECTPARAMETERIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterivARB");
  continue;
}

if(strcmp("glDrawArraysInstancedARB",call_name)==0){
  (PFNGLDRAWARRAYSINSTANCEDARBPROC) func = (PFNGLDRAWARRAYSINSTANCEDARBPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysInstancedARB");
  continue;
}

if(strcmp("glDrawElementsInstancedARB",call_name)==0){
  (PFNGLDRAWELEMENTSINSTANCEDARBPROC) func = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedARB");
  continue;
}

if(strcmp("glBindFramebuffer",call_name)==0){
  (PFNGLBINDFRAMEBUFFERPROC) func = (PFNGLBINDFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindFramebuffer");
  continue;
}

if(strcmp("glBindRenderbuffer",call_name)==0){
  (PFNGLBINDRENDERBUFFERPROC) func = (PFNGLBINDRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindRenderbuffer");
  continue;
}

if(strcmp("glBlitFramebuffer",call_name)==0){
  (PFNGLBLITFRAMEBUFFERPROC) func = (PFNGLBLITFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBlitFramebuffer");
  continue;
}

if(strcmp("glCheckFramebufferStatus",call_name)==0){
  (PFNGLCHECKFRAMEBUFFERSTATUSPROC) func = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)glXGetProcAddress((const GLubyte*)"glCheckFramebufferStatus");
  continue;
}

if(strcmp("glDeleteFramebuffers",call_name)==0){
  (PFNGLDELETEFRAMEBUFFERSPROC) func = (PFNGLDELETEFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteFramebuffers");
  continue;
}

if(strcmp("glDeleteRenderbuffers",call_name)==0){
  (PFNGLDELETERENDERBUFFERSPROC) func = (PFNGLDELETERENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteRenderbuffers");
  continue;
}

if(strcmp("glFramebufferRenderbuffer",call_name)==0){
  (PFNGLFRAMEBUFFERRENDERBUFFERPROC) func = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glFramebufferRenderbuffer");
  continue;
}

if(strcmp("glFramebufferTexture1D",call_name)==0){
  (PFNGLFRAMEBUFFERTEXTURE1DPROC) func = (PFNGLFRAMEBUFFERTEXTURE1DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture1D");
  continue;
}

if(strcmp("glFramebufferTexture2D",call_name)==0){
  (PFNGLFRAMEBUFFERTEXTURE2DPROC) func = (PFNGLFRAMEBUFFERTEXTURE2DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture2D");
  continue;
}

if(strcmp("glFramebufferTexture3D",call_name)==0){
  (PFNGLFRAMEBUFFERTEXTURE3DPROC) func = (PFNGLFRAMEBUFFERTEXTURE3DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture3D");
  continue;
}

if(strcmp("glFramebufferTextureLayer",call_name)==0){
  (PFNGLFRAMEBUFFERTEXTURELAYERPROC) func = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTextureLayer");
  continue;
}

if(strcmp("glGenFramebuffers",call_name)==0){
  (PFNGLGENFRAMEBUFFERSPROC) func = (PFNGLGENFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenFramebuffers");
  continue;
}

if(strcmp("glGenRenderbuffers",call_name)==0){
  (PFNGLGENRENDERBUFFERSPROC) func = (PFNGLGENRENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenRenderbuffers");
  continue;
}

if(strcmp("glGenerateMipmap",call_name)==0){
  (PFNGLGENERATEMIPMAPPROC) func = (PFNGLGENERATEMIPMAPPROC)glXGetProcAddress((const GLubyte*)"glGenerateMipmap");
  continue;
}

if(strcmp("glGetFramebufferAttachmentParameteriv",call_name)==0){
  (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) func = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetFramebufferAttachmentParameteriv");
  continue;
}

if(strcmp("glGetRenderbufferParameteriv",call_name)==0){
  (PFNGLGETRENDERBUFFERPARAMETERIVPROC) func = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetRenderbufferParameteriv");
  continue;
}

if(strcmp("glIsFramebuffer",call_name)==0){
  (PFNGLISFRAMEBUFFERPROC) func = (PFNGLISFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsFramebuffer");
  continue;
}

if(strcmp("glIsRenderbuffer",call_name)==0){
  (PFNGLISRENDERBUFFERPROC) func = (PFNGLISRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsRenderbuffer");
  continue;
}

if(strcmp("glRenderbufferStorage",call_name)==0){
  (PFNGLRENDERBUFFERSTORAGEPROC) func = (PFNGLRENDERBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glRenderbufferStorage");
  continue;
}

if(strcmp("glRenderbufferStorageMultisample",call_name)==0){
  (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) func = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glRenderbufferStorageMultisample");
  continue;
}

if(strcmp("glFlushMappedBufferRange",call_name)==0){
  (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) func = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedBufferRange");
  continue;
}

if(strcmp("glMapBufferRange",call_name)==0){
  (PFNGLMAPBUFFERRANGEPROC) func = (PFNGLMAPBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glMapBufferRange");
  continue;
}

if(strcmp("glBindVertexArray",call_name)==0){
  (PFNGLBINDVERTEXARRAYPROC) func = (PFNGLBINDVERTEXARRAYPROC)glXGetProcAddress((const GLubyte*)"glBindVertexArray");
  continue;
}

if(strcmp("glDeleteVertexArrays",call_name)==0){
  (PFNGLDELETEVERTEXARRAYSPROC) func = (PFNGLDELETEVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glDeleteVertexArrays");
  continue;
}

if(strcmp("glGenVertexArrays",call_name)==0){
  (PFNGLGENVERTEXARRAYSPROC) func = (PFNGLGENVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glGenVertexArrays");
  continue;
}

if(strcmp("glIsVertexArray",call_name)==0){
  (PFNGLISVERTEXARRAYPROC) func = (PFNGLISVERTEXARRAYPROC)glXGetProcAddress((const GLubyte*)"glIsVertexArray");
  continue;
}

if(strcmp("glGetActiveUniformBlockName",call_name)==0){
  (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) func = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformBlockName");
  continue;
}

if(strcmp("glGetActiveUniformBlockiv",call_name)==0){
  (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) func = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformBlockiv");
  continue;
}

if(strcmp("glGetActiveUniformName",call_name)==0){
  (PFNGLGETACTIVEUNIFORMNAMEPROC) func = (PFNGLGETACTIVEUNIFORMNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformName");
  continue;
}

if(strcmp("glGetActiveUniformsiv",call_name)==0){
  (PFNGLGETACTIVEUNIFORMSIVPROC) func = (PFNGLGETACTIVEUNIFORMSIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformsiv");
  continue;
}

if(strcmp("glGetUniformBlockIndex",call_name)==0){
  (PFNGLGETUNIFORMBLOCKINDEXPROC) func = (PFNGLGETUNIFORMBLOCKINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetUniformBlockIndex");
  continue;
}

if(strcmp("glGetUniformIndices",call_name)==0){
  (PFNGLGETUNIFORMINDICESPROC) func = (PFNGLGETUNIFORMINDICESPROC)glXGetProcAddress((const GLubyte*)"glGetUniformIndices");
  continue;
}

if(strcmp("glUniformBlockBinding",call_name)==0){
  (PFNGLUNIFORMBLOCKBINDINGPROC) func = (PFNGLUNIFORMBLOCKBINDINGPROC)glXGetProcAddress((const GLubyte*)"glUniformBlockBinding");
  continue;
}

if(strcmp("glCopyBufferSubData",call_name)==0){
  (PFNGLCOPYBUFFERSUBDATAPROC) func = (PFNGLCOPYBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyBufferSubData");
  continue;
}

if(strcmp("glClientWaitSync",call_name)==0){
  (PFNGLCLIENTWAITSYNCPROC) func = (PFNGLCLIENTWAITSYNCPROC)glXGetProcAddress((const GLubyte*)"glClientWaitSync");
  continue;
}

if(strcmp("glDeleteSync",call_name)==0){
  (PFNGLDELETESYNCPROC) func = (PFNGLDELETESYNCPROC)glXGetProcAddress((const GLubyte*)"glDeleteSync");
  continue;
}

if(strcmp("glFenceSync",call_name)==0){
  (PFNGLFENCESYNCPROC) func = (PFNGLFENCESYNCPROC)glXGetProcAddress((const GLubyte*)"glFenceSync");
  continue;
}

if(strcmp("glGetInteger64v",call_name)==0){
  (PFNGLGETINTEGER64VPROC) func = (PFNGLGETINTEGER64VPROC)glXGetProcAddress((const GLubyte*)"glGetInteger64v");
  continue;
}

if(strcmp("glGetSynciv",call_name)==0){
  (PFNGLGETSYNCIVPROC) func = (PFNGLGETSYNCIVPROC)glXGetProcAddress((const GLubyte*)"glGetSynciv");
  continue;
}

if(strcmp("glIsSync",call_name)==0){
  (PFNGLISSYNCPROC) func = (PFNGLISSYNCPROC)glXGetProcAddress((const GLubyte*)"glIsSync");
  continue;
}

if(strcmp("glWaitSync",call_name)==0){
  (PFNGLWAITSYNCPROC) func = (PFNGLWAITSYNCPROC)glXGetProcAddress((const GLubyte*)"glWaitSync");
  continue;
}

if(strcmp("glDrawElementsBaseVertex",call_name)==0){
  (PFNGLDRAWELEMENTSBASEVERTEXPROC) func = (PFNGLDRAWELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsBaseVertex");
  continue;
}

if(strcmp("glDrawElementsInstancedBaseVertex",call_name)==0){
  (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) func = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertex");
  continue;
}

if(strcmp("glDrawRangeElementsBaseVertex",call_name)==0){
  (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) func = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawRangeElementsBaseVertex");
  continue;
}

if(strcmp("glMultiDrawElementsBaseVertex",call_name)==0){
  (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) func = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsBaseVertex");
  continue;
}

if(strcmp("glProvokingVertex",call_name)==0){
  (PFNGLPROVOKINGVERTEXPROC) func = (PFNGLPROVOKINGVERTEXPROC)glXGetProcAddress((const GLubyte*)"glProvokingVertex");
  continue;
}

if(strcmp("glGetMultisamplefv",call_name)==0){
  (PFNGLGETMULTISAMPLEFVPROC) func = (PFNGLGETMULTISAMPLEFVPROC)glXGetProcAddress((const GLubyte*)"glGetMultisamplefv");
  continue;
}

if(strcmp("glSampleMaski",call_name)==0){
  (PFNGLSAMPLEMASKIPROC) func = (PFNGLSAMPLEMASKIPROC)glXGetProcAddress((const GLubyte*)"glSampleMaski");
  continue;
}

if(strcmp("glTexImage2DMultisample",call_name)==0){
  (PFNGLTEXIMAGE2DMULTISAMPLEPROC) func = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexImage2DMultisample");
  continue;
}

if(strcmp("glTexImage3DMultisample",call_name)==0){
  (PFNGLTEXIMAGE3DMULTISAMPLEPROC) func = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexImage3DMultisample");
  continue;
}

if(strcmp("glBlendEquationSeparateiARB",call_name)==0){
  (PFNGLBLENDEQUATIONSEPARATEIARBPROC) func = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationSeparateiARB");
  continue;
}

if(strcmp("glBlendEquationiARB",call_name)==0){
  (PFNGLBLENDEQUATIONIARBPROC) func = (PFNGLBLENDEQUATIONIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationiARB");
  continue;
}

if(strcmp("glBlendFuncSeparateiARB",call_name)==0){
  (PFNGLBLENDFUNCSEPARATEIARBPROC) func = (PFNGLBLENDFUNCSEPARATEIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendFuncSeparateiARB");
  continue;
}

if(strcmp("glBlendFunciARB",call_name)==0){
  (PFNGLBLENDFUNCIARBPROC) func = (PFNGLBLENDFUNCIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendFunciARB");
  continue;
}

if(strcmp("glBindFragDataLocationIndexed",call_name)==0){
  (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) func = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glBindFragDataLocationIndexed");
  continue;
}

if(strcmp("glGetFragDataIndex",call_name)==0){
  (PFNGLGETFRAGDATAINDEXPROC) func = (PFNGLGETFRAGDATAINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetFragDataIndex");
  continue;
}

if(strcmp("glBindSampler",call_name)==0){
  (PFNGLBINDSAMPLERPROC) func = (PFNGLBINDSAMPLERPROC)glXGetProcAddress((const GLubyte*)"glBindSampler");
  continue;
}

if(strcmp("glDeleteSamplers",call_name)==0){
  (PFNGLDELETESAMPLERSPROC) func = (PFNGLDELETESAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteSamplers");
  continue;
}

if(strcmp("glGenSamplers",call_name)==0){
  (PFNGLGENSAMPLERSPROC) func = (PFNGLGENSAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glGenSamplers");
  continue;
}

if(strcmp("glGetSamplerParameterIiv",call_name)==0){
  (PFNGLGETSAMPLERPARAMETERIIVPROC) func = (PFNGLGETSAMPLERPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterIiv");
  continue;
}

if(strcmp("glGetSamplerParameterIuiv",call_name)==0){
  (PFNGLGETSAMPLERPARAMETERIUIVPROC) func = (PFNGLGETSAMPLERPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterIuiv");
  continue;
}

if(strcmp("glGetSamplerParameterfv",call_name)==0){
  (PFNGLGETSAMPLERPARAMETERFVPROC) func = (PFNGLGETSAMPLERPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterfv");
  continue;
}

if(strcmp("glGetSamplerParameteriv",call_name)==0){
  (PFNGLGETSAMPLERPARAMETERIVPROC) func = (PFNGLGETSAMPLERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameteriv");
  continue;
}

if(strcmp("glIsSampler",call_name)==0){
  (PFNGLISSAMPLERPROC) func = (PFNGLISSAMPLERPROC)glXGetProcAddress((const GLubyte*)"glIsSampler");
  continue;
}

if(strcmp("glSamplerParameterIiv",call_name)==0){
  (PFNGLSAMPLERPARAMETERIIVPROC) func = (PFNGLSAMPLERPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterIiv");
  continue;
}

if(strcmp("glSamplerParameterIuiv",call_name)==0){
  (PFNGLSAMPLERPARAMETERIUIVPROC) func = (PFNGLSAMPLERPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterIuiv");
  continue;
}

if(strcmp("glSamplerParameterf",call_name)==0){
  (PFNGLSAMPLERPARAMETERFPROC) func = (PFNGLSAMPLERPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterf");
  continue;
}

if(strcmp("glSamplerParameterfv",call_name)==0){
  (PFNGLSAMPLERPARAMETERFVPROC) func = (PFNGLSAMPLERPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterfv");
  continue;
}

if(strcmp("glSamplerParameteri",call_name)==0){
  (PFNGLSAMPLERPARAMETERIPROC) func = (PFNGLSAMPLERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameteri");
  continue;
}

if(strcmp("glSamplerParameteriv",call_name)==0){
  (PFNGLSAMPLERPARAMETERIVPROC) func = (PFNGLSAMPLERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameteriv");
  continue;
}

if(strcmp("glGetQueryObjecti64v",call_name)==0){
  (PFNGLGETQUERYOBJECTI64VPROC) func = (PFNGLGETQUERYOBJECTI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjecti64v");
  continue;
}

if(strcmp("glGetQueryObjectui64v",call_name)==0){
  (PFNGLGETQUERYOBJECTUI64VPROC) func = (PFNGLGETQUERYOBJECTUI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectui64v");
  continue;
}

if(strcmp("glQueryCounter",call_name)==0){
  (PFNGLQUERYCOUNTERPROC) func = (PFNGLQUERYCOUNTERPROC)glXGetProcAddress((const GLubyte*)"glQueryCounter");
  continue;
}

if(strcmp("glColorP3ui",call_name)==0){
  (PFNGLCOLORP3UIPROC) func = (PFNGLCOLORP3UIPROC)glXGetProcAddress((const GLubyte*)"glColorP3ui");
  continue;
}

if(strcmp("glColorP3uiv",call_name)==0){
  (PFNGLCOLORP3UIVPROC) func = (PFNGLCOLORP3UIVPROC)glXGetProcAddress((const GLubyte*)"glColorP3uiv");
  continue;
}

if(strcmp("glColorP4ui",call_name)==0){
  (PFNGLCOLORP4UIPROC) func = (PFNGLCOLORP4UIPROC)glXGetProcAddress((const GLubyte*)"glColorP4ui");
  continue;
}

if(strcmp("glColorP4uiv",call_name)==0){
  (PFNGLCOLORP4UIVPROC) func = (PFNGLCOLORP4UIVPROC)glXGetProcAddress((const GLubyte*)"glColorP4uiv");
  continue;
}

if(strcmp("glMultiTexCoordP1ui",call_name)==0){
  (PFNGLMULTITEXCOORDP1UIPROC) func = (PFNGLMULTITEXCOORDP1UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP1ui");
  continue;
}

if(strcmp("glMultiTexCoordP1uiv",call_name)==0){
  (PFNGLMULTITEXCOORDP1UIVPROC) func = (PFNGLMULTITEXCOORDP1UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP1uiv");
  continue;
}

if(strcmp("glMultiTexCoordP2ui",call_name)==0){
  (PFNGLMULTITEXCOORDP2UIPROC) func = (PFNGLMULTITEXCOORDP2UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP2ui");
  continue;
}

if(strcmp("glMultiTexCoordP2uiv",call_name)==0){
  (PFNGLMULTITEXCOORDP2UIVPROC) func = (PFNGLMULTITEXCOORDP2UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP2uiv");
  continue;
}

if(strcmp("glMultiTexCoordP3ui",call_name)==0){
  (PFNGLMULTITEXCOORDP3UIPROC) func = (PFNGLMULTITEXCOORDP3UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP3ui");
  continue;
}

if(strcmp("glMultiTexCoordP3uiv",call_name)==0){
  (PFNGLMULTITEXCOORDP3UIVPROC) func = (PFNGLMULTITEXCOORDP3UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP3uiv");
  continue;
}

if(strcmp("glMultiTexCoordP4ui",call_name)==0){
  (PFNGLMULTITEXCOORDP4UIPROC) func = (PFNGLMULTITEXCOORDP4UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP4ui");
  continue;
}

if(strcmp("glMultiTexCoordP4uiv",call_name)==0){
  (PFNGLMULTITEXCOORDP4UIVPROC) func = (PFNGLMULTITEXCOORDP4UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP4uiv");
  continue;
}

if(strcmp("glNormalP3ui",call_name)==0){
  (PFNGLNORMALP3UIPROC) func = (PFNGLNORMALP3UIPROC)glXGetProcAddress((const GLubyte*)"glNormalP3ui");
  continue;
}

if(strcmp("glNormalP3uiv",call_name)==0){
  (PFNGLNORMALP3UIVPROC) func = (PFNGLNORMALP3UIVPROC)glXGetProcAddress((const GLubyte*)"glNormalP3uiv");
  continue;
}

if(strcmp("glSecondaryColorP3ui",call_name)==0){
  (PFNGLSECONDARYCOLORP3UIPROC) func = (PFNGLSECONDARYCOLORP3UIPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorP3ui");
  continue;
}

if(strcmp("glSecondaryColorP3uiv",call_name)==0){
  (PFNGLSECONDARYCOLORP3UIVPROC) func = (PFNGLSECONDARYCOLORP3UIVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorP3uiv");
  continue;
}

if(strcmp("glTexCoordP1ui",call_name)==0){
  (PFNGLTEXCOORDP1UIPROC) func = (PFNGLTEXCOORDP1UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP1ui");
  continue;
}

if(strcmp("glTexCoordP1uiv",call_name)==0){
  (PFNGLTEXCOORDP1UIVPROC) func = (PFNGLTEXCOORDP1UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP1uiv");
  continue;
}

if(strcmp("glTexCoordP2ui",call_name)==0){
  (PFNGLTEXCOORDP2UIPROC) func = (PFNGLTEXCOORDP2UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP2ui");
  continue;
}

if(strcmp("glTexCoordP2uiv",call_name)==0){
  (PFNGLTEXCOORDP2UIVPROC) func = (PFNGLTEXCOORDP2UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP2uiv");
  continue;
}

if(strcmp("glTexCoordP3ui",call_name)==0){
  (PFNGLTEXCOORDP3UIPROC) func = (PFNGLTEXCOORDP3UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP3ui");
  continue;
}

if(strcmp("glTexCoordP3uiv",call_name)==0){
  (PFNGLTEXCOORDP3UIVPROC) func = (PFNGLTEXCOORDP3UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP3uiv");
  continue;
}

if(strcmp("glTexCoordP4ui",call_name)==0){
  (PFNGLTEXCOORDP4UIPROC) func = (PFNGLTEXCOORDP4UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP4ui");
  continue;
}

if(strcmp("glTexCoordP4uiv",call_name)==0){
  (PFNGLTEXCOORDP4UIVPROC) func = (PFNGLTEXCOORDP4UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP4uiv");
  continue;
}

if(strcmp("glVertexAttribP1ui",call_name)==0){
  (PFNGLVERTEXATTRIBP1UIPROC) func = (PFNGLVERTEXATTRIBP1UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP1ui");
  continue;
}

if(strcmp("glVertexAttribP1uiv",call_name)==0){
  (PFNGLVERTEXATTRIBP1UIVPROC) func = (PFNGLVERTEXATTRIBP1UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP1uiv");
  continue;
}

if(strcmp("glVertexAttribP2ui",call_name)==0){
  (PFNGLVERTEXATTRIBP2UIPROC) func = (PFNGLVERTEXATTRIBP2UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP2ui");
  continue;
}

if(strcmp("glVertexAttribP2uiv",call_name)==0){
  (PFNGLVERTEXATTRIBP2UIVPROC) func = (PFNGLVERTEXATTRIBP2UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP2uiv");
  continue;
}

if(strcmp("glVertexAttribP3ui",call_name)==0){
  (PFNGLVERTEXATTRIBP3UIPROC) func = (PFNGLVERTEXATTRIBP3UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP3ui");
  continue;
}

if(strcmp("glVertexAttribP3uiv",call_name)==0){
  (PFNGLVERTEXATTRIBP3UIVPROC) func = (PFNGLVERTEXATTRIBP3UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP3uiv");
  continue;
}

if(strcmp("glVertexAttribP4ui",call_name)==0){
  (PFNGLVERTEXATTRIBP4UIPROC) func = (PFNGLVERTEXATTRIBP4UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP4ui");
  continue;
}

if(strcmp("glVertexAttribP4uiv",call_name)==0){
  (PFNGLVERTEXATTRIBP4UIVPROC) func = (PFNGLVERTEXATTRIBP4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP4uiv");
  continue;
}

if(strcmp("glVertexP2ui",call_name)==0){
  (PFNGLVERTEXP2UIPROC) func = (PFNGLVERTEXP2UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP2ui");
  continue;
}

if(strcmp("glVertexP2uiv",call_name)==0){
  (PFNGLVERTEXP2UIVPROC) func = (PFNGLVERTEXP2UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP2uiv");
  continue;
}

if(strcmp("glVertexP3ui",call_name)==0){
  (PFNGLVERTEXP3UIPROC) func = (PFNGLVERTEXP3UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP3ui");
  continue;
}

if(strcmp("glVertexP3uiv",call_name)==0){
  (PFNGLVERTEXP3UIVPROC) func = (PFNGLVERTEXP3UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP3uiv");
  continue;
}

if(strcmp("glVertexP4ui",call_name)==0){
  (PFNGLVERTEXP4UIPROC) func = (PFNGLVERTEXP4UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP4ui");
  continue;
}

if(strcmp("glVertexP4uiv",call_name)==0){
  (PFNGLVERTEXP4UIVPROC) func = (PFNGLVERTEXP4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP4uiv");
  continue;
}

if(strcmp("glDrawArraysIndirect",call_name)==0){
  (PFNGLDRAWARRAYSINDIRECTPROC) func = (PFNGLDRAWARRAYSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysIndirect");
  continue;
}

if(strcmp("glDrawElementsIndirect",call_name)==0){
  (PFNGLDRAWELEMENTSINDIRECTPROC) func = (PFNGLDRAWELEMENTSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsIndirect");
  continue;
}

if(strcmp("glGetUniformdv",call_name)==0){
  (PFNGLGETUNIFORMDVPROC) func = (PFNGLGETUNIFORMDVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformdv");
  continue;
}

if(strcmp("glUniform1d",call_name)==0){
  (PFNGLUNIFORM1DPROC) func = (PFNGLUNIFORM1DPROC)glXGetProcAddress((const GLubyte*)"glUniform1d");
  continue;
}

if(strcmp("glUniform1dv",call_name)==0){
  (PFNGLUNIFORM1DVPROC) func = (PFNGLUNIFORM1DVPROC)glXGetProcAddress((const GLubyte*)"glUniform1dv");
  continue;
}

if(strcmp("glUniform2d",call_name)==0){
  (PFNGLUNIFORM2DPROC) func = (PFNGLUNIFORM2DPROC)glXGetProcAddress((const GLubyte*)"glUniform2d");
  continue;
}

if(strcmp("glUniform2dv",call_name)==0){
  (PFNGLUNIFORM2DVPROC) func = (PFNGLUNIFORM2DVPROC)glXGetProcAddress((const GLubyte*)"glUniform2dv");
  continue;
}

if(strcmp("glUniform3d",call_name)==0){
  (PFNGLUNIFORM3DPROC) func = (PFNGLUNIFORM3DPROC)glXGetProcAddress((const GLubyte*)"glUniform3d");
  continue;
}

if(strcmp("glUniform3dv",call_name)==0){
  (PFNGLUNIFORM3DVPROC) func = (PFNGLUNIFORM3DVPROC)glXGetProcAddress((const GLubyte*)"glUniform3dv");
  continue;
}

if(strcmp("glUniform4d",call_name)==0){
  (PFNGLUNIFORM4DPROC) func = (PFNGLUNIFORM4DPROC)glXGetProcAddress((const GLubyte*)"glUniform4d");
  continue;
}

if(strcmp("glUniform4dv",call_name)==0){
  (PFNGLUNIFORM4DVPROC) func = (PFNGLUNIFORM4DVPROC)glXGetProcAddress((const GLubyte*)"glUniform4dv");
  continue;
}

if(strcmp("glUniformMatrix2dv",call_name)==0){
  (PFNGLUNIFORMMATRIX2DVPROC) func = (PFNGLUNIFORMMATRIX2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2dv");
  continue;
}

if(strcmp("glUniformMatrix2x3dv",call_name)==0){
  (PFNGLUNIFORMMATRIX2X3DVPROC) func = (PFNGLUNIFORMMATRIX2X3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x3dv");
  continue;
}

if(strcmp("glUniformMatrix2x4dv",call_name)==0){
  (PFNGLUNIFORMMATRIX2X4DVPROC) func = (PFNGLUNIFORMMATRIX2X4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x4dv");
  continue;
}

if(strcmp("glUniformMatrix3dv",call_name)==0){
  (PFNGLUNIFORMMATRIX3DVPROC) func = (PFNGLUNIFORMMATRIX3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3dv");
  continue;
}

if(strcmp("glUniformMatrix3x2dv",call_name)==0){
  (PFNGLUNIFORMMATRIX3X2DVPROC) func = (PFNGLUNIFORMMATRIX3X2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x2dv");
  continue;
}

if(strcmp("glUniformMatrix3x4dv",call_name)==0){
  (PFNGLUNIFORMMATRIX3X4DVPROC) func = (PFNGLUNIFORMMATRIX3X4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x4dv");
  continue;
}

if(strcmp("glUniformMatrix4dv",call_name)==0){
  (PFNGLUNIFORMMATRIX4DVPROC) func = (PFNGLUNIFORMMATRIX4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4dv");
  continue;
}

if(strcmp("glUniformMatrix4x2dv",call_name)==0){
  (PFNGLUNIFORMMATRIX4X2DVPROC) func = (PFNGLUNIFORMMATRIX4X2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x2dv");
  continue;
}

if(strcmp("glUniformMatrix4x3dv",call_name)==0){
  (PFNGLUNIFORMMATRIX4X3DVPROC) func = (PFNGLUNIFORMMATRIX4X3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x3dv");
  continue;
}

if(strcmp("glGetActiveSubroutineName",call_name)==0){
  (PFNGLGETACTIVESUBROUTINENAMEPROC) func = (PFNGLGETACTIVESUBROUTINENAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineName");
  continue;
}

if(strcmp("glGetActiveSubroutineUniformName",call_name)==0){
  (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) func = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformName");
  continue;
}

if(strcmp("glGetActiveSubroutineUniformiv",call_name)==0){
  (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) func = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformiv");
  continue;
}

if(strcmp("glGetProgramStageiv",call_name)==0){
  (PFNGLGETPROGRAMSTAGEIVPROC) func = (PFNGLGETPROGRAMSTAGEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStageiv");
  continue;
}

if(strcmp("glGetSubroutineIndex",call_name)==0){
  (PFNGLGETSUBROUTINEINDEXPROC) func = (PFNGLGETSUBROUTINEINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetSubroutineIndex");
  continue;
}

if(strcmp("glGetSubroutineUniformLocation",call_name)==0){
  (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) func = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetSubroutineUniformLocation");
  continue;
}

if(strcmp("glGetUniformSubroutineuiv",call_name)==0){
  (PFNGLGETUNIFORMSUBROUTINEUIVPROC) func = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformSubroutineuiv");
  continue;
}

if(strcmp("glUniformSubroutinesuiv",call_name)==0){
  (PFNGLUNIFORMSUBROUTINESUIVPROC) func = (PFNGLUNIFORMSUBROUTINESUIVPROC)glXGetProcAddress((const GLubyte*)"glUniformSubroutinesuiv");
  continue;
}

if(strcmp("glPatchParameterfv",call_name)==0){
  (PFNGLPATCHPARAMETERFVPROC) func = (PFNGLPATCHPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glPatchParameterfv");
  continue;
}

if(strcmp("glPatchParameteri",call_name)==0){
  (PFNGLPATCHPARAMETERIPROC) func = (PFNGLPATCHPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glPatchParameteri");
  continue;
}

if(strcmp("glBindTransformFeedback",call_name)==0){
  (PFNGLBINDTRANSFORMFEEDBACKPROC) func = (PFNGLBINDTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glBindTransformFeedback");
  continue;
}

if(strcmp("glDeleteTransformFeedbacks",call_name)==0){
  (PFNGLDELETETRANSFORMFEEDBACKSPROC) func = (PFNGLDELETETRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glDeleteTransformFeedbacks");
  continue;
}

if(strcmp("glDrawTransformFeedback",call_name)==0){
  (PFNGLDRAWTRANSFORMFEEDBACKPROC) func = (PFNGLDRAWTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedback");
  continue;
}

if(strcmp("glGenTransformFeedbacks",call_name)==0){
  (PFNGLGENTRANSFORMFEEDBACKSPROC) func = (PFNGLGENTRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glGenTransformFeedbacks");
  continue;
}

if(strcmp("glIsTransformFeedback",call_name)==0){
  (PFNGLISTRANSFORMFEEDBACKPROC) func = (PFNGLISTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glIsTransformFeedback");
  continue;
}

if(strcmp("glPauseTransformFeedback",call_name)==0){
  (PFNGLPAUSETRANSFORMFEEDBACKPROC) func = (PFNGLPAUSETRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glPauseTransformFeedback");
  continue;
}

if(strcmp("glResumeTransformFeedback",call_name)==0){
  (PFNGLRESUMETRANSFORMFEEDBACKPROC) func = (PFNGLRESUMETRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glResumeTransformFeedback");
  continue;
}

if(strcmp("glBeginQueryIndexed",call_name)==0){
  (PFNGLBEGINQUERYINDEXEDPROC) func = (PFNGLBEGINQUERYINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glBeginQueryIndexed");
  continue;
}

if(strcmp("glDrawTransformFeedbackStream",call_name)==0){
  (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) func = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackStream");
  continue;
}

if(strcmp("glEndQueryIndexed",call_name)==0){
  (PFNGLENDQUERYINDEXEDPROC) func = (PFNGLENDQUERYINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glEndQueryIndexed");
  continue;
}

if(strcmp("glGetQueryIndexediv",call_name)==0){
  (PFNGLGETQUERYINDEXEDIVPROC) func = (PFNGLGETQUERYINDEXEDIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryIndexediv");
  continue;
}

if(strcmp("glClearDepthf",call_name)==0){
  (PFNGLCLEARDEPTHFPROC) func = (PFNGLCLEARDEPTHFPROC)glXGetProcAddress((const GLubyte*)"glClearDepthf");
  continue;
}

if(strcmp("glDepthRangef",call_name)==0){
  (PFNGLDEPTHRANGEFPROC) func = (PFNGLDEPTHRANGEFPROC)glXGetProcAddress((const GLubyte*)"glDepthRangef");
  continue;
}

if(strcmp("glGetShaderPrecisionFormat",call_name)==0){
  (PFNGLGETSHADERPRECISIONFORMATPROC) func = (PFNGLGETSHADERPRECISIONFORMATPROC)glXGetProcAddress((const GLubyte*)"glGetShaderPrecisionFormat");
  continue;
}

if(strcmp("glReleaseShaderCompiler",call_name)==0){
  (PFNGLRELEASESHADERCOMPILERPROC) func = (PFNGLRELEASESHADERCOMPILERPROC)glXGetProcAddress((const GLubyte*)"glReleaseShaderCompiler");
  continue;
}

if(strcmp("glShaderBinary",call_name)==0){
  (PFNGLSHADERBINARYPROC) func = (PFNGLSHADERBINARYPROC)glXGetProcAddress((const GLubyte*)"glShaderBinary");
  continue;
}

if(strcmp("glGetProgramBinary",call_name)==0){
  (PFNGLGETPROGRAMBINARYPROC) func = (PFNGLGETPROGRAMBINARYPROC)glXGetProcAddress((const GLubyte*)"glGetProgramBinary");
  continue;
}

if(strcmp("glProgramBinary",call_name)==0){
  (PFNGLPROGRAMBINARYPROC) func = (PFNGLPROGRAMBINARYPROC)glXGetProcAddress((const GLubyte*)"glProgramBinary");
  continue;
}

if(strcmp("glProgramParameteri",call_name)==0){
  (PFNGLPROGRAMPARAMETERIPROC) func = (PFNGLPROGRAMPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glProgramParameteri");
  continue;
}

if(strcmp("glGetVertexAttribLdv",call_name)==0){
  (PFNGLGETVERTEXATTRIBLDVPROC) func = (PFNGLGETVERTEXATTRIBLDVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribLdv");
  continue;
}

if(strcmp("glVertexAttribL1d",call_name)==0){
  (PFNGLVERTEXATTRIBL1DPROC) func = (PFNGLVERTEXATTRIBL1DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL1d");
  continue;
}

if(strcmp("glVertexAttribL1dv",call_name)==0){
  (PFNGLVERTEXATTRIBL1DVPROC) func = (PFNGLVERTEXATTRIBL1DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL1dv");
  continue;
}

if(strcmp("glVertexAttribL2d",call_name)==0){
  (PFNGLVERTEXATTRIBL2DPROC) func = (PFNGLVERTEXATTRIBL2DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL2d");
  continue;
}

if(strcmp("glVertexAttribL2dv",call_name)==0){
  (PFNGLVERTEXATTRIBL2DVPROC) func = (PFNGLVERTEXATTRIBL2DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL2dv");
  continue;
}

if(strcmp("glVertexAttribL3d",call_name)==0){
  (PFNGLVERTEXATTRIBL3DPROC) func = (PFNGLVERTEXATTRIBL3DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL3d");
  continue;
}

if(strcmp("glVertexAttribL3dv",call_name)==0){
  (PFNGLVERTEXATTRIBL3DVPROC) func = (PFNGLVERTEXATTRIBL3DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL3dv");
  continue;
}

if(strcmp("glVertexAttribL4d",call_name)==0){
  (PFNGLVERTEXATTRIBL4DPROC) func = (PFNGLVERTEXATTRIBL4DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL4d");
  continue;
}

if(strcmp("glVertexAttribL4dv",call_name)==0){
  (PFNGLVERTEXATTRIBL4DVPROC) func = (PFNGLVERTEXATTRIBL4DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL4dv");
  continue;
}

if(strcmp("glVertexAttribLPointer",call_name)==0){
  (PFNGLVERTEXATTRIBLPOINTERPROC) func = (PFNGLVERTEXATTRIBLPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribLPointer");
  continue;
}

if(strcmp("glDepthRangeArrayv",call_name)==0){
  (PFNGLDEPTHRANGEARRAYVPROC) func = (PFNGLDEPTHRANGEARRAYVPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeArrayv");
  continue;
}

if(strcmp("glDepthRangeIndexed",call_name)==0){
  (PFNGLDEPTHRANGEINDEXEDPROC) func = (PFNGLDEPTHRANGEINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeIndexed");
  continue;
}

if(strcmp("glGetDoublei_v",call_name)==0){
  (PFNGLGETDOUBLEI_VPROC) func = (PFNGLGETDOUBLEI_VPROC)glXGetProcAddress((const GLubyte*)"glGetDoublei_v");
  continue;
}

if(strcmp("glGetFloati_v",call_name)==0){
  (PFNGLGETFLOATI_VPROC) func = (PFNGLGETFLOATI_VPROC)glXGetProcAddress((const GLubyte*)"glGetFloati_v");
  continue;
}

if(strcmp("glScissorArrayv",call_name)==0){
  (PFNGLSCISSORARRAYVPROC) func = (PFNGLSCISSORARRAYVPROC)glXGetProcAddress((const GLubyte*)"glScissorArrayv");
  continue;
}

if(strcmp("glScissorIndexed",call_name)==0){
  (PFNGLSCISSORINDEXEDPROC) func = (PFNGLSCISSORINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glScissorIndexed");
  continue;
}

if(strcmp("glScissorIndexedv",call_name)==0){
  (PFNGLSCISSORINDEXEDVPROC) func = (PFNGLSCISSORINDEXEDVPROC)glXGetProcAddress((const GLubyte*)"glScissorIndexedv");
  continue;
}

if(strcmp("glViewportArrayv",call_name)==0){
  (PFNGLVIEWPORTARRAYVPROC) func = (PFNGLVIEWPORTARRAYVPROC)glXGetProcAddress((const GLubyte*)"glViewportArrayv");
  continue;
}

if(strcmp("glViewportIndexedf",call_name)==0){
  (PFNGLVIEWPORTINDEXEDFPROC) func = (PFNGLVIEWPORTINDEXEDFPROC)glXGetProcAddress((const GLubyte*)"glViewportIndexedf");
  continue;
}

if(strcmp("glViewportIndexedfv",call_name)==0){
  (PFNGLVIEWPORTINDEXEDFVPROC) func = (PFNGLVIEWPORTINDEXEDFVPROC)glXGetProcAddress((const GLubyte*)"glViewportIndexedfv");
  continue;
}

if(strcmp("glGetGraphicsResetStatusARB",call_name)==0){
  (PFNGLGETGRAPHICSRESETSTATUSARBPROC) func = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)glXGetProcAddress((const GLubyte*)"glGetGraphicsResetStatusARB");
  continue;
}

if(strcmp("glGetnColorTableARB",call_name)==0){
  (PFNGLGETNCOLORTABLEARBPROC) func = (PFNGLGETNCOLORTABLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnColorTableARB");
  continue;
}

if(strcmp("glGetnCompressedTexImageARB",call_name)==0){
  (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) func = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnCompressedTexImageARB");
  continue;
}

if(strcmp("glGetnConvolutionFilterARB",call_name)==0){
  (PFNGLGETNCONVOLUTIONFILTERARBPROC) func = (PFNGLGETNCONVOLUTIONFILTERARBPROC)glXGetProcAddress((const GLubyte*)"glGetnConvolutionFilterARB");
  continue;
}

if(strcmp("glGetnHistogramARB",call_name)==0){
  (PFNGLGETNHISTOGRAMARBPROC) func = (PFNGLGETNHISTOGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glGetnHistogramARB");
  continue;
}

if(strcmp("glGetnMapdvARB",call_name)==0){
  (PFNGLGETNMAPDVARBPROC) func = (PFNGLGETNMAPDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapdvARB");
  continue;
}

if(strcmp("glGetnMapfvARB",call_name)==0){
  (PFNGLGETNMAPFVARBPROC) func = (PFNGLGETNMAPFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapfvARB");
  continue;
}

if(strcmp("glGetnMapivARB",call_name)==0){
  (PFNGLGETNMAPIVARBPROC) func = (PFNGLGETNMAPIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapivARB");
  continue;
}

if(strcmp("glGetnMinmaxARB",call_name)==0){
  (PFNGLGETNMINMAXARBPROC) func = (PFNGLGETNMINMAXARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMinmaxARB");
  continue;
}

if(strcmp("glGetnPixelMapfvARB",call_name)==0){
  (PFNGLGETNPIXELMAPFVARBPROC) func = (PFNGLGETNPIXELMAPFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapfvARB");
  continue;
}

if(strcmp("glGetnPixelMapuivARB",call_name)==0){
  (PFNGLGETNPIXELMAPUIVARBPROC) func = (PFNGLGETNPIXELMAPUIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapuivARB");
  continue;
}

if(strcmp("glGetnPixelMapusvARB",call_name)==0){
  (PFNGLGETNPIXELMAPUSVARBPROC) func = (PFNGLGETNPIXELMAPUSVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapusvARB");
  continue;
}

if(strcmp("glGetnPolygonStippleARB",call_name)==0){
  (PFNGLGETNPOLYGONSTIPPLEARBPROC) func = (PFNGLGETNPOLYGONSTIPPLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPolygonStippleARB");
  continue;
}

if(strcmp("glGetnSeparableFilterARB",call_name)==0){
  (PFNGLGETNSEPARABLEFILTERARBPROC) func = (PFNGLGETNSEPARABLEFILTERARBPROC)glXGetProcAddress((const GLubyte*)"glGetnSeparableFilterARB");
  continue;
}

if(strcmp("glGetnTexImageARB",call_name)==0){
  (PFNGLGETNTEXIMAGEARBPROC) func = (PFNGLGETNTEXIMAGEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnTexImageARB");
  continue;
}

if(strcmp("glGetnUniformdvARB",call_name)==0){
  (PFNGLGETNUNIFORMDVARBPROC) func = (PFNGLGETNUNIFORMDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformdvARB");
  continue;
}

if(strcmp("glGetnUniformfvARB",call_name)==0){
  (PFNGLGETNUNIFORMFVARBPROC) func = (PFNGLGETNUNIFORMFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformfvARB");
  continue;
}

if(strcmp("glGetnUniformivARB",call_name)==0){
  (PFNGLGETNUNIFORMIVARBPROC) func = (PFNGLGETNUNIFORMIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformivARB");
  continue;
}

if(strcmp("glGetnUniformuivARB",call_name)==0){
  (PFNGLGETNUNIFORMUIVARBPROC) func = (PFNGLGETNUNIFORMUIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformuivARB");
  continue;
}

if(strcmp("glReadnPixelsARB",call_name)==0){
  (PFNGLREADNPIXELSARBPROC) func = (PFNGLREADNPIXELSARBPROC)glXGetProcAddress((const GLubyte*)"glReadnPixelsARB");
  continue;
}

if(strcmp("glDrawArraysInstancedBaseInstance",call_name)==0){
  (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) func = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysInstancedBaseInstance");
  continue;
}

if(strcmp("glDrawElementsInstancedBaseInstance",call_name)==0){
  (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) func = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseInstance");
  continue;
}

if(strcmp("glDrawElementsInstancedBaseVertexBaseInstance",call_name)==0){
  (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) func = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertexBaseInstance");
  continue;
}

if(strcmp("glDrawTransformFeedbackInstanced",call_name)==0){
  (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) func = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackInstanced");
  continue;
}

if(strcmp("glDrawTransformFeedbackStreamInstanced",call_name)==0){
  (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) func = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackStreamInstanced");
  continue;
}

if(strcmp("glGetInternalformativ",call_name)==0){
  (PFNGLGETINTERNALFORMATIVPROC) func = (PFNGLGETINTERNALFORMATIVPROC)glXGetProcAddress((const GLubyte*)"glGetInternalformativ");
  continue;
}

if(strcmp("glGetActiveAtomicCounterBufferiv",call_name)==0){
  (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) func = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveAtomicCounterBufferiv");
  continue;
}

if(strcmp("glBindImageTexture",call_name)==0){
  (PFNGLBINDIMAGETEXTUREPROC) func = (PFNGLBINDIMAGETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glBindImageTexture");
  continue;
}

if(strcmp("glMemoryBarrier",call_name)==0){
  (PFNGLMEMORYBARRIERPROC) func = (PFNGLMEMORYBARRIERPROC)glXGetProcAddress((const GLubyte*)"glMemoryBarrier");
  continue;
}

if(strcmp("glTexStorage1D",call_name)==0){
  (PFNGLTEXSTORAGE1DPROC) func = (PFNGLTEXSTORAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage1D");
  continue;
}

if(strcmp("glTexStorage2D",call_name)==0){
  (PFNGLTEXSTORAGE2DPROC) func = (PFNGLTEXSTORAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage2D");
  continue;
}

if(strcmp("glTexStorage3D",call_name)==0){
  (PFNGLTEXSTORAGE3DPROC) func = (PFNGLTEXSTORAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage3D");
  continue;
}

if(strcmp("glTextureStorage1DEXT",call_name)==0){
  (PFNGLTEXTURESTORAGE1DEXTPROC) func = (PFNGLTEXTURESTORAGE1DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage1DEXT");
  continue;
}

if(strcmp("glTextureStorage2DEXT",call_name)==0){
  (PFNGLTEXTURESTORAGE2DEXTPROC) func = (PFNGLTEXTURESTORAGE2DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2DEXT");
  continue;
}

if(strcmp("glTextureStorage3DEXT",call_name)==0){
  (PFNGLTEXTURESTORAGE3DEXTPROC) func = (PFNGLTEXTURESTORAGE3DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3DEXT");
  continue;
}

if(strcmp("glClearBufferData",call_name)==0){
  (PFNGLCLEARBUFFERDATAPROC) func = (PFNGLCLEARBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glClearBufferData");
  continue;
}

if(strcmp("glClearBufferSubData",call_name)==0){
  (PFNGLCLEARBUFFERSUBDATAPROC) func = (PFNGLCLEARBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glClearBufferSubData");
  continue;
}

if(strcmp("glDispatchCompute",call_name)==0){
  (PFNGLDISPATCHCOMPUTEPROC) func = (PFNGLDISPATCHCOMPUTEPROC)glXGetProcAddress((const GLubyte*)"glDispatchCompute");
  continue;
}

if(strcmp("glDispatchComputeIndirect",call_name)==0){
  (PFNGLDISPATCHCOMPUTEINDIRECTPROC) func = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDispatchComputeIndirect");
  continue;
}

if(strcmp("glCopyImageSubData",call_name)==0){
  (PFNGLCOPYIMAGESUBDATAPROC) func = (PFNGLCOPYIMAGESUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyImageSubData");
  continue;
}

if(strcmp("glTextureView",call_name)==0){
  (PFNGLTEXTUREVIEWPROC) func = (PFNGLTEXTUREVIEWPROC)glXGetProcAddress((const GLubyte*)"glTextureView");
  continue;
}

if(strcmp("glBindVertexBuffer",call_name)==0){
  (PFNGLBINDVERTEXBUFFERPROC) func = (PFNGLBINDVERTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindVertexBuffer");
  continue;
}

if(strcmp("glVertexAttribBinding",call_name)==0){
  (PFNGLVERTEXATTRIBBINDINGPROC) func = (PFNGLVERTEXATTRIBBINDINGPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribBinding");
  continue;
}

if(strcmp("glVertexAttribFormat",call_name)==0){
  (PFNGLVERTEXATTRIBFORMATPROC) func = (PFNGLVERTEXATTRIBFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribFormat");
  continue;
}

if(strcmp("glVertexAttribIFormat",call_name)==0){
  (PFNGLVERTEXATTRIBIFORMATPROC) func = (PFNGLVERTEXATTRIBIFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribIFormat");
  continue;
}

if(strcmp("glVertexAttribLFormat",call_name)==0){
  (PFNGLVERTEXATTRIBLFORMATPROC) func = (PFNGLVERTEXATTRIBLFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribLFormat");
  continue;
}

if(strcmp("glVertexBindingDivisor",call_name)==0){
  (PFNGLVERTEXBINDINGDIVISORPROC) func = (PFNGLVERTEXBINDINGDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexBindingDivisor");
  continue;
}

if(strcmp("glFramebufferParameteri",call_name)==0){
  (PFNGLFRAMEBUFFERPARAMETERIPROC) func = (PFNGLFRAMEBUFFERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glFramebufferParameteri");
  continue;
}

if(strcmp("glGetFramebufferParameteriv",call_name)==0){
  (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) func = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetFramebufferParameteriv");
  continue;
}

if(strcmp("glGetInternalformati64v",call_name)==0){
  (PFNGLGETINTERNALFORMATI64VPROC) func = (PFNGLGETINTERNALFORMATI64VPROC)glXGetProcAddress((const GLubyte*)"glGetInternalformati64v");
  continue;
}

if(strcmp("glMultiDrawArraysIndirect",call_name)==0){
  (PFNGLMULTIDRAWARRAYSINDIRECTPROC) func = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArraysIndirect");
  continue;
}

if(strcmp("glMultiDrawElementsIndirect",call_name)==0){
  (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) func = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsIndirect");
  continue;
}

if(strcmp("glGetProgramInterfaceiv",call_name)==0){
  (PFNGLGETPROGRAMINTERFACEIVPROC) func = (PFNGLGETPROGRAMINTERFACEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramInterfaceiv");
  continue;
}

if(strcmp("glGetProgramResourceIndex",call_name)==0){
  (PFNGLGETPROGRAMRESOURCEINDEXPROC) func = (PFNGLGETPROGRAMRESOURCEINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceIndex");
  continue;
}

if(strcmp("glGetProgramResourceLocation",call_name)==0){
  (PFNGLGETPROGRAMRESOURCELOCATIONPROC) func = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceLocation");
  continue;
}

if(strcmp("glGetProgramResourceLocationIndex",call_name)==0){
  (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) func = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceLocationIndex");
  continue;
}

if(strcmp("glGetProgramResourceName",call_name)==0){
  (PFNGLGETPROGRAMRESOURCENAMEPROC) func = (PFNGLGETPROGRAMRESOURCENAMEPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceName");
  continue;
}

if(strcmp("glGetProgramResourceiv",call_name)==0){
  (PFNGLGETPROGRAMRESOURCEIVPROC) func = (PFNGLGETPROGRAMRESOURCEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceiv");
  continue;
}

if(strcmp("glShaderStorageBlockBinding",call_name)==0){
  (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) func = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)glXGetProcAddress((const GLubyte*)"glShaderStorageBlockBinding");
  continue;
}

if(strcmp("glTexBufferRange",call_name)==0){
  (PFNGLTEXBUFFERRANGEPROC) func = (PFNGLTEXBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTexBufferRange");
  continue;
}

if(strcmp("glTexStorage2DMultisample",call_name)==0){
  (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) func = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexStorage2DMultisample");
  continue;
}

if(strcmp("glTexStorage3DMultisample",call_name)==0){
  (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) func = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexStorage3DMultisample");
  continue;
}

if(strcmp("glBufferStorage",call_name)==0){
  (PFNGLBUFFERSTORAGEPROC) func = (PFNGLBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glBufferStorage");
  continue;
}

if(strcmp("glClearTexImage",call_name)==0){
  (PFNGLCLEARTEXIMAGEPROC) func = (PFNGLCLEARTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glClearTexImage");
  continue;
}

if(strcmp("glClearTexSubImage",call_name)==0){
  (PFNGLCLEARTEXSUBIMAGEPROC) func = (PFNGLCLEARTEXSUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glClearTexSubImage");
  continue;
}

if(strcmp("glBindBuffersBase",call_name)==0){
  (PFNGLBINDBUFFERSBASEPROC) func = (PFNGLBINDBUFFERSBASEPROC)glXGetProcAddress((const GLubyte*)"glBindBuffersBase");
  continue;
}

if(strcmp("glBindBuffersRange",call_name)==0){
  (PFNGLBINDBUFFERSRANGEPROC) func = (PFNGLBINDBUFFERSRANGEPROC)glXGetProcAddress((const GLubyte*)"glBindBuffersRange");
  continue;
}

if(strcmp("glBindImageTextures",call_name)==0){
  (PFNGLBINDIMAGETEXTURESPROC) func = (PFNGLBINDIMAGETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glBindImageTextures");
  continue;
}

if(strcmp("glBindSamplers",call_name)==0){
  (PFNGLBINDSAMPLERSPROC) func = (PFNGLBINDSAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glBindSamplers");
  continue;
}

if(strcmp("glBindTextures",call_name)==0){
  (PFNGLBINDTEXTURESPROC) func = (PFNGLBINDTEXTURESPROC)glXGetProcAddress((const GLubyte*)"glBindTextures");
  continue;
}

if(strcmp("glBindVertexBuffers",call_name)==0){
  (PFNGLBINDVERTEXBUFFERSPROC) func = (PFNGLBINDVERTEXBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glBindVertexBuffers");
  continue;
}

if(strcmp("glDispatchComputeGroupSizeARB",call_name)==0){
  (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) func = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)glXGetProcAddress((const GLubyte*)"glDispatchComputeGroupSizeARB");
  continue;
}

if(strcmp("glMultiDrawArraysIndirectCountARB",call_name)==0){
  (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) func = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArraysIndirectCountARB");
  continue;
}

if(strcmp("glMultiDrawElementsIndirectCountARB",call_name)==0){
  (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) func = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsIndirectCountARB");
  continue;
}

if(strcmp("glClipControl",call_name)==0){
  (PFNGLCLIPCONTROLPROC) func = (PFNGLCLIPCONTROLPROC)glXGetProcAddress((const GLubyte*)"glClipControl");
  continue;
}

if(strcmp("glBindTextureUnit",call_name)==0){
  (PFNGLBINDTEXTUREUNITPROC) func = (PFNGLBINDTEXTUREUNITPROC)glXGetProcAddress((const GLubyte*)"glBindTextureUnit");
  continue;
}

if(strcmp("glBlitNamedFramebuffer",call_name)==0){
  (PFNGLBLITNAMEDFRAMEBUFFERPROC) func = (PFNGLBLITNAMEDFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBlitNamedFramebuffer");
  continue;
}

if(strcmp("glCheckNamedFramebufferStatus",call_name)==0){
  (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) func = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)glXGetProcAddress((const GLubyte*)"glCheckNamedFramebufferStatus");
  continue;
}

if(strcmp("glClearNamedBufferData",call_name)==0){
  (PFNGLCLEARNAMEDBUFFERDATAPROC) func = (PFNGLCLEARNAMEDBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glClearNamedBufferData");
  continue;
}

if(strcmp("glClearNamedBufferSubData",call_name)==0){
  (PFNGLCLEARNAMEDBUFFERSUBDATAPROC) func = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glClearNamedBufferSubData");
  continue;
}

if(strcmp("glClearNamedFramebufferfi",call_name)==0){
  (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) func = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferfi");
  continue;
}

if(strcmp("glClearNamedFramebufferfv",call_name)==0){
  (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) func = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferfv");
  continue;
}

if(strcmp("glClearNamedFramebufferiv",call_name)==0){
  (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) func = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferiv");
  continue;
}

if(strcmp("glClearNamedFramebufferuiv",call_name)==0){
  (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) func = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferuiv");
  continue;
}

if(strcmp("glCompressedTextureSubImage1D",call_name)==0){
  (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) func = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage1D");
  continue;
}

if(strcmp("glCompressedTextureSubImage2D",call_name)==0){
  (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) func = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage2D");
  continue;
}

if(strcmp("glCompressedTextureSubImage3D",call_name)==0){
  (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) func = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage3D");
  continue;
}

if(strcmp("glCopyNamedBufferSubData",call_name)==0){
  (PFNGLCOPYNAMEDBUFFERSUBDATAPROC) func = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyNamedBufferSubData");
  continue;
}

if(strcmp("glCopyTextureSubImage1D",call_name)==0){
  (PFNGLCOPYTEXTURESUBIMAGE1DPROC) func = (PFNGLCOPYTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage1D");
  continue;
}

if(strcmp("glCopyTextureSubImage2D",call_name)==0){
  (PFNGLCOPYTEXTURESUBIMAGE2DPROC) func = (PFNGLCOPYTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage2D");
  continue;
}

if(strcmp("glCopyTextureSubImage3D",call_name)==0){
  (PFNGLCOPYTEXTURESUBIMAGE3DPROC) func = (PFNGLCOPYTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage3D");
  continue;
}

if(strcmp("glCreateBuffers",call_name)==0){
  (PFNGLCREATEBUFFERSPROC) func = (PFNGLCREATEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateBuffers");
  continue;
}

if(strcmp("glCreateFramebuffers",call_name)==0){
  (PFNGLCREATEFRAMEBUFFERSPROC) func = (PFNGLCREATEFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateFramebuffers");
  continue;
}

if(strcmp("glCreateProgramPipelines",call_name)==0){
  (PFNGLCREATEPROGRAMPIPELINESPROC) func = (PFNGLCREATEPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glCreateProgramPipelines");
  continue;
}

if(strcmp("glCreateQueries",call_name)==0){
  (PFNGLCREATEQUERIESPROC) func = (PFNGLCREATEQUERIESPROC)glXGetProcAddress((const GLubyte*)"glCreateQueries");
  continue;
}

if(strcmp("glCreateRenderbuffers",call_name)==0){
  (PFNGLCREATERENDERBUFFERSPROC) func = (PFNGLCREATERENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateRenderbuffers");
  continue;
}

if(strcmp("glCreateSamplers",call_name)==0){
  (PFNGLCREATESAMPLERSPROC) func = (PFNGLCREATESAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glCreateSamplers");
  continue;
}

if(strcmp("glCreateTextures",call_name)==0){
  (PFNGLCREATETEXTURESPROC) func = (PFNGLCREATETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glCreateTextures");
  continue;
}

if(strcmp("glCreateTransformFeedbacks",call_name)==0){
  (PFNGLCREATETRANSFORMFEEDBACKSPROC) func = (PFNGLCREATETRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glCreateTransformFeedbacks");
  continue;
}

if(strcmp("glCreateVertexArrays",call_name)==0){
  (PFNGLCREATEVERTEXARRAYSPROC) func = (PFNGLCREATEVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glCreateVertexArrays");
  continue;
}

if(strcmp("glDisableVertexArrayAttrib",call_name)==0){
  (PFNGLDISABLEVERTEXARRAYATTRIBPROC) func = (PFNGLDISABLEVERTEXARRAYATTRIBPROC)glXGetProcAddress((const GLubyte*)"glDisableVertexArrayAttrib");
  continue;
}

if(strcmp("glEnableVertexArrayAttrib",call_name)==0){
  (PFNGLENABLEVERTEXARRAYATTRIBPROC) func = (PFNGLENABLEVERTEXARRAYATTRIBPROC)glXGetProcAddress((const GLubyte*)"glEnableVertexArrayAttrib");
  continue;
}

if(strcmp("glFlushMappedNamedBufferRange",call_name)==0){
  (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) func = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedNamedBufferRange");
  continue;
}

if(strcmp("glGenerateTextureMipmap",call_name)==0){
  (PFNGLGENERATETEXTUREMIPMAPPROC) func = (PFNGLGENERATETEXTUREMIPMAPPROC)glXGetProcAddress((const GLubyte*)"glGenerateTextureMipmap");
  continue;
}

if(strcmp("glGetCompressedTextureImage",call_name)==0){
  (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) func = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTextureImage");
  continue;
}

if(strcmp("glGetNamedBufferParameteri64v",call_name)==0){
  (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) func = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferParameteri64v");
  continue;
}

if(strcmp("glGetNamedBufferParameteriv",call_name)==0){
  (PFNGLGETNAMEDBUFFERPARAMETERIVPROC) func = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferParameteriv");
  continue;
}

if(strcmp("glGetNamedBufferPointerv",call_name)==0){
  (PFNGLGETNAMEDBUFFERPOINTERVPROC) func = (PFNGLGETNAMEDBUFFERPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferPointerv");
  continue;
}

if(strcmp("glGetNamedBufferSubData",call_name)==0){
  (PFNGLGETNAMEDBUFFERSUBDATAPROC) func = (PFNGLGETNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferSubData");
  continue;
}

if(strcmp("glGetNamedFramebufferAttachmentParameteriv",call_name)==0){
  (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) func = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedFramebufferAttachmentParameteriv");
  continue;
}

if(strcmp("glGetNamedFramebufferParameteriv",call_name)==0){
  (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) func = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedFramebufferParameteriv");
  continue;
}

if(strcmp("glGetNamedRenderbufferParameteriv",call_name)==0){
  (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) func = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedRenderbufferParameteriv");
  continue;
}

if(strcmp("glGetQueryBufferObjecti64v",call_name)==0){
  (PFNGLGETQUERYBUFFEROBJECTI64VPROC) func = (PFNGLGETQUERYBUFFEROBJECTI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjecti64v");
  continue;
}

if(strcmp("glGetQueryBufferObjectiv",call_name)==0){
  (PFNGLGETQUERYBUFFEROBJECTIVPROC) func = (PFNGLGETQUERYBUFFEROBJECTIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectiv");
  continue;
}

if(strcmp("glGetQueryBufferObjectui64v",call_name)==0){
  (PFNGLGETQUERYBUFFEROBJECTUI64VPROC) func = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectui64v");
  continue;
}

if(strcmp("glGetQueryBufferObjectuiv",call_name)==0){
  (PFNGLGETQUERYBUFFEROBJECTUIVPROC) func = (PFNGLGETQUERYBUFFEROBJECTUIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectuiv");
  continue;
}

if(strcmp("glGetTextureImage",call_name)==0){
  (PFNGLGETTEXTUREIMAGEPROC) func = (PFNGLGETTEXTUREIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTextureImage");
  continue;
}

if(strcmp("glGetTextureLevelParameterfv",call_name)==0){
  (PFNGLGETTEXTURELEVELPARAMETERFVPROC) func = (PFNGLGETTEXTURELEVELPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureLevelParameterfv");
  continue;
}

if(strcmp("glGetTextureLevelParameteriv",call_name)==0){
  (PFNGLGETTEXTURELEVELPARAMETERIVPROC) func = (PFNGLGETTEXTURELEVELPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureLevelParameteriv");
  continue;
}

if(strcmp("glGetTextureParameterIiv",call_name)==0){
  (PFNGLGETTEXTUREPARAMETERIIVPROC) func = (PFNGLGETTEXTUREPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterIiv");
  continue;
}

if(strcmp("glGetTextureParameterIuiv",call_name)==0){
  (PFNGLGETTEXTUREPARAMETERIUIVPROC) func = (PFNGLGETTEXTUREPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterIuiv");
  continue;
}

if(strcmp("glGetTextureParameterfv",call_name)==0){
  (PFNGLGETTEXTUREPARAMETERFVPROC) func = (PFNGLGETTEXTUREPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterfv");
  continue;
}

if(strcmp("glGetTextureParameteriv",call_name)==0){
  (PFNGLGETTEXTUREPARAMETERIVPROC) func = (PFNGLGETTEXTUREPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameteriv");
  continue;
}

if(strcmp("glGetTransformFeedbacki64_v",call_name)==0){
  (PFNGLGETTRANSFORMFEEDBACKI64_VPROC) func = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbacki64_v");
  continue;
}

if(strcmp("glGetTransformFeedbacki_v",call_name)==0){
  (PFNGLGETTRANSFORMFEEDBACKI_VPROC) func = (PFNGLGETTRANSFORMFEEDBACKI_VPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbacki_v");
  continue;
}

if(strcmp("glGetTransformFeedbackiv",call_name)==0){
  (PFNGLGETTRANSFORMFEEDBACKIVPROC) func = (PFNGLGETTRANSFORMFEEDBACKIVPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbackiv");
  continue;
}

if(strcmp("glGetVertexArrayIndexed64iv",call_name)==0){
  (PFNGLGETVERTEXARRAYINDEXED64IVPROC) func = (PFNGLGETVERTEXARRAYINDEXED64IVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayIndexed64iv");
  continue;
}

if(strcmp("glGetVertexArrayIndexediv",call_name)==0){
  (PFNGLGETVERTEXARRAYINDEXEDIVPROC) func = (PFNGLGETVERTEXARRAYINDEXEDIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayIndexediv");
  continue;
}

if(strcmp("glGetVertexArrayiv",call_name)==0){
  (PFNGLGETVERTEXARRAYIVPROC) func = (PFNGLGETVERTEXARRAYIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayiv");
  continue;
}

if(strcmp("glInvalidateNamedFramebufferData",call_name)==0){
  (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) func = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateNamedFramebufferData");
  continue;
}

if(strcmp("glInvalidateNamedFramebufferSubData",call_name)==0){
  (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) func = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateNamedFramebufferSubData");
  continue;
}

if(strcmp("glMapNamedBuffer",call_name)==0){
  (PFNGLMAPNAMEDBUFFERPROC) func = (PFNGLMAPNAMEDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glMapNamedBuffer");
  continue;
}

if(strcmp("glMapNamedBufferRange",call_name)==0){
  (PFNGLMAPNAMEDBUFFERRANGEPROC) func = (PFNGLMAPNAMEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glMapNamedBufferRange");
  continue;
}

if(strcmp("glNamedBufferData",call_name)==0){
  (PFNGLNAMEDBUFFERDATAPROC) func = (PFNGLNAMEDBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferData");
  continue;
}

if(strcmp("glNamedBufferStorage",call_name)==0){
  (PFNGLNAMEDBUFFERSTORAGEPROC) func = (PFNGLNAMEDBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferStorage");
  continue;
}

if(strcmp("glNamedBufferSubData",call_name)==0){
  (PFNGLNAMEDBUFFERSUBDATAPROC) func = (PFNGLNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferSubData");
  continue;
}

if(strcmp("glNamedFramebufferDrawBuffer",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) func = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferDrawBuffer");
  continue;
}

if(strcmp("glNamedFramebufferDrawBuffers",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) func = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferDrawBuffers");
  continue;
}

if(strcmp("glNamedFramebufferParameteri",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) func = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferParameteri");
  continue;
}

if(strcmp("glNamedFramebufferReadBuffer",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) func = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferReadBuffer");
  continue;
}

if(strcmp("glNamedFramebufferRenderbuffer",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) func = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferRenderbuffer");
  continue;
}

if(strcmp("glNamedFramebufferTexture",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) func = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferTexture");
  continue;
}

if(strcmp("glNamedFramebufferTextureLayer",call_name)==0){
  (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) func = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferTextureLayer");
  continue;
}

if(strcmp("glNamedRenderbufferStorage",call_name)==0){
  (PFNGLNAMEDRENDERBUFFERSTORAGEPROC) func = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glNamedRenderbufferStorage");
  continue;
}

if(strcmp("glNamedRenderbufferStorageMultisample",call_name)==0){
  (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) func = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glNamedRenderbufferStorageMultisample");
  continue;
}

if(strcmp("glTextureBuffer",call_name)==0){
  (PFNGLTEXTUREBUFFERPROC) func = (PFNGLTEXTUREBUFFERPROC)glXGetProcAddress((const GLubyte*)"glTextureBuffer");
  continue;
}

if(strcmp("glTextureBufferRange",call_name)==0){
  (PFNGLTEXTUREBUFFERRANGEPROC) func = (PFNGLTEXTUREBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTextureBufferRange");
  continue;
}

if(strcmp("glTextureParameterIiv",call_name)==0){
  (PFNGLTEXTUREPARAMETERIIVPROC) func = (PFNGLTEXTUREPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterIiv");
  continue;
}

if(strcmp("glTextureParameterIuiv",call_name)==0){
  (PFNGLTEXTUREPARAMETERIUIVPROC) func = (PFNGLTEXTUREPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterIuiv");
  continue;
}

if(strcmp("glTextureParameterf",call_name)==0){
  (PFNGLTEXTUREPARAMETERFPROC) func = (PFNGLTEXTUREPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterf");
  continue;
}

if(strcmp("glTextureParameterfv",call_name)==0){
  (PFNGLTEXTUREPARAMETERFVPROC) func = (PFNGLTEXTUREPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterfv");
  continue;
}

if(strcmp("glTextureParameteri",call_name)==0){
  (PFNGLTEXTUREPARAMETERIPROC) func = (PFNGLTEXTUREPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glTextureParameteri");
  continue;
}

if(strcmp("glTextureParameteriv",call_name)==0){
  (PFNGLTEXTUREPARAMETERIVPROC) func = (PFNGLTEXTUREPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameteriv");
  continue;
}

if(strcmp("glTextureStorage1D",call_name)==0){
  (PFNGLTEXTURESTORAGE1DPROC) func = (PFNGLTEXTURESTORAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage1D");
  continue;
}

if(strcmp("glTextureStorage2D",call_name)==0){
  (PFNGLTEXTURESTORAGE2DPROC) func = (PFNGLTEXTURESTORAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2D");
  continue;
}

if(strcmp("glTextureStorage2DMultisample",call_name)==0){
  (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) func = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2DMultisample");
  continue;
}

if(strcmp("glTextureStorage3D",call_name)==0){
  (PFNGLTEXTURESTORAGE3DPROC) func = (PFNGLTEXTURESTORAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3D");
  continue;
}

if(strcmp("glTextureStorage3DMultisample",call_name)==0){
  (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) func = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3DMultisample");
  continue;
}

if(strcmp("glTextureSubImage1D",call_name)==0){
  (PFNGLTEXTURESUBIMAGE1DPROC) func = (PFNGLTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage1D");
  continue;
}

if(strcmp("glTextureSubImage2D",call_name)==0){
  (PFNGLTEXTURESUBIMAGE2DPROC) func = (PFNGLTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage2D");
  continue;
}

if(strcmp("glTextureSubImage3D",call_name)==0){
  (PFNGLTEXTURESUBIMAGE3DPROC) func = (PFNGLTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage3D");
  continue;
}

if(strcmp("glTransformFeedbackBufferBase",call_name)==0){
  (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) func = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackBufferBase");
  continue;
}

if(strcmp("glTransformFeedbackBufferRange",call_name)==0){
  (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) func = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackBufferRange");
  continue;
}

if(strcmp("glUnmapNamedBuffer",call_name)==0){
  (PFNGLUNMAPNAMEDBUFFERPROC) func = (PFNGLUNMAPNAMEDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glUnmapNamedBuffer");
  continue;
}

if(strcmp("glVertexArrayAttribBinding",call_name)==0){
  (PFNGLVERTEXARRAYATTRIBBINDINGPROC) func = (PFNGLVERTEXARRAYATTRIBBINDINGPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribBinding");
  continue;
}

if(strcmp("glVertexArrayAttribFormat",call_name)==0){
  (PFNGLVERTEXARRAYATTRIBFORMATPROC) func = (PFNGLVERTEXARRAYATTRIBFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribFormat");
  continue;
}

if(strcmp("glVertexArrayAttribIFormat",call_name)==0){
  (PFNGLVERTEXARRAYATTRIBIFORMATPROC) func = (PFNGLVERTEXARRAYATTRIBIFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribIFormat");
  continue;
}

if(strcmp("glVertexArrayAttribLFormat",call_name)==0){
  (PFNGLVERTEXARRAYATTRIBLFORMATPROC) func = (PFNGLVERTEXARRAYATTRIBLFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribLFormat");
  continue;
}

if(strcmp("glVertexArrayBindingDivisor",call_name)==0){
  (PFNGLVERTEXARRAYBINDINGDIVISORPROC) func = (PFNGLVERTEXARRAYBINDINGDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayBindingDivisor");
  continue;
}

if(strcmp("glVertexArrayElementBuffer",call_name)==0){
  (PFNGLVERTEXARRAYELEMENTBUFFERPROC) func = (PFNGLVERTEXARRAYELEMENTBUFFERPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayElementBuffer");
  continue;
}

if(strcmp("glVertexArrayVertexBuffer",call_name)==0){
  (PFNGLVERTEXARRAYVERTEXBUFFERPROC) func = (PFNGLVERTEXARRAYVERTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayVertexBuffer");
  continue;
}

if(strcmp("glVertexArrayVertexBuffers",call_name)==0){
  (PFNGLVERTEXARRAYVERTEXBUFFERSPROC) func = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayVertexBuffers");
  continue;
}

if(strcmp("glGetCompressedTextureSubImage",call_name)==0){
  (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) func = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTextureSubImage");
  continue;
}

if(strcmp("glGetTextureSubImage",call_name)==0){
  (PFNGLGETTEXTURESUBIMAGEPROC) func = (PFNGLGETTEXTURESUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTextureSubImage");
  continue;
}

if(strcmp("glInvalidateBufferData",call_name)==0){
  (PFNGLINVALIDATEBUFFERDATAPROC) func = (PFNGLINVALIDATEBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateBufferData");
  continue;
}

if(strcmp("glInvalidateBufferSubData",call_name)==0){
  (PFNGLINVALIDATEBUFFERSUBDATAPROC) func = (PFNGLINVALIDATEBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateBufferSubData");
  continue;
}

if(strcmp("glInvalidateFramebuffer",call_name)==0){
  (PFNGLINVALIDATEFRAMEBUFFERPROC) func = (PFNGLINVALIDATEFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glInvalidateFramebuffer");
  continue;
}

if(strcmp("glInvalidateSubFramebuffer",call_name)==0){
  (PFNGLINVALIDATESUBFRAMEBUFFERPROC) func = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glInvalidateSubFramebuffer");
  continue;
}

if(strcmp("glInvalidateTexImage",call_name)==0){
  (PFNGLINVALIDATETEXIMAGEPROC) func = (PFNGLINVALIDATETEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glInvalidateTexImage");
  continue;
}

if(strcmp("glInvalidateTexSubImage",call_name)==0){
  (PFNGLINVALIDATETEXSUBIMAGEPROC) func = (PFNGLINVALIDATETEXSUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glInvalidateTexSubImage");
  continue;
}

if(strcmp("glPolygonOffsetEXT",call_name)==0){
  (PFNGLPOLYGONOFFSETEXTPROC) func = (PFNGLPOLYGONOFFSETEXTPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetEXT");
  continue;
}

if(strcmp("glDrawTexfOES",call_name)==0){
  (PFNGLDRAWTEXFOESPROC) func = (PFNGLDRAWTEXFOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexfOES");
  continue;
}

if(strcmp("glDrawTexfvOES",call_name)==0){
  (PFNGLDRAWTEXFVOESPROC) func = (PFNGLDRAWTEXFVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexfvOES");
  continue;
}

if(strcmp("glDrawTexiOES",call_name)==0){
  (PFNGLDRAWTEXIOESPROC) func = (PFNGLDRAWTEXIOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexiOES");
  continue;
}

if(strcmp("glDrawTexivOES",call_name)==0){
  (PFNGLDRAWTEXIVOESPROC) func = (PFNGLDRAWTEXIVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexivOES");
  continue;
}

if(strcmp("glDrawTexsOES",call_name)==0){
  (PFNGLDRAWTEXSOESPROC) func = (PFNGLDRAWTEXSOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexsOES");
  continue;
}

if(strcmp("glDrawTexsvOES",call_name)==0){
  (PFNGLDRAWTEXSVOESPROC) func = (PFNGLDRAWTEXSVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexsvOES");
  continue;
}

if(strcmp("glDrawTexxOES",call_name)==0){
  (PFNGLDRAWTEXXOESPROC) func = (PFNGLDRAWTEXXOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexxOES");
  continue;
}

if(strcmp("glDrawTexxvOES",call_name)==0){
  (PFNGLDRAWTEXXVOESPROC) func = (PFNGLDRAWTEXXVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexxvOES");
  continue;
}

if(strcmp("glPointSizePointerOES",call_name)==0){
  (PFNGLPOINTSIZEPOINTEROESPROC) func = (PFNGLPOINTSIZEPOINTEROESPROC)glXGetProcAddress((const GLubyte*)"glPointSizePointerOES");
  continue;
}

if(strcmp("glQueryMatrixxOES",call_name)==0){
  (PFNGLQUERYMATRIXXOESPROC) func = (PFNGLQUERYMATRIXXOESPROC)glXGetProcAddress((const GLubyte*)"glQueryMatrixxOES");
  continue;
}

if(strcmp("glSampleMaskSGIS",call_name)==0){
  (PFNGLSAMPLEMASKSGISPROC) func = (PFNGLSAMPLEMASKSGISPROC)glXGetProcAddress((const GLubyte*)"glSampleMaskSGIS");
  continue;
}

if(strcmp("glSamplePatternSGIS",call_name)==0){
  (PFNGLSAMPLEPATTERNSGISPROC) func = (PFNGLSAMPLEPATTERNSGISPROC)glXGetProcAddress((const GLubyte*)"glSamplePatternSGIS");
  continue;
}

if(strcmp("glColorPointerEXT",call_name)==0){
  (PFNGLCOLORPOINTEREXTPROC) func = (PFNGLCOLORPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glColorPointerEXT");
  continue;
}

if(strcmp("glEdgeFlagPointerEXT",call_name)==0){
  (PFNGLEDGEFLAGPOINTEREXTPROC) func = (PFNGLEDGEFLAGPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagPointerEXT");
  continue;
}

if(strcmp("glIndexPointerEXT",call_name)==0){
  (PFNGLINDEXPOINTEREXTPROC) func = (PFNGLINDEXPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glIndexPointerEXT");
  continue;
}

if(strcmp("glNormalPointerEXT",call_name)==0){
  (PFNGLNORMALPOINTEREXTPROC) func = (PFNGLNORMALPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glNormalPointerEXT");
  continue;
}

if(strcmp("glTexCoordPointerEXT",call_name)==0){
  (PFNGLTEXCOORDPOINTEREXTPROC) func = (PFNGLTEXCOORDPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glTexCoordPointerEXT");
  continue;
}

if(strcmp("glVertexPointerEXT",call_name)==0){
  (PFNGLVERTEXPOINTEREXTPROC) func = (PFNGLVERTEXPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glVertexPointerEXT");
  continue;
}

if(strcmp("glDiscardFramebufferEXT",call_name)==0){
  (PFNGLDISCARDFRAMEBUFFEREXTPROC) func = (PFNGLDISCARDFRAMEBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glDiscardFramebufferEXT");
  continue;
}

if(strcmp("glActiveShaderProgram",call_name)==0){
  (PFNGLACTIVESHADERPROGRAMPROC) func = (PFNGLACTIVESHADERPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glActiveShaderProgram");
  continue;
}

if(strcmp("glBindProgramPipeline",call_name)==0){
  (PFNGLBINDPROGRAMPIPELINEPROC) func = (PFNGLBINDPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glBindProgramPipeline");
  continue;
}

if(strcmp("glCreateShaderProgramv",call_name)==0){
  (PFNGLCREATESHADERPROGRAMVPROC) func = (PFNGLCREATESHADERPROGRAMVPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderProgramv");
  continue;
}

if(strcmp("glDeleteProgramPipelines",call_name)==0){
  (PFNGLDELETEPROGRAMPIPELINESPROC) func = (PFNGLDELETEPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgramPipelines");
  continue;
}

if(strcmp("glGenProgramPipelines",call_name)==0){
  (PFNGLGENPROGRAMPIPELINESPROC) func = (PFNGLGENPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glGenProgramPipelines");
  continue;
}

if(strcmp("glGetProgramPipelineInfoLog",call_name)==0){
  (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) func = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetProgramPipelineInfoLog");
  continue;
}

if(strcmp("glGetProgramPipelineiv",call_name)==0){
  (PFNGLGETPROGRAMPIPELINEIVPROC) func = (PFNGLGETPROGRAMPIPELINEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramPipelineiv");
  continue;
}

if(strcmp("glIsProgramPipeline",call_name)==0){
  (PFNGLISPROGRAMPIPELINEPROC) func = (PFNGLISPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glIsProgramPipeline");
  continue;
}

if(strcmp("glLockArraysEXT",call_name)==0){
  (PFNGLLOCKARRAYSEXTPROC) func = (PFNGLLOCKARRAYSEXTPROC)glXGetProcAddress((const GLubyte*)"glLockArraysEXT");
  continue;
}

if(strcmp("glProgramUniform1d",call_name)==0){
  (PFNGLPROGRAMUNIFORM1DPROC) func = (PFNGLPROGRAMUNIFORM1DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1d");
  continue;
}

if(strcmp("glProgramUniform1dv",call_name)==0){
  (PFNGLPROGRAMUNIFORM1DVPROC) func = (PFNGLPROGRAMUNIFORM1DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1dv");
  continue;
}

if(strcmp("glProgramUniform1f",call_name)==0){
  (PFNGLPROGRAMUNIFORM1FPROC) func = (PFNGLPROGRAMUNIFORM1FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1f");
  continue;
}

if(strcmp("glProgramUniform1fv",call_name)==0){
  (PFNGLPROGRAMUNIFORM1FVPROC) func = (PFNGLPROGRAMUNIFORM1FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1fv");
  continue;
}

if(strcmp("glProgramUniform1i",call_name)==0){
  (PFNGLPROGRAMUNIFORM1IPROC) func = (PFNGLPROGRAMUNIFORM1IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1i");
  continue;
}

if(strcmp("glProgramUniform1iv",call_name)==0){
  (PFNGLPROGRAMUNIFORM1IVPROC) func = (PFNGLPROGRAMUNIFORM1IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1iv");
  continue;
}

if(strcmp("glProgramUniform1ui",call_name)==0){
  (PFNGLPROGRAMUNIFORM1UIPROC) func = (PFNGLPROGRAMUNIFORM1UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1ui");
  continue;
}

if(strcmp("glProgramUniform1uiv",call_name)==0){
  (PFNGLPROGRAMUNIFORM1UIVPROC) func = (PFNGLPROGRAMUNIFORM1UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1uiv");
  continue;
}

if(strcmp("glProgramUniform2d",call_name)==0){
  (PFNGLPROGRAMUNIFORM2DPROC) func = (PFNGLPROGRAMUNIFORM2DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2d");
  continue;
}

if(strcmp("glProgramUniform2dv",call_name)==0){
  (PFNGLPROGRAMUNIFORM2DVPROC) func = (PFNGLPROGRAMUNIFORM2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2dv");
  continue;
}

if(strcmp("glProgramUniform2f",call_name)==0){
  (PFNGLPROGRAMUNIFORM2FPROC) func = (PFNGLPROGRAMUNIFORM2FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2f");
  continue;
}

if(strcmp("glProgramUniform2fv",call_name)==0){
  (PFNGLPROGRAMUNIFORM2FVPROC) func = (PFNGLPROGRAMUNIFORM2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2fv");
  continue;
}

if(strcmp("glProgramUniform2i",call_name)==0){
  (PFNGLPROGRAMUNIFORM2IPROC) func = (PFNGLPROGRAMUNIFORM2IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2i");
  continue;
}

if(strcmp("glProgramUniform2iv",call_name)==0){
  (PFNGLPROGRAMUNIFORM2IVPROC) func = (PFNGLPROGRAMUNIFORM2IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2iv");
  continue;
}

if(strcmp("glProgramUniform2ui",call_name)==0){
  (PFNGLPROGRAMUNIFORM2UIPROC) func = (PFNGLPROGRAMUNIFORM2UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2ui");
  continue;
}

if(strcmp("glProgramUniform2uiv",call_name)==0){
  (PFNGLPROGRAMUNIFORM2UIVPROC) func = (PFNGLPROGRAMUNIFORM2UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2uiv");
  continue;
}

if(strcmp("glProgramUniform3d",call_name)==0){
  (PFNGLPROGRAMUNIFORM3DPROC) func = (PFNGLPROGRAMUNIFORM3DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3d");
  continue;
}

if(strcmp("glProgramUniform3dv",call_name)==0){
  (PFNGLPROGRAMUNIFORM3DVPROC) func = (PFNGLPROGRAMUNIFORM3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3dv");
  continue;
}

if(strcmp("glProgramUniform3f",call_name)==0){
  (PFNGLPROGRAMUNIFORM3FPROC) func = (PFNGLPROGRAMUNIFORM3FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3f");
  continue;
}

if(strcmp("glProgramUniform3fv",call_name)==0){
  (PFNGLPROGRAMUNIFORM3FVPROC) func = (PFNGLPROGRAMUNIFORM3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3fv");
  continue;
}

if(strcmp("glProgramUniform3i",call_name)==0){
  (PFNGLPROGRAMUNIFORM3IPROC) func = (PFNGLPROGRAMUNIFORM3IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3i");
  continue;
}

if(strcmp("glProgramUniform3iv",call_name)==0){
  (PFNGLPROGRAMUNIFORM3IVPROC) func = (PFNGLPROGRAMUNIFORM3IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3iv");
  continue;
}

if(strcmp("glProgramUniform3ui",call_name)==0){
  (PFNGLPROGRAMUNIFORM3UIPROC) func = (PFNGLPROGRAMUNIFORM3UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3ui");
  continue;
}

if(strcmp("glProgramUniform3uiv",call_name)==0){
  (PFNGLPROGRAMUNIFORM3UIVPROC) func = (PFNGLPROGRAMUNIFORM3UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3uiv");
  continue;
}

if(strcmp("glProgramUniform4d",call_name)==0){
  (PFNGLPROGRAMUNIFORM4DPROC) func = (PFNGLPROGRAMUNIFORM4DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4d");
  continue;
}

if(strcmp("glProgramUniform4dv",call_name)==0){
  (PFNGLPROGRAMUNIFORM4DVPROC) func = (PFNGLPROGRAMUNIFORM4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4dv");
  continue;
}

if(strcmp("glProgramUniform4f",call_name)==0){
  (PFNGLPROGRAMUNIFORM4FPROC) func = (PFNGLPROGRAMUNIFORM4FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4f");
  continue;
}

if(strcmp("glProgramUniform4fv",call_name)==0){
  (PFNGLPROGRAMUNIFORM4FVPROC) func = (PFNGLPROGRAMUNIFORM4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4fv");
  continue;
}

if(strcmp("glProgramUniform4i",call_name)==0){
  (PFNGLPROGRAMUNIFORM4IPROC) func = (PFNGLPROGRAMUNIFORM4IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4i");
  continue;
}

if(strcmp("glProgramUniform4iv",call_name)==0){
  (PFNGLPROGRAMUNIFORM4IVPROC) func = (PFNGLPROGRAMUNIFORM4IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4iv");
  continue;
}

if(strcmp("glProgramUniform4ui",call_name)==0){
  (PFNGLPROGRAMUNIFORM4UIPROC) func = (PFNGLPROGRAMUNIFORM4UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4ui");
  continue;
}

if(strcmp("glProgramUniform4uiv",call_name)==0){
  (PFNGLPROGRAMUNIFORM4UIVPROC) func = (PFNGLPROGRAMUNIFORM4UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4uiv");
  continue;
}

if(strcmp("glProgramUniformMatrix2dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2dv");
  continue;
}

if(strcmp("glProgramUniformMatrix2fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2fv");
  continue;
}

if(strcmp("glProgramUniformMatrix2x3dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3dv");
  continue;
}

if(strcmp("glProgramUniformMatrix2x3fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3fv");
  continue;
}

if(strcmp("glProgramUniformMatrix2x4dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4dv");
  continue;
}

if(strcmp("glProgramUniformMatrix2x4fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4fv");
  continue;
}

if(strcmp("glProgramUniformMatrix3dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3dv");
  continue;
}

if(strcmp("glProgramUniformMatrix3fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3fv");
  continue;
}

if(strcmp("glProgramUniformMatrix3x2dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2dv");
  continue;
}

if(strcmp("glProgramUniformMatrix3x2fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2fv");
  continue;
}

if(strcmp("glProgramUniformMatrix3x4dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4dv");
  continue;
}

if(strcmp("glProgramUniformMatrix3x4fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4fv");
  continue;
}

if(strcmp("glProgramUniformMatrix4dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4dv");
  continue;
}

if(strcmp("glProgramUniformMatrix4fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4fv");
  continue;
}

if(strcmp("glProgramUniformMatrix4x2dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2dv");
  continue;
}

if(strcmp("glProgramUniformMatrix4x2fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2fv");
  continue;
}

if(strcmp("glProgramUniformMatrix4x3dv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3dv");
  continue;
}

if(strcmp("glProgramUniformMatrix4x3fv",call_name)==0){
  (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) func = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3fv");
  continue;
}

if(strcmp("glUnlockArraysEXT",call_name)==0){
  (PFNGLUNLOCKARRAYSEXTPROC) func = (PFNGLUNLOCKARRAYSEXTPROC)glXGetProcAddress((const GLubyte*)"glUnlockArraysEXT");
  continue;
}

if(strcmp("glUseProgramStages",call_name)==0){
  (PFNGLUSEPROGRAMSTAGESPROC) func = (PFNGLUSEPROGRAMSTAGESPROC)glXGetProcAddress((const GLubyte*)"glUseProgramStages");
  continue;
}

if(strcmp("glValidateProgramPipeline",call_name)==0){
  (PFNGLVALIDATEPROGRAMPIPELINEPROC) func = (PFNGLVALIDATEPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glValidateProgramPipeline");
  continue;
}

if(strcmp("glDebugMessageCallback",call_name)==0){
  (PFNGLDEBUGMESSAGECALLBACKPROC) func = (PFNGLDEBUGMESSAGECALLBACKPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageCallback");
  continue;
}

if(strcmp("glDebugMessageControl",call_name)==0){
  (PFNGLDEBUGMESSAGECONTROLPROC) func = (PFNGLDEBUGMESSAGECONTROLPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageControl");
  continue;
}

if(strcmp("glDebugMessageInsert",call_name)==0){
  (PFNGLDEBUGMESSAGEINSERTPROC) func = (PFNGLDEBUGMESSAGEINSERTPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageInsert");
  continue;
}

if(strcmp("glGetDebugMessageLog",call_name)==0){
  (PFNGLGETDEBUGMESSAGELOGPROC) func = (PFNGLGETDEBUGMESSAGELOGPROC)glXGetProcAddress((const GLubyte*)"glGetDebugMessageLog");
  continue;
}

if(strcmp("glGetObjectLabel",call_name)==0){
  (PFNGLGETOBJECTLABELPROC) func = (PFNGLGETOBJECTLABELPROC)glXGetProcAddress((const GLubyte*)"glGetObjectLabel");
  continue;
}

if(strcmp("glGetObjectPtrLabel",call_name)==0){
  (PFNGLGETOBJECTPTRLABELPROC) func = (PFNGLGETOBJECTPTRLABELPROC)glXGetProcAddress((const GLubyte*)"glGetObjectPtrLabel");
  continue;
}

if(strcmp("glObjectLabel",call_name)==0){
  (PFNGLOBJECTLABELPROC) func = (PFNGLOBJECTLABELPROC)glXGetProcAddress((const GLubyte*)"glObjectLabel");
  continue;
}

if(strcmp("glObjectPtrLabel",call_name)==0){
  (PFNGLOBJECTPTRLABELPROC) func = (PFNGLOBJECTPTRLABELPROC)glXGetProcAddress((const GLubyte*)"glObjectPtrLabel");
  continue;
}

if(strcmp("glPopDebugGroup",call_name)==0){
  (PFNGLPOPDEBUGGROUPPROC) func = (PFNGLPOPDEBUGGROUPPROC)glXGetProcAddress((const GLubyte*)"glPopDebugGroup");
  continue;
}

if(strcmp("glPushDebugGroup",call_name)==0){
  (PFNGLPUSHDEBUGGROUPPROC) func = (PFNGLPUSHDEBUGGROUPPROC)glXGetProcAddress((const GLubyte*)"glPushDebugGroup");
  continue;
}

if(strcmp("glSecondaryColor3fEXT",call_name)==0){
  (PFNGLSECONDARYCOLOR3FEXTPROC) func = (PFNGLSECONDARYCOLOR3FEXTPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3fEXT");
  continue;
}

if(strcmp("glSecondaryColor3fvEXT",call_name)==0){
  (PFNGLSECONDARYCOLOR3FVEXTPROC) func = (PFNGLSECONDARYCOLOR3FVEXTPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3fvEXT");
  continue;
}

if(strcmp("glMultiDrawElementsEXT",call_name)==0){
  (PFNGLMULTIDRAWELEMENTSEXTPROC) func = (PFNGLMULTIDRAWELEMENTSEXTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsEXT");
  continue;
}

if(strcmp("glFogCoordfEXT",call_name)==0){
  (PFNGLFOGCOORDFEXTPROC) func = (PFNGLFOGCOORDFEXTPROC)glXGetProcAddress((const GLubyte*)"glFogCoordfEXT");
  continue;
}

if(strcmp("glFogCoordfvEXT",call_name)==0){
  (PFNGLFOGCOORDFVEXTPROC) func = (PFNGLFOGCOORDFVEXTPROC)glXGetProcAddress((const GLubyte*)"glFogCoordfvEXT");
  continue;
}

if(strcmp("glResizeBuffersMESA",call_name)==0){
  (PFNGLRESIZEBUFFERSMESAPROC) func = (PFNGLRESIZEBUFFERSMESAPROC)glXGetProcAddress((const GLubyte*)"glResizeBuffersMESA");
  continue;
}

if(strcmp("glWindowPos4dMESA",call_name)==0){
  (PFNGLWINDOWPOS4DMESAPROC) func = (PFNGLWINDOWPOS4DMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4dMESA");
  continue;
}

if(strcmp("glWindowPos4dvMESA",call_name)==0){
  (PFNGLWINDOWPOS4DVMESAPROC) func = (PFNGLWINDOWPOS4DVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4dvMESA");
  continue;
}

if(strcmp("glWindowPos4fMESA",call_name)==0){
  (PFNGLWINDOWPOS4FMESAPROC) func = (PFNGLWINDOWPOS4FMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4fMESA");
  continue;
}

if(strcmp("glWindowPos4fvMESA",call_name)==0){
  (PFNGLWINDOWPOS4FVMESAPROC) func = (PFNGLWINDOWPOS4FVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4fvMESA");
  continue;
}

if(strcmp("glWindowPos4iMESA",call_name)==0){
  (PFNGLWINDOWPOS4IMESAPROC) func = (PFNGLWINDOWPOS4IMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4iMESA");
  continue;
}

if(strcmp("glWindowPos4ivMESA",call_name)==0){
  (PFNGLWINDOWPOS4IVMESAPROC) func = (PFNGLWINDOWPOS4IVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4ivMESA");
  continue;
}

if(strcmp("glWindowPos4sMESA",call_name)==0){
  (PFNGLWINDOWPOS4SMESAPROC) func = (PFNGLWINDOWPOS4SMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4sMESA");
  continue;
}

if(strcmp("glWindowPos4svMESA",call_name)==0){
  (PFNGLWINDOWPOS4SVMESAPROC) func = (PFNGLWINDOWPOS4SVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4svMESA");
  continue;
}

if(strcmp("glMultiModeDrawArraysIBM",call_name)==0){
  (PFNGLMULTIMODEDRAWARRAYSIBMPROC) func = (PFNGLMULTIMODEDRAWARRAYSIBMPROC)glXGetProcAddress((const GLubyte*)"glMultiModeDrawArraysIBM");
  continue;
}

if(strcmp("glMultiModeDrawElementsIBM",call_name)==0){
  (PFNGLMULTIMODEDRAWELEMENTSIBMPROC) func = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC)glXGetProcAddress((const GLubyte*)"glMultiModeDrawElementsIBM");
  continue;
}

if(strcmp("glAreProgramsResidentNV",call_name)==0){
  (PFNGLAREPROGRAMSRESIDENTNVPROC) func = (PFNGLAREPROGRAMSRESIDENTNVPROC)glXGetProcAddress((const GLubyte*)"glAreProgramsResidentNV");
  continue;
}

if(strcmp("glExecuteProgramNV",call_name)==0){
  (PFNGLEXECUTEPROGRAMNVPROC) func = (PFNGLEXECUTEPROGRAMNVPROC)glXGetProcAddress((const GLubyte*)"glExecuteProgramNV");
  continue;
}

if(strcmp("glGetProgramParameterdvNV",call_name)==0){
  (PFNGLGETPROGRAMPARAMETERDVNVPROC) func = (PFNGLGETPROGRAMPARAMETERDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramParameterdvNV");
  continue;
}

if(strcmp("glGetProgramParameterfvNV",call_name)==0){
  (PFNGLGETPROGRAMPARAMETERFVNVPROC) func = (PFNGLGETPROGRAMPARAMETERFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramParameterfvNV");
  continue;
}

if(strcmp("glGetProgramStringNV",call_name)==0){
  (PFNGLGETPROGRAMSTRINGNVPROC) func = (PFNGLGETPROGRAMSTRINGNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStringNV");
  continue;
}

if(strcmp("glGetProgramivNV",call_name)==0){
  (PFNGLGETPROGRAMIVNVPROC) func = (PFNGLGETPROGRAMIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramivNV");
  continue;
}

if(strcmp("glGetTrackMatrixivNV",call_name)==0){
  (PFNGLGETTRACKMATRIXIVNVPROC) func = (PFNGLGETTRACKMATRIXIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetTrackMatrixivNV");
  continue;
}

if(strcmp("glGetVertexAttribdvNV",call_name)==0){
  (PFNGLGETVERTEXATTRIBDVNVPROC) func = (PFNGLGETVERTEXATTRIBDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribdvNV");
  continue;
}

if(strcmp("glGetVertexAttribfvNV",call_name)==0){
  (PFNGLGETVERTEXATTRIBFVNVPROC) func = (PFNGLGETVERTEXATTRIBFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribfvNV");
  continue;
}

if(strcmp("glGetVertexAttribivNV",call_name)==0){
  (PFNGLGETVERTEXATTRIBIVNVPROC) func = (PFNGLGETVERTEXATTRIBIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribivNV");
  continue;
}

if(strcmp("glLoadProgramNV",call_name)==0){
  (PFNGLLOADPROGRAMNVPROC) func = (PFNGLLOADPROGRAMNVPROC)glXGetProcAddress((const GLubyte*)"glLoadProgramNV");
  continue;
}

if(strcmp("glProgramParameters4dvNV",call_name)==0){
  (PFNGLPROGRAMPARAMETERS4DVNVPROC) func = (PFNGLPROGRAMPARAMETERS4DVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramParameters4dvNV");
  continue;
}

if(strcmp("glProgramParameters4fvNV",call_name)==0){
  (PFNGLPROGRAMPARAMETERS4FVNVPROC) func = (PFNGLPROGRAMPARAMETERS4FVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramParameters4fvNV");
  continue;
}

if(strcmp("glRequestResidentProgramsNV",call_name)==0){
  (PFNGLREQUESTRESIDENTPROGRAMSNVPROC) func = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC)glXGetProcAddress((const GLubyte*)"glRequestResidentProgramsNV");
  continue;
}

if(strcmp("glTrackMatrixNV",call_name)==0){
  (PFNGLTRACKMATRIXNVPROC) func = (PFNGLTRACKMATRIXNVPROC)glXGetProcAddress((const GLubyte*)"glTrackMatrixNV");
  continue;
}

if(strcmp("glVertexAttrib1dNV",call_name)==0){
  (PFNGLVERTEXATTRIB1DNVPROC) func = (PFNGLVERTEXATTRIB1DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dNV");
  continue;
}

if(strcmp("glVertexAttrib1dvNV",call_name)==0){
  (PFNGLVERTEXATTRIB1DVNVPROC) func = (PFNGLVERTEXATTRIB1DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dvNV");
  continue;
}

if(strcmp("glVertexAttrib1fNV",call_name)==0){
  (PFNGLVERTEXATTRIB1FNVPROC) func = (PFNGLVERTEXATTRIB1FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fNV");
  continue;
}

if(strcmp("glVertexAttrib1fvNV",call_name)==0){
  (PFNGLVERTEXATTRIB1FVNVPROC) func = (PFNGLVERTEXATTRIB1FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fvNV");
  continue;
}

if(strcmp("glVertexAttrib1sNV",call_name)==0){
  (PFNGLVERTEXATTRIB1SNVPROC) func = (PFNGLVERTEXATTRIB1SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1sNV");
  continue;
}

if(strcmp("glVertexAttrib1svNV",call_name)==0){
  (PFNGLVERTEXATTRIB1SVNVPROC) func = (PFNGLVERTEXATTRIB1SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1svNV");
  continue;
}

if(strcmp("glVertexAttrib2dNV",call_name)==0){
  (PFNGLVERTEXATTRIB2DNVPROC) func = (PFNGLVERTEXATTRIB2DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dNV");
  continue;
}

if(strcmp("glVertexAttrib2dvNV",call_name)==0){
  (PFNGLVERTEXATTRIB2DVNVPROC) func = (PFNGLVERTEXATTRIB2DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dvNV");
  continue;
}

if(strcmp("glVertexAttrib2fNV",call_name)==0){
  (PFNGLVERTEXATTRIB2FNVPROC) func = (PFNGLVERTEXATTRIB2FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fNV");
  continue;
}

if(strcmp("glVertexAttrib2fvNV",call_name)==0){
  (PFNGLVERTEXATTRIB2FVNVPROC) func = (PFNGLVERTEXATTRIB2FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fvNV");
  continue;
}

if(strcmp("glVertexAttrib2sNV",call_name)==0){
  (PFNGLVERTEXATTRIB2SNVPROC) func = (PFNGLVERTEXATTRIB2SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2sNV");
  continue;
}

if(strcmp("glVertexAttrib2svNV",call_name)==0){
  (PFNGLVERTEXATTRIB2SVNVPROC) func = (PFNGLVERTEXATTRIB2SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2svNV");
  continue;
}

if(strcmp("glVertexAttrib3dNV",call_name)==0){
  (PFNGLVERTEXATTRIB3DNVPROC) func = (PFNGLVERTEXATTRIB3DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dNV");
  continue;
}

if(strcmp("glVertexAttrib3dvNV",call_name)==0){
  (PFNGLVERTEXATTRIB3DVNVPROC) func = (PFNGLVERTEXATTRIB3DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dvNV");
  continue;
}

if(strcmp("glVertexAttrib3fNV",call_name)==0){
  (PFNGLVERTEXATTRIB3FNVPROC) func = (PFNGLVERTEXATTRIB3FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fNV");
  continue;
}

if(strcmp("glVertexAttrib3fvNV",call_name)==0){
  (PFNGLVERTEXATTRIB3FVNVPROC) func = (PFNGLVERTEXATTRIB3FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fvNV");
  continue;
}

if(strcmp("glVertexAttrib3sNV",call_name)==0){
  (PFNGLVERTEXATTRIB3SNVPROC) func = (PFNGLVERTEXATTRIB3SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3sNV");
  continue;
}

if(strcmp("glVertexAttrib3svNV",call_name)==0){
  (PFNGLVERTEXATTRIB3SVNVPROC) func = (PFNGLVERTEXATTRIB3SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3svNV");
  continue;
}

if(strcmp("glVertexAttrib4dNV",call_name)==0){
  (PFNGLVERTEXATTRIB4DNVPROC) func = (PFNGLVERTEXATTRIB4DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dNV");
  continue;
}

if(strcmp("glVertexAttrib4dvNV",call_name)==0){
  (PFNGLVERTEXATTRIB4DVNVPROC) func = (PFNGLVERTEXATTRIB4DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dvNV");
  continue;
}

if(strcmp("glVertexAttrib4fNV",call_name)==0){
  (PFNGLVERTEXATTRIB4FNVPROC) func = (PFNGLVERTEXATTRIB4FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fNV");
  continue;
}

if(strcmp("glVertexAttrib4fvNV",call_name)==0){
  (PFNGLVERTEXATTRIB4FVNVPROC) func = (PFNGLVERTEXATTRIB4FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fvNV");
  continue;
}

if(strcmp("glVertexAttrib4sNV",call_name)==0){
  (PFNGLVERTEXATTRIB4SNVPROC) func = (PFNGLVERTEXATTRIB4SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4sNV");
  continue;
}

if(strcmp("glVertexAttrib4svNV",call_name)==0){
  (PFNGLVERTEXATTRIB4SVNVPROC) func = (PFNGLVERTEXATTRIB4SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4svNV");
  continue;
}

if(strcmp("glVertexAttrib4ubNV",call_name)==0){
  (PFNGLVERTEXATTRIB4UBNVPROC) func = (PFNGLVERTEXATTRIB4UBNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubNV");
  continue;
}

if(strcmp("glVertexAttrib4ubvNV",call_name)==0){
  (PFNGLVERTEXATTRIB4UBVNVPROC) func = (PFNGLVERTEXATTRIB4UBVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubvNV");
  continue;
}

if(strcmp("glVertexAttribPointerNV",call_name)==0){
  (PFNGLVERTEXATTRIBPOINTERNVPROC) func = (PFNGLVERTEXATTRIBPOINTERNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribPointerNV");
  continue;
}

if(strcmp("glVertexAttribs1dvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS1DVNVPROC) func = (PFNGLVERTEXATTRIBS1DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1dvNV");
  continue;
}

if(strcmp("glVertexAttribs1fvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS1FVNVPROC) func = (PFNGLVERTEXATTRIBS1FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1fvNV");
  continue;
}

if(strcmp("glVertexAttribs1svNV",call_name)==0){
  (PFNGLVERTEXATTRIBS1SVNVPROC) func = (PFNGLVERTEXATTRIBS1SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1svNV");
  continue;
}

if(strcmp("glVertexAttribs2dvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS2DVNVPROC) func = (PFNGLVERTEXATTRIBS2DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2dvNV");
  continue;
}

if(strcmp("glVertexAttribs2fvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS2FVNVPROC) func = (PFNGLVERTEXATTRIBS2FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2fvNV");
  continue;
}

if(strcmp("glVertexAttribs2svNV",call_name)==0){
  (PFNGLVERTEXATTRIBS2SVNVPROC) func = (PFNGLVERTEXATTRIBS2SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2svNV");
  continue;
}

if(strcmp("glVertexAttribs3dvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS3DVNVPROC) func = (PFNGLVERTEXATTRIBS3DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3dvNV");
  continue;
}

if(strcmp("glVertexAttribs3fvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS3FVNVPROC) func = (PFNGLVERTEXATTRIBS3FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3fvNV");
  continue;
}

if(strcmp("glVertexAttribs3svNV",call_name)==0){
  (PFNGLVERTEXATTRIBS3SVNVPROC) func = (PFNGLVERTEXATTRIBS3SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3svNV");
  continue;
}

if(strcmp("glVertexAttribs4dvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS4DVNVPROC) func = (PFNGLVERTEXATTRIBS4DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4dvNV");
  continue;
}

if(strcmp("glVertexAttribs4fvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS4FVNVPROC) func = (PFNGLVERTEXATTRIBS4FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4fvNV");
  continue;
}

if(strcmp("glVertexAttribs4svNV",call_name)==0){
  (PFNGLVERTEXATTRIBS4SVNVPROC) func = (PFNGLVERTEXATTRIBS4SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4svNV");
  continue;
}

if(strcmp("glVertexAttribs4ubvNV",call_name)==0){
  (PFNGLVERTEXATTRIBS4UBVNVPROC) func = (PFNGLVERTEXATTRIBS4UBVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4ubvNV");
  continue;
}

if(strcmp("glGetTexBumpParameterfvATI",call_name)==0){
  (PFNGLGETTEXBUMPPARAMETERFVATIPROC) func = (PFNGLGETTEXBUMPPARAMETERFVATIPROC)glXGetProcAddress((const GLubyte*)"glGetTexBumpParameterfvATI");
  continue;
}

if(strcmp("glGetTexBumpParameterivATI",call_name)==0){
  (PFNGLGETTEXBUMPPARAMETERIVATIPROC) func = (PFNGLGETTEXBUMPPARAMETERIVATIPROC)glXGetProcAddress((const GLubyte*)"glGetTexBumpParameterivATI");
  continue;
}

if(strcmp("glTexBumpParameterfvATI",call_name)==0){
  (PFNGLTEXBUMPPARAMETERFVATIPROC) func = (PFNGLTEXBUMPPARAMETERFVATIPROC)glXGetProcAddress((const GLubyte*)"glTexBumpParameterfvATI");
  continue;
}

if(strcmp("glTexBumpParameterivATI",call_name)==0){
  (PFNGLTEXBUMPPARAMETERIVATIPROC) func = (PFNGLTEXBUMPPARAMETERIVATIPROC)glXGetProcAddress((const GLubyte*)"glTexBumpParameterivATI");
  continue;
}

if(strcmp("glAlphaFragmentOp1ATI",call_name)==0){
  (PFNGLALPHAFRAGMENTOP1ATIPROC) func = (PFNGLALPHAFRAGMENTOP1ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp1ATI");
  continue;
}

if(strcmp("glAlphaFragmentOp2ATI",call_name)==0){
  (PFNGLALPHAFRAGMENTOP2ATIPROC) func = (PFNGLALPHAFRAGMENTOP2ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp2ATI");
  continue;
}

if(strcmp("glAlphaFragmentOp3ATI",call_name)==0){
  (PFNGLALPHAFRAGMENTOP3ATIPROC) func = (PFNGLALPHAFRAGMENTOP3ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp3ATI");
  continue;
}

if(strcmp("glBeginFragmentShaderATI",call_name)==0){
  (PFNGLBEGINFRAGMENTSHADERATIPROC) func = (PFNGLBEGINFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glBeginFragmentShaderATI");
  continue;
}

if(strcmp("glBindFragmentShaderATI",call_name)==0){
  (PFNGLBINDFRAGMENTSHADERATIPROC) func = (PFNGLBINDFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glBindFragmentShaderATI");
  continue;
}

if(strcmp("glColorFragmentOp1ATI",call_name)==0){
  (PFNGLCOLORFRAGMENTOP1ATIPROC) func = (PFNGLCOLORFRAGMENTOP1ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp1ATI");
  continue;
}

if(strcmp("glColorFragmentOp2ATI",call_name)==0){
  (PFNGLCOLORFRAGMENTOP2ATIPROC) func = (PFNGLCOLORFRAGMENTOP2ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp2ATI");
  continue;
}

if(strcmp("glColorFragmentOp3ATI",call_name)==0){
  (PFNGLCOLORFRAGMENTOP3ATIPROC) func = (PFNGLCOLORFRAGMENTOP3ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp3ATI");
  continue;
}

if(strcmp("glDeleteFragmentShaderATI",call_name)==0){
  (PFNGLDELETEFRAGMENTSHADERATIPROC) func = (PFNGLDELETEFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glDeleteFragmentShaderATI");
  continue;
}

if(strcmp("glEndFragmentShaderATI",call_name)==0){
  (PFNGLENDFRAGMENTSHADERATIPROC) func = (PFNGLENDFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glEndFragmentShaderATI");
  continue;
}

if(strcmp("glGenFragmentShadersATI",call_name)==0){
  (PFNGLGENFRAGMENTSHADERSATIPROC) func = (PFNGLGENFRAGMENTSHADERSATIPROC)glXGetProcAddress((const GLubyte*)"glGenFragmentShadersATI");
  continue;
}

if(strcmp("glPassTexCoordATI",call_name)==0){
  (PFNGLPASSTEXCOORDATIPROC) func = (PFNGLPASSTEXCOORDATIPROC)glXGetProcAddress((const GLubyte*)"glPassTexCoordATI");
  continue;
}

if(strcmp("glSampleMapATI",call_name)==0){
  (PFNGLSAMPLEMAPATIPROC) func = (PFNGLSAMPLEMAPATIPROC)glXGetProcAddress((const GLubyte*)"glSampleMapATI");
  continue;
}

if(strcmp("glSetFragmentShaderConstantATI",call_name)==0){
  (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) func = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)glXGetProcAddress((const GLubyte*)"glSetFragmentShaderConstantATI");
  continue;
}

if(strcmp("glDepthRangeArrayfvOES",call_name)==0){
  (PFNGLDEPTHRANGEARRAYFVOESPROC) func = (PFNGLDEPTHRANGEARRAYFVOESPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeArrayfvOES");
  continue;
}

if(strcmp("glDepthRangeIndexedfOES",call_name)==0){
  (PFNGLDEPTHRANGEINDEXEDFOESPROC) func = (PFNGLDEPTHRANGEINDEXEDFOESPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeIndexedfOES");
  continue;
}

if(strcmp("glActiveStencilFaceEXT",call_name)==0){
  (PFNGLACTIVESTENCILFACEEXTPROC) func = (PFNGLACTIVESTENCILFACEEXTPROC)glXGetProcAddress((const GLubyte*)"glActiveStencilFaceEXT");
  continue;
}

if(strcmp("glBindVertexArrayAPPLE",call_name)==0){
  (PFNGLBINDVERTEXARRAYAPPLEPROC) func = (PFNGLBINDVERTEXARRAYAPPLEPROC)glXGetProcAddress((const GLubyte*)"glBindVertexArrayAPPLE");
  continue;
}

if(strcmp("glGenVertexArraysAPPLE",call_name)==0){
  (PFNGLGENVERTEXARRAYSAPPLEPROC) func = (PFNGLGENVERTEXARRAYSAPPLEPROC)glXGetProcAddress((const GLubyte*)"glGenVertexArraysAPPLE");
  continue;
}

if(strcmp("glGetProgramNamedParameterdvNV",call_name)==0){
  (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) func = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramNamedParameterdvNV");
  continue;
}

if(strcmp("glGetProgramNamedParameterfvNV",call_name)==0){
  (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) func = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramNamedParameterfvNV");
  continue;
}

if(strcmp("glProgramNamedParameter4dNV",call_name)==0){
  (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) func = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4dNV");
  continue;
}

if(strcmp("glProgramNamedParameter4dvNV",call_name)==0){
  (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) func = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4dvNV");
  continue;
}

if(strcmp("glProgramNamedParameter4fNV",call_name)==0){
  (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) func = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4fNV");
  continue;
}

if(strcmp("glProgramNamedParameter4fvNV",call_name)==0){
  (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) func = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4fvNV");
  continue;
}

if(strcmp("glPrimitiveRestartNV",call_name)==0){
  (PFNGLPRIMITIVERESTARTNVPROC) func = (PFNGLPRIMITIVERESTARTNVPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveRestartNV");
  continue;
}

if(strcmp("glGetTexGenxvOES",call_name)==0){
  (PFNGLGETTEXGENXVOESPROC) func = (PFNGLGETTEXGENXVOESPROC)glXGetProcAddress((const GLubyte*)"glGetTexGenxvOES");
  continue;
}

if(strcmp("glTexGenxOES",call_name)==0){
  (PFNGLTEXGENXOESPROC) func = (PFNGLTEXGENXOESPROC)glXGetProcAddress((const GLubyte*)"glTexGenxOES");
  continue;
}

if(strcmp("glTexGenxvOES",call_name)==0){
  (PFNGLTEXGENXVOESPROC) func = (PFNGLTEXGENXVOESPROC)glXGetProcAddress((const GLubyte*)"glTexGenxvOES");
  continue;
}

if(strcmp("glDepthBoundsEXT",call_name)==0){
  (PFNGLDEPTHBOUNDSEXTPROC) func = (PFNGLDEPTHBOUNDSEXTPROC)glXGetProcAddress((const GLubyte*)"glDepthBoundsEXT");
  continue;
}

if(strcmp("glBindFramebufferEXT",call_name)==0){
  (PFNGLBINDFRAMEBUFFEREXTPROC) func = (PFNGLBINDFRAMEBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glBindFramebufferEXT");
  continue;
}

if(strcmp("glBindRenderbufferEXT",call_name)==0){
  (PFNGLBINDRENDERBUFFEREXTPROC) func = (PFNGLBINDRENDERBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glBindRenderbufferEXT");
  continue;
}

if(strcmp("glStringMarkerGREMEDY",call_name)==0){
  (PFNGLSTRINGMARKERGREMEDYPROC) func = (PFNGLSTRINGMARKERGREMEDYPROC)glXGetProcAddress((const GLubyte*)"glStringMarkerGREMEDY");
  continue;
}

if(strcmp("glBufferParameteriAPPLE",call_name)==0){
  (PFNGLBUFFERPARAMETERIAPPLEPROC) func = (PFNGLBUFFERPARAMETERIAPPLEPROC)glXGetProcAddress((const GLubyte*)"glBufferParameteriAPPLE");
  continue;
}

if(strcmp("glFlushMappedBufferRangeAPPLE",call_name)==0){
  (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) func = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedBufferRangeAPPLE");
  continue;
}

if(strcmp("glVertexAttribI1iEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI1IEXTPROC) func = (PFNGLVERTEXATTRIBI1IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1iEXT");
  continue;
}

if(strcmp("glVertexAttribI1uiEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI1UIEXTPROC) func = (PFNGLVERTEXATTRIBI1UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1uiEXT");
  continue;
}

if(strcmp("glVertexAttribI2iEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI2IEXTPROC) func = (PFNGLVERTEXATTRIBI2IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2iEXT");
  continue;
}

if(strcmp("glVertexAttribI2ivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI2IVEXTPROC) func = (PFNGLVERTEXATTRIBI2IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2ivEXT");
  continue;
}

if(strcmp("glVertexAttribI2uiEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI2UIEXTPROC) func = (PFNGLVERTEXATTRIBI2UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2uiEXT");
  continue;
}

if(strcmp("glVertexAttribI2uivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI2UIVEXTPROC) func = (PFNGLVERTEXATTRIBI2UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2uivEXT");
  continue;
}

if(strcmp("glVertexAttribI3iEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI3IEXTPROC) func = (PFNGLVERTEXATTRIBI3IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3iEXT");
  continue;
}

if(strcmp("glVertexAttribI3ivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI3IVEXTPROC) func = (PFNGLVERTEXATTRIBI3IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3ivEXT");
  continue;
}

if(strcmp("glVertexAttribI3uiEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI3UIEXTPROC) func = (PFNGLVERTEXATTRIBI3UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3uiEXT");
  continue;
}

if(strcmp("glVertexAttribI3uivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI3UIVEXTPROC) func = (PFNGLVERTEXATTRIBI3UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3uivEXT");
  continue;
}

if(strcmp("glVertexAttribI4iEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI4IEXTPROC) func = (PFNGLVERTEXATTRIBI4IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4iEXT");
  continue;
}

if(strcmp("glVertexAttribI4ivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI4IVEXTPROC) func = (PFNGLVERTEXATTRIBI4IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4ivEXT");
  continue;
}

if(strcmp("glVertexAttribI4uiEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI4UIEXTPROC) func = (PFNGLVERTEXATTRIBI4UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4uiEXT");
  continue;
}

if(strcmp("glVertexAttribI4uivEXT",call_name)==0){
  (PFNGLVERTEXATTRIBI4UIVEXTPROC) func = (PFNGLVERTEXATTRIBI4UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4uivEXT");
  continue;
}

if(strcmp("glClearColorIiEXT",call_name)==0){
  (PFNGLCLEARCOLORIIEXTPROC) func = (PFNGLCLEARCOLORIIEXTPROC)glXGetProcAddress((const GLubyte*)"glClearColorIiEXT");
  continue;
}

if(strcmp("glClearColorIuiEXT",call_name)==0){
  (PFNGLCLEARCOLORIUIEXTPROC) func = (PFNGLCLEARCOLORIUIEXTPROC)glXGetProcAddress((const GLubyte*)"glClearColorIuiEXT");
  continue;
}

if(strcmp("glBindBufferOffsetEXT",call_name)==0){
  (PFNGLBINDBUFFEROFFSETEXTPROC) func = (PFNGLBINDBUFFEROFFSETEXTPROC)glXGetProcAddress((const GLubyte*)"glBindBufferOffsetEXT");
  continue;
}

if(strcmp("glBeginPerfMonitorAMD",call_name)==0){
  (PFNGLBEGINPERFMONITORAMDPROC) func = (PFNGLBEGINPERFMONITORAMDPROC)glXGetProcAddress((const GLubyte*)"glBeginPerfMonitorAMD");
  continue;
}

if(strcmp("glDeletePerfMonitorsAMD",call_name)==0){
  (PFNGLDELETEPERFMONITORSAMDPROC) func = (PFNGLDELETEPERFMONITORSAMDPROC)glXGetProcAddress((const GLubyte*)"glDeletePerfMonitorsAMD");
  continue;
}

if(strcmp("glEndPerfMonitorAMD",call_name)==0){
  (PFNGLENDPERFMONITORAMDPROC) func = (PFNGLENDPERFMONITORAMDPROC)glXGetProcAddress((const GLubyte*)"glEndPerfMonitorAMD");
  continue;
}

if(strcmp("glGenPerfMonitorsAMD",call_name)==0){
  (PFNGLGENPERFMONITORSAMDPROC) func = (PFNGLGENPERFMONITORSAMDPROC)glXGetProcAddress((const GLubyte*)"glGenPerfMonitorsAMD");
  continue;
}

if(strcmp("glGetPerfMonitorCounterDataAMD",call_name)==0){
  (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) func = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterDataAMD");
  continue;
}

if(strcmp("glGetPerfMonitorCounterInfoAMD",call_name)==0){
  (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) func = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterInfoAMD");
  continue;
}

if(strcmp("glGetPerfMonitorCounterStringAMD",call_name)==0){
  (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) func = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterStringAMD");
  continue;
}

if(strcmp("glGetPerfMonitorCountersAMD",call_name)==0){
  (PFNGLGETPERFMONITORCOUNTERSAMDPROC) func = (PFNGLGETPERFMONITORCOUNTERSAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCountersAMD");
  continue;
}

if(strcmp("glGetPerfMonitorGroupStringAMD",call_name)==0){
  (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) func = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorGroupStringAMD");
  continue;
}

if(strcmp("glGetPerfMonitorGroupsAMD",call_name)==0){
  (PFNGLGETPERFMONITORGROUPSAMDPROC) func = (PFNGLGETPERFMONITORGROUPSAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorGroupsAMD");
  continue;
}

if(strcmp("glSelectPerfMonitorCountersAMD",call_name)==0){
  (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) func = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)glXGetProcAddress((const GLubyte*)"glSelectPerfMonitorCountersAMD");
  continue;
}

if(strcmp("glGetObjectParameterivAPPLE",call_name)==0){
  (PFNGLGETOBJECTPARAMETERIVAPPLEPROC) func = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterivAPPLE");
  continue;
}

if(strcmp("glObjectPurgeableAPPLE",call_name)==0){
  (PFNGLOBJECTPURGEABLEAPPLEPROC) func = (PFNGLOBJECTPURGEABLEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glObjectPurgeableAPPLE");
  continue;
}

if(strcmp("glObjectUnpurgeableAPPLE",call_name)==0){
  (PFNGLOBJECTUNPURGEABLEAPPLEPROC) func = (PFNGLOBJECTUNPURGEABLEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glObjectUnpurgeableAPPLE");
  continue;
}

if(strcmp("glActiveProgramEXT",call_name)==0){
  (PFNGLACTIVEPROGRAMEXTPROC) func = (PFNGLACTIVEPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glActiveProgramEXT");
  continue;
}

if(strcmp("glCreateShaderProgramEXT",call_name)==0){
  (PFNGLCREATESHADERPROGRAMEXTPROC) func = (PFNGLCREATESHADERPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderProgramEXT");
  continue;
}

if(strcmp("glUseShaderProgramEXT",call_name)==0){
  (PFNGLUSESHADERPROGRAMEXTPROC) func = (PFNGLUSESHADERPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glUseShaderProgramEXT");
  continue;
}

if(strcmp("glTextureBarrierNV",call_name)==0){
  (PFNGLTEXTUREBARRIERNVPROC) func = (PFNGLTEXTUREBARRIERNVPROC)glXGetProcAddress((const GLubyte*)"glTextureBarrierNV");
  continue;
}

if(strcmp("glVDPAUFiniNV",call_name)==0){
  (PFNGLVDPAUFININVPROC) func = (PFNGLVDPAUFININVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUFiniNV");
  continue;
}

if(strcmp("glVDPAUGetSurfaceivNV",call_name)==0){
  (PFNGLVDPAUGETSURFACEIVNVPROC) func = (PFNGLVDPAUGETSURFACEIVNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUGetSurfaceivNV");
  continue;
}

if(strcmp("glVDPAUInitNV",call_name)==0){
  (PFNGLVDPAUINITNVPROC) func = (PFNGLVDPAUINITNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUInitNV");
  continue;
}

if(strcmp("glVDPAUIsSurfaceNV",call_name)==0){
  (PFNGLVDPAUISSURFACENVPROC) func = (PFNGLVDPAUISSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUIsSurfaceNV");
  continue;
}

if(strcmp("glVDPAUMapSurfacesNV",call_name)==0){
  (PFNGLVDPAUMAPSURFACESNVPROC) func = (PFNGLVDPAUMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUMapSurfacesNV");
  continue;
}

if(strcmp("glVDPAURegisterOutputSurfaceNV",call_name)==0){
  (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) func = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAURegisterOutputSurfaceNV");
  continue;
}

if(strcmp("glVDPAURegisterVideoSurfaceNV",call_name)==0){
  (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) func = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAURegisterVideoSurfaceNV");
  continue;
}

if(strcmp("glVDPAUSurfaceAccessNV",call_name)==0){
  (PFNGLVDPAUSURFACEACCESSNVPROC) func = (PFNGLVDPAUSURFACEACCESSNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUSurfaceAccessNV");
  continue;
}

if(strcmp("glVDPAUUnmapSurfacesNV",call_name)==0){
  (PFNGLVDPAUUNMAPSURFACESNVPROC) func = (PFNGLVDPAUUNMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUUnmapSurfacesNV");
  continue;
}

if(strcmp("glVDPAUUnregisterSurfaceNV",call_name)==0){
  (PFNGLVDPAUUNREGISTERSURFACENVPROC) func = (PFNGLVDPAUUNREGISTERSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUUnregisterSurfaceNV");
  continue;
}

if(strcmp("glBeginPerfQueryINTEL",call_name)==0){
  (PFNGLBEGINPERFQUERYINTELPROC) func = (PFNGLBEGINPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glBeginPerfQueryINTEL");
  continue;
}

if(strcmp("glCreatePerfQueryINTEL",call_name)==0){
  (PFNGLCREATEPERFQUERYINTELPROC) func = (PFNGLCREATEPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glCreatePerfQueryINTEL");
  continue;
}

if(strcmp("glDeletePerfQueryINTEL",call_name)==0){
  (PFNGLDELETEPERFQUERYINTELPROC) func = (PFNGLDELETEPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glDeletePerfQueryINTEL");
  continue;
}

if(strcmp("glEndPerfQueryINTEL",call_name)==0){
  (PFNGLENDPERFQUERYINTELPROC) func = (PFNGLENDPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glEndPerfQueryINTEL");
  continue;
}

if(strcmp("glGetFirstPerfQueryIdINTEL",call_name)==0){
  (PFNGLGETFIRSTPERFQUERYIDINTELPROC) func = (PFNGLGETFIRSTPERFQUERYIDINTELPROC)glXGetProcAddress((const GLubyte*)"glGetFirstPerfQueryIdINTEL");
  continue;
}

if(strcmp("glGetNextPerfQueryIdINTEL",call_name)==0){
  (PFNGLGETNEXTPERFQUERYIDINTELPROC) func = (PFNGLGETNEXTPERFQUERYIDINTELPROC)glXGetProcAddress((const GLubyte*)"glGetNextPerfQueryIdINTEL");
  continue;
}

if(strcmp("glGetPerfCounterInfoINTEL",call_name)==0){
  (PFNGLGETPERFCOUNTERINFOINTELPROC) func = (PFNGLGETPERFCOUNTERINFOINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfCounterInfoINTEL");
  continue;
}

if(strcmp("glGetPerfQueryDataINTEL",call_name)==0){
  (PFNGLGETPERFQUERYDATAINTELPROC) func = (PFNGLGETPERFQUERYDATAINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryDataINTEL");
  continue;
}

if(strcmp("glGetPerfQueryIdByNameINTEL",call_name)==0){
  (PFNGLGETPERFQUERYIDBYNAMEINTELPROC) func = (PFNGLGETPERFQUERYIDBYNAMEINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryIdByNameINTEL");
  continue;
}

if(strcmp("glGetPerfQueryInfoINTEL",call_name)==0){
  (PFNGLGETPERFQUERYINFOINTELPROC) func = (PFNGLGETPERFQUERYINFOINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryInfoINTEL");
  continue;
}

if(strcmp("glPolygonOffsetClampEXT",call_name)==0){
  (PFNGLPOLYGONOFFSETCLAMPEXTPROC) func = (PFNGLPOLYGONOFFSETCLAMPEXTPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetClampEXT");
  continue;
}

if(strcmp("glWindowRectanglesEXT",call_name)==0){
  (PFNGLWINDOWRECTANGLESEXTPROC) func = (PFNGLWINDOWRECTANGLESEXTPROC)glXGetProcAddress((const GLubyte*)"glWindowRectanglesEXT");
  continue;
}

if(strcmp("glStencilFuncSeparateATI",call_name)==0){
  (PFNGLSTENCILFUNCSEPARATEATIPROC) func = (PFNGLSTENCILFUNCSEPARATEATIPROC)glXGetProcAddress((const GLubyte*)"glStencilFuncSeparateATI");
  continue;
}

if(strcmp("glProgramEnvParameters4fvEXT",call_name)==0){
  (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) func = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameters4fvEXT");
  continue;
}

if(strcmp("glProgramLocalParameters4fvEXT",call_name)==0){
  (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) func = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameters4fvEXT");
  continue;
}

if(strcmp("glEGLImageTargetRenderbufferStorageOES",call_name)==0){
  (PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) func = (PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)glXGetProcAddress((const GLubyte*)"glEGLImageTargetRenderbufferStorageOES");
  continue;
}

if(strcmp("glEGLImageTargetTexture2DOES",call_name)==0){
  (PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) func = (PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)glXGetProcAddress((const GLubyte*)"glEGLImageTargetTexture2DOES");
  continue;
}

if(strcmp("glAlphaFuncx",call_name)==0){
  (PFNGLALPHAFUNCXPROC) func = (PFNGLALPHAFUNCXPROC)glXGetProcAddress((const GLubyte*)"glAlphaFuncx");
  continue;
}

if(strcmp("glClearColorx",call_name)==0){
  (PFNGLCLEARCOLORXPROC) func = (PFNGLCLEARCOLORXPROC)glXGetProcAddress((const GLubyte*)"glClearColorx");
  continue;
}

if(strcmp("glClearDepthx",call_name)==0){
  (PFNGLCLEARDEPTHXPROC) func = (PFNGLCLEARDEPTHXPROC)glXGetProcAddress((const GLubyte*)"glClearDepthx");
  continue;
}

if(strcmp("glColor4x",call_name)==0){
  (PFNGLCOLOR4XPROC) func = (PFNGLCOLOR4XPROC)glXGetProcAddress((const GLubyte*)"glColor4x");
  continue;
}

if(strcmp("glDepthRangex",call_name)==0){
  (PFNGLDEPTHRANGEXPROC) func = (PFNGLDEPTHRANGEXPROC)glXGetProcAddress((const GLubyte*)"glDepthRangex");
  continue;
}

if(strcmp("glFogx",call_name)==0){
  (PFNGLFOGXPROC) func = (PFNGLFOGXPROC)glXGetProcAddress((const GLubyte*)"glFogx");
  continue;
}

if(strcmp("glFogxv",call_name)==0){
  (PFNGLFOGXVPROC) func = (PFNGLFOGXVPROC)glXGetProcAddress((const GLubyte*)"glFogxv");
  continue;
}

if(strcmp("glFrustumf",call_name)==0){
  (PFNGLFRUSTUMFPROC) func = (PFNGLFRUSTUMFPROC)glXGetProcAddress((const GLubyte*)"glFrustumf");
  continue;
}

if(strcmp("glFrustumx",call_name)==0){
  (PFNGLFRUSTUMXPROC) func = (PFNGLFRUSTUMXPROC)glXGetProcAddress((const GLubyte*)"glFrustumx");
  continue;
}

if(strcmp("glLightModelx",call_name)==0){
  (PFNGLLIGHTMODELXPROC) func = (PFNGLLIGHTMODELXPROC)glXGetProcAddress((const GLubyte*)"glLightModelx");
  continue;
}

if(strcmp("glLightModelxv",call_name)==0){
  (PFNGLLIGHTMODELXVPROC) func = (PFNGLLIGHTMODELXVPROC)glXGetProcAddress((const GLubyte*)"glLightModelxv");
  continue;
}

if(strcmp("glLightx",call_name)==0){
  (PFNGLLIGHTXPROC) func = (PFNGLLIGHTXPROC)glXGetProcAddress((const GLubyte*)"glLightx");
  continue;
}

if(strcmp("glLightxv",call_name)==0){
  (PFNGLLIGHTXVPROC) func = (PFNGLLIGHTXVPROC)glXGetProcAddress((const GLubyte*)"glLightxv");
  continue;
}

if(strcmp("glLineWidthx",call_name)==0){
  (PFNGLLINEWIDTHXPROC) func = (PFNGLLINEWIDTHXPROC)glXGetProcAddress((const GLubyte*)"glLineWidthx");
  continue;
}

if(strcmp("glLoadMatrixx",call_name)==0){
  (PFNGLLOADMATRIXXPROC) func = (PFNGLLOADMATRIXXPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixx");
  continue;
}

if(strcmp("glMaterialx",call_name)==0){
  (PFNGLMATERIALXPROC) func = (PFNGLMATERIALXPROC)glXGetProcAddress((const GLubyte*)"glMaterialx");
  continue;
}

if(strcmp("glMaterialxv",call_name)==0){
  (PFNGLMATERIALXVPROC) func = (PFNGLMATERIALXVPROC)glXGetProcAddress((const GLubyte*)"glMaterialxv");
  continue;
}

if(strcmp("glMultMatrixx",call_name)==0){
  (PFNGLMULTMATRIXXPROC) func = (PFNGLMULTMATRIXXPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixx");
  continue;
}

if(strcmp("glMultiTexCoord4x",call_name)==0){
  (PFNGLMULTITEXCOORD4XPROC) func = (PFNGLMULTITEXCOORD4XPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4x");
  continue;
}

if(strcmp("glNormal3x",call_name)==0){
  (PFNGLNORMAL3XPROC) func = (PFNGLNORMAL3XPROC)glXGetProcAddress((const GLubyte*)"glNormal3x");
  continue;
}

if(strcmp("glOrthof",call_name)==0){
  (PFNGLORTHOFPROC) func = (PFNGLORTHOFPROC)glXGetProcAddress((const GLubyte*)"glOrthof");
  continue;
}

if(strcmp("glOrthox",call_name)==0){
  (PFNGLORTHOXPROC) func = (PFNGLORTHOXPROC)glXGetProcAddress((const GLubyte*)"glOrthox");
  continue;
}

if(strcmp("glPointSizex",call_name)==0){
  (PFNGLPOINTSIZEXPROC) func = (PFNGLPOINTSIZEXPROC)glXGetProcAddress((const GLubyte*)"glPointSizex");
  continue;
}

if(strcmp("glPolygonOffsetx",call_name)==0){
  (PFNGLPOLYGONOFFSETXPROC) func = (PFNGLPOLYGONOFFSETXPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetx");
  continue;
}

if(strcmp("glRotatex",call_name)==0){
  (PFNGLROTATEXPROC) func = (PFNGLROTATEXPROC)glXGetProcAddress((const GLubyte*)"glRotatex");
  continue;
}

if(strcmp("glSampleCoveragex",call_name)==0){
  (PFNGLSAMPLECOVERAGEXPROC) func = (PFNGLSAMPLECOVERAGEXPROC)glXGetProcAddress((const GLubyte*)"glSampleCoveragex");
  continue;
}

if(strcmp("glScalex",call_name)==0){
  (PFNGLSCALEXPROC) func = (PFNGLSCALEXPROC)glXGetProcAddress((const GLubyte*)"glScalex");
  continue;
}

if(strcmp("glTexEnvx",call_name)==0){
  (PFNGLTEXENVXPROC) func = (PFNGLTEXENVXPROC)glXGetProcAddress((const GLubyte*)"glTexEnvx");
  continue;
}

if(strcmp("glTexEnvxv",call_name)==0){
  (PFNGLTEXENVXVPROC) func = (PFNGLTEXENVXVPROC)glXGetProcAddress((const GLubyte*)"glTexEnvxv");
  continue;
}

if(strcmp("glTexParameterx",call_name)==0){
  (PFNGLTEXPARAMETERXPROC) func = (PFNGLTEXPARAMETERXPROC)glXGetProcAddress((const GLubyte*)"glTexParameterx");
  continue;
}

if(strcmp("glTranslatex",call_name)==0){
  (PFNGLTRANSLATEXPROC) func = (PFNGLTRANSLATEXPROC)glXGetProcAddress((const GLubyte*)"glTranslatex");
  continue;
}

if(strcmp("glClipPlanef",call_name)==0){
  (PFNGLCLIPPLANEFPROC) func = (PFNGLCLIPPLANEFPROC)glXGetProcAddress((const GLubyte*)"glClipPlanef");
  continue;
}

if(strcmp("glClipPlanex",call_name)==0){
  (PFNGLCLIPPLANEXPROC) func = (PFNGLCLIPPLANEXPROC)glXGetProcAddress((const GLubyte*)"glClipPlanex");
  continue;
}

if(strcmp("glGetClipPlanef",call_name)==0){
  (PFNGLGETCLIPPLANEFPROC) func = (PFNGLGETCLIPPLANEFPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlanef");
  continue;
}

if(strcmp("glGetClipPlanex",call_name)==0){
  (PFNGLGETCLIPPLANEXPROC) func = (PFNGLGETCLIPPLANEXPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlanex");
  continue;
}

if(strcmp("glGetFixedv",call_name)==0){
  (PFNGLGETFIXEDVPROC) func = (PFNGLGETFIXEDVPROC)glXGetProcAddress((const GLubyte*)"glGetFixedv");
  continue;
}

if(strcmp("glGetLightxv",call_name)==0){
  (PFNGLGETLIGHTXVPROC) func = (PFNGLGETLIGHTXVPROC)glXGetProcAddress((const GLubyte*)"glGetLightxv");
  continue;
}

if(strcmp("glGetMaterialxv",call_name)==0){
  (PFNGLGETMATERIALXVPROC) func = (PFNGLGETMATERIALXVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialxv");
  continue;
}

if(strcmp("glGetTexEnvxv",call_name)==0){
  (PFNGLGETTEXENVXVPROC) func = (PFNGLGETTEXENVXVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnvxv");
  continue;
}

if(strcmp("glGetTexParameterxv",call_name)==0){
  (PFNGLGETTEXPARAMETERXVPROC) func = (PFNGLGETTEXPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterxv");
  continue;
}

if(strcmp("glPointParameterx",call_name)==0){
  (PFNGLPOINTPARAMETERXPROC) func = (PFNGLPOINTPARAMETERXPROC)glXGetProcAddress((const GLubyte*)"glPointParameterx");
  continue;
}

if(strcmp("glPointParameterxv",call_name)==0){
  (PFNGLPOINTPARAMETERXVPROC) func = (PFNGLPOINTPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glPointParameterxv");
  continue;
}

if(strcmp("glTexParameterxv",call_name)==0){
  (PFNGLTEXPARAMETERXVPROC) func = (PFNGLTEXPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterxv");
  continue;
}

if(strcmp("glBlendBarrier",call_name)==0){
  (PFNGLBLENDBARRIERPROC) func = (PFNGLBLENDBARRIERPROC)glXGetProcAddress((const GLubyte*)"glBlendBarrier");
  continue;
}

if(strcmp("glPrimitiveBoundingBox",call_name)==0){
  (PFNGLPRIMITIVEBOUNDINGBOXPROC) func = (PFNGLPRIMITIVEBOUNDINGBOXPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveBoundingBox");
  continue;
}