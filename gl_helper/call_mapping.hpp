/*this file is generated by gen_call_table.py.	please do not modify */
#include<GL/glxext.h>
#include"function.h"

if(strcmp("glNewList",call_name)==0){
  auto func = MakeFunc((PFNGLNEWLISTPROC)glXGetProcAddress((const GLubyte*)"glNewList"));
  continue;
}

if(strcmp("glEndList",call_name)==0){
  auto func = MakeFunc((PFNGLENDLISTPROC)glXGetProcAddress((const GLubyte*)"glEndList"));
  continue;
}

if(strcmp("glCallList",call_name)==0){
  auto func = MakeFunc((PFNGLCALLLISTPROC)glXGetProcAddress((const GLubyte*)"glCallList"));
  continue;
}

if(strcmp("glCallLists",call_name)==0){
  auto func = MakeFunc((PFNGLCALLLISTSPROC)glXGetProcAddress((const GLubyte*)"glCallLists"));
  continue;
}

if(strcmp("glDeleteLists",call_name)==0){
  auto func = MakeFunc((PFNGLDELETELISTSPROC)glXGetProcAddress((const GLubyte*)"glDeleteLists"));
  continue;
}

if(strcmp("glGenLists",call_name)==0){
  auto func = MakeFunc((PFNGLGENLISTSPROC)glXGetProcAddress((const GLubyte*)"glGenLists"));
  continue;
}

if(strcmp("glListBase",call_name)==0){
  auto func = MakeFunc((PFNGLLISTBASEPROC)glXGetProcAddress((const GLubyte*)"glListBase"));
  continue;
}

if(strcmp("glBegin",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINPROC)glXGetProcAddress((const GLubyte*)"glBegin"));
  continue;
}

if(strcmp("glBitmap",call_name)==0){
  auto func = MakeFunc((PFNGLBITMAPPROC)glXGetProcAddress((const GLubyte*)"glBitmap"));
  continue;
}

if(strcmp("glColor3b",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3BPROC)glXGetProcAddress((const GLubyte*)"glColor3b"));
  continue;
}

if(strcmp("glColor3bv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3BVPROC)glXGetProcAddress((const GLubyte*)"glColor3bv"));
  continue;
}

if(strcmp("glColor3d",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3DPROC)glXGetProcAddress((const GLubyte*)"glColor3d"));
  continue;
}

if(strcmp("glColor3dv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3DVPROC)glXGetProcAddress((const GLubyte*)"glColor3dv"));
  continue;
}

if(strcmp("glColor3f",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3FPROC)glXGetProcAddress((const GLubyte*)"glColor3f"));
  continue;
}

if(strcmp("glColor3fv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3FVPROC)glXGetProcAddress((const GLubyte*)"glColor3fv"));
  continue;
}

if(strcmp("glColor3i",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3IPROC)glXGetProcAddress((const GLubyte*)"glColor3i"));
  continue;
}

if(strcmp("glColor3iv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3IVPROC)glXGetProcAddress((const GLubyte*)"glColor3iv"));
  continue;
}

if(strcmp("glColor3s",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3SPROC)glXGetProcAddress((const GLubyte*)"glColor3s"));
  continue;
}

if(strcmp("glColor3sv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3SVPROC)glXGetProcAddress((const GLubyte*)"glColor3sv"));
  continue;
}

if(strcmp("glColor3ub",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3UBPROC)glXGetProcAddress((const GLubyte*)"glColor3ub"));
  continue;
}

if(strcmp("glColor3ubv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3UBVPROC)glXGetProcAddress((const GLubyte*)"glColor3ubv"));
  continue;
}

if(strcmp("glColor3ui",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3UIPROC)glXGetProcAddress((const GLubyte*)"glColor3ui"));
  continue;
}

if(strcmp("glColor3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3UIVPROC)glXGetProcAddress((const GLubyte*)"glColor3uiv"));
  continue;
}

if(strcmp("glColor3us",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3USPROC)glXGetProcAddress((const GLubyte*)"glColor3us"));
  continue;
}

if(strcmp("glColor3usv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR3USVPROC)glXGetProcAddress((const GLubyte*)"glColor3usv"));
  continue;
}

if(strcmp("glColor4b",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4BPROC)glXGetProcAddress((const GLubyte*)"glColor4b"));
  continue;
}

if(strcmp("glColor4bv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4BVPROC)glXGetProcAddress((const GLubyte*)"glColor4bv"));
  continue;
}

if(strcmp("glColor4d",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4DPROC)glXGetProcAddress((const GLubyte*)"glColor4d"));
  continue;
}

if(strcmp("glColor4dv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4DVPROC)glXGetProcAddress((const GLubyte*)"glColor4dv"));
  continue;
}

if(strcmp("glColor4f",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4FPROC)glXGetProcAddress((const GLubyte*)"glColor4f"));
  continue;
}

if(strcmp("glColor4fv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4FVPROC)glXGetProcAddress((const GLubyte*)"glColor4fv"));
  continue;
}

if(strcmp("glColor4i",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4IPROC)glXGetProcAddress((const GLubyte*)"glColor4i"));
  continue;
}

if(strcmp("glColor4iv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4IVPROC)glXGetProcAddress((const GLubyte*)"glColor4iv"));
  continue;
}

if(strcmp("glColor4s",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4SPROC)glXGetProcAddress((const GLubyte*)"glColor4s"));
  continue;
}

if(strcmp("glColor4sv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4SVPROC)glXGetProcAddress((const GLubyte*)"glColor4sv"));
  continue;
}

if(strcmp("glColor4ub",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4UBPROC)glXGetProcAddress((const GLubyte*)"glColor4ub"));
  continue;
}

if(strcmp("glColor4ubv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4UBVPROC)glXGetProcAddress((const GLubyte*)"glColor4ubv"));
  continue;
}

if(strcmp("glColor4ui",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4UIPROC)glXGetProcAddress((const GLubyte*)"glColor4ui"));
  continue;
}

if(strcmp("glColor4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4UIVPROC)glXGetProcAddress((const GLubyte*)"glColor4uiv"));
  continue;
}

if(strcmp("glColor4us",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4USPROC)glXGetProcAddress((const GLubyte*)"glColor4us"));
  continue;
}

if(strcmp("glColor4usv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4USVPROC)glXGetProcAddress((const GLubyte*)"glColor4usv"));
  continue;
}

if(strcmp("glEdgeFlag",call_name)==0){
  auto func = MakeFunc((PFNGLEDGEFLAGPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlag"));
  continue;
}

if(strcmp("glEdgeFlagv",call_name)==0){
  auto func = MakeFunc((PFNGLEDGEFLAGVPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagv"));
  continue;
}

if(strcmp("glEnd",call_name)==0){
  auto func = MakeFunc((PFNGLENDPROC)glXGetProcAddress((const GLubyte*)"glEnd"));
  continue;
}

if(strcmp("glIndexd",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXDPROC)glXGetProcAddress((const GLubyte*)"glIndexd"));
  continue;
}

if(strcmp("glIndexdv",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXDVPROC)glXGetProcAddress((const GLubyte*)"glIndexdv"));
  continue;
}

if(strcmp("glIndexf",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXFPROC)glXGetProcAddress((const GLubyte*)"glIndexf"));
  continue;
}

if(strcmp("glIndexfv",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXFVPROC)glXGetProcAddress((const GLubyte*)"glIndexfv"));
  continue;
}

if(strcmp("glIndexi",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXIPROC)glXGetProcAddress((const GLubyte*)"glIndexi"));
  continue;
}

if(strcmp("glIndexiv",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXIVPROC)glXGetProcAddress((const GLubyte*)"glIndexiv"));
  continue;
}

if(strcmp("glIndexs",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXSPROC)glXGetProcAddress((const GLubyte*)"glIndexs"));
  continue;
}

if(strcmp("glIndexsv",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXSVPROC)glXGetProcAddress((const GLubyte*)"glIndexsv"));
  continue;
}

if(strcmp("glNormal3b",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3BPROC)glXGetProcAddress((const GLubyte*)"glNormal3b"));
  continue;
}

if(strcmp("glNormal3bv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3BVPROC)glXGetProcAddress((const GLubyte*)"glNormal3bv"));
  continue;
}

if(strcmp("glNormal3d",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3DPROC)glXGetProcAddress((const GLubyte*)"glNormal3d"));
  continue;
}

if(strcmp("glNormal3dv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3DVPROC)glXGetProcAddress((const GLubyte*)"glNormal3dv"));
  continue;
}

if(strcmp("glNormal3f",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3FPROC)glXGetProcAddress((const GLubyte*)"glNormal3f"));
  continue;
}

if(strcmp("glNormal3fv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3FVPROC)glXGetProcAddress((const GLubyte*)"glNormal3fv"));
  continue;
}

if(strcmp("glNormal3i",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3IPROC)glXGetProcAddress((const GLubyte*)"glNormal3i"));
  continue;
}

if(strcmp("glNormal3iv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3IVPROC)glXGetProcAddress((const GLubyte*)"glNormal3iv"));
  continue;
}

if(strcmp("glNormal3s",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3SPROC)glXGetProcAddress((const GLubyte*)"glNormal3s"));
  continue;
}

if(strcmp("glNormal3sv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3SVPROC)glXGetProcAddress((const GLubyte*)"glNormal3sv"));
  continue;
}

if(strcmp("glRasterPos2d",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2d"));
  continue;
}

if(strcmp("glRasterPos2dv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2dv"));
  continue;
}

if(strcmp("glRasterPos2f",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2f"));
  continue;
}

if(strcmp("glRasterPos2fv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2fv"));
  continue;
}

if(strcmp("glRasterPos2i",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2i"));
  continue;
}

if(strcmp("glRasterPos2iv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2iv"));
  continue;
}

if(strcmp("glRasterPos2s",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2s"));
  continue;
}

if(strcmp("glRasterPos2sv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS2SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos2sv"));
  continue;
}

if(strcmp("glRasterPos3d",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3d"));
  continue;
}

if(strcmp("glRasterPos3dv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3dv"));
  continue;
}

if(strcmp("glRasterPos3f",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3f"));
  continue;
}

if(strcmp("glRasterPos3fv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3fv"));
  continue;
}

if(strcmp("glRasterPos3i",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3i"));
  continue;
}

if(strcmp("glRasterPos3iv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3iv"));
  continue;
}

if(strcmp("glRasterPos3s",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3s"));
  continue;
}

if(strcmp("glRasterPos3sv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS3SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos3sv"));
  continue;
}

if(strcmp("glRasterPos4d",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4DPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4d"));
  continue;
}

if(strcmp("glRasterPos4dv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4DVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4dv"));
  continue;
}

if(strcmp("glRasterPos4f",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4FPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4f"));
  continue;
}

if(strcmp("glRasterPos4fv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4FVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4fv"));
  continue;
}

if(strcmp("glRasterPos4i",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4IPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4i"));
  continue;
}

if(strcmp("glRasterPos4iv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4IVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4iv"));
  continue;
}

if(strcmp("glRasterPos4s",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4SPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4s"));
  continue;
}

if(strcmp("glRasterPos4sv",call_name)==0){
  auto func = MakeFunc((PFNGLRASTERPOS4SVPROC)glXGetProcAddress((const GLubyte*)"glRasterPos4sv"));
  continue;
}

if(strcmp("glRectd",call_name)==0){
  auto func = MakeFunc((PFNGLRECTDPROC)glXGetProcAddress((const GLubyte*)"glRectd"));
  continue;
}

if(strcmp("glRectdv",call_name)==0){
  auto func = MakeFunc((PFNGLRECTDVPROC)glXGetProcAddress((const GLubyte*)"glRectdv"));
  continue;
}

if(strcmp("glRectf",call_name)==0){
  auto func = MakeFunc((PFNGLRECTFPROC)glXGetProcAddress((const GLubyte*)"glRectf"));
  continue;
}

if(strcmp("glRectfv",call_name)==0){
  auto func = MakeFunc((PFNGLRECTFVPROC)glXGetProcAddress((const GLubyte*)"glRectfv"));
  continue;
}

if(strcmp("glRecti",call_name)==0){
  auto func = MakeFunc((PFNGLRECTIPROC)glXGetProcAddress((const GLubyte*)"glRecti"));
  continue;
}

if(strcmp("glRectiv",call_name)==0){
  auto func = MakeFunc((PFNGLRECTIVPROC)glXGetProcAddress((const GLubyte*)"glRectiv"));
  continue;
}

if(strcmp("glRects",call_name)==0){
  auto func = MakeFunc((PFNGLRECTSPROC)glXGetProcAddress((const GLubyte*)"glRects"));
  continue;
}

if(strcmp("glRectsv",call_name)==0){
  auto func = MakeFunc((PFNGLRECTSVPROC)glXGetProcAddress((const GLubyte*)"glRectsv"));
  continue;
}

if(strcmp("glTexCoord1d",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1d"));
  continue;
}

if(strcmp("glTexCoord1dv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1dv"));
  continue;
}

if(strcmp("glTexCoord1f",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1f"));
  continue;
}

if(strcmp("glTexCoord1fv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1fv"));
  continue;
}

if(strcmp("glTexCoord1i",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1i"));
  continue;
}

if(strcmp("glTexCoord1iv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1iv"));
  continue;
}

if(strcmp("glTexCoord1s",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1s"));
  continue;
}

if(strcmp("glTexCoord1sv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD1SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord1sv"));
  continue;
}

if(strcmp("glTexCoord2d",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2d"));
  continue;
}

if(strcmp("glTexCoord2dv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2dv"));
  continue;
}

if(strcmp("glTexCoord2f",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2f"));
  continue;
}

if(strcmp("glTexCoord2fv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2fv"));
  continue;
}

if(strcmp("glTexCoord2i",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2i"));
  continue;
}

if(strcmp("glTexCoord2iv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2iv"));
  continue;
}

if(strcmp("glTexCoord2s",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2s"));
  continue;
}

if(strcmp("glTexCoord2sv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD2SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord2sv"));
  continue;
}

if(strcmp("glTexCoord3d",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3d"));
  continue;
}

if(strcmp("glTexCoord3dv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3dv"));
  continue;
}

if(strcmp("glTexCoord3f",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3f"));
  continue;
}

if(strcmp("glTexCoord3fv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3fv"));
  continue;
}

if(strcmp("glTexCoord3i",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3i"));
  continue;
}

if(strcmp("glTexCoord3iv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3iv"));
  continue;
}

if(strcmp("glTexCoord3s",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3s"));
  continue;
}

if(strcmp("glTexCoord3sv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD3SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord3sv"));
  continue;
}

if(strcmp("glTexCoord4d",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4DPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4d"));
  continue;
}

if(strcmp("glTexCoord4dv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4DVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4dv"));
  continue;
}

if(strcmp("glTexCoord4f",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4FPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4f"));
  continue;
}

if(strcmp("glTexCoord4fv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4FVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4fv"));
  continue;
}

if(strcmp("glTexCoord4i",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4IPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4i"));
  continue;
}

if(strcmp("glTexCoord4iv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4IVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4iv"));
  continue;
}

if(strcmp("glTexCoord4s",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4SPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4s"));
  continue;
}

if(strcmp("glTexCoord4sv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORD4SVPROC)glXGetProcAddress((const GLubyte*)"glTexCoord4sv"));
  continue;
}

if(strcmp("glVertex2d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2DPROC)glXGetProcAddress((const GLubyte*)"glVertex2d"));
  continue;
}

if(strcmp("glVertex2dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2DVPROC)glXGetProcAddress((const GLubyte*)"glVertex2dv"));
  continue;
}

if(strcmp("glVertex2f",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2FPROC)glXGetProcAddress((const GLubyte*)"glVertex2f"));
  continue;
}

if(strcmp("glVertex2fv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2FVPROC)glXGetProcAddress((const GLubyte*)"glVertex2fv"));
  continue;
}

if(strcmp("glVertex2i",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2IPROC)glXGetProcAddress((const GLubyte*)"glVertex2i"));
  continue;
}

if(strcmp("glVertex2iv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2IVPROC)glXGetProcAddress((const GLubyte*)"glVertex2iv"));
  continue;
}

if(strcmp("glVertex2s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2SPROC)glXGetProcAddress((const GLubyte*)"glVertex2s"));
  continue;
}

if(strcmp("glVertex2sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX2SVPROC)glXGetProcAddress((const GLubyte*)"glVertex2sv"));
  continue;
}

if(strcmp("glVertex3d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3DPROC)glXGetProcAddress((const GLubyte*)"glVertex3d"));
  continue;
}

if(strcmp("glVertex3dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3DVPROC)glXGetProcAddress((const GLubyte*)"glVertex3dv"));
  continue;
}

if(strcmp("glVertex3f",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3FPROC)glXGetProcAddress((const GLubyte*)"glVertex3f"));
  continue;
}

if(strcmp("glVertex3fv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3FVPROC)glXGetProcAddress((const GLubyte*)"glVertex3fv"));
  continue;
}

if(strcmp("glVertex3i",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3IPROC)glXGetProcAddress((const GLubyte*)"glVertex3i"));
  continue;
}

if(strcmp("glVertex3iv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3IVPROC)glXGetProcAddress((const GLubyte*)"glVertex3iv"));
  continue;
}

if(strcmp("glVertex3s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3SPROC)glXGetProcAddress((const GLubyte*)"glVertex3s"));
  continue;
}

if(strcmp("glVertex3sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX3SVPROC)glXGetProcAddress((const GLubyte*)"glVertex3sv"));
  continue;
}

if(strcmp("glVertex4d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4DPROC)glXGetProcAddress((const GLubyte*)"glVertex4d"));
  continue;
}

if(strcmp("glVertex4dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4DVPROC)glXGetProcAddress((const GLubyte*)"glVertex4dv"));
  continue;
}

if(strcmp("glVertex4f",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4FPROC)glXGetProcAddress((const GLubyte*)"glVertex4f"));
  continue;
}

if(strcmp("glVertex4fv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4FVPROC)glXGetProcAddress((const GLubyte*)"glVertex4fv"));
  continue;
}

if(strcmp("glVertex4i",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4IPROC)glXGetProcAddress((const GLubyte*)"glVertex4i"));
  continue;
}

if(strcmp("glVertex4iv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4IVPROC)glXGetProcAddress((const GLubyte*)"glVertex4iv"));
  continue;
}

if(strcmp("glVertex4s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4SPROC)glXGetProcAddress((const GLubyte*)"glVertex4s"));
  continue;
}

if(strcmp("glVertex4sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEX4SVPROC)glXGetProcAddress((const GLubyte*)"glVertex4sv"));
  continue;
}

if(strcmp("glClipPlane",call_name)==0){
  auto func = MakeFunc((PFNGLCLIPPLANEPROC)glXGetProcAddress((const GLubyte*)"glClipPlane"));
  continue;
}

if(strcmp("glColorMaterial",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORMATERIALPROC)glXGetProcAddress((const GLubyte*)"glColorMaterial"));
  continue;
}

if(strcmp("glCullFace",call_name)==0){
  auto func = MakeFunc((PFNGLCULLFACEPROC)glXGetProcAddress((const GLubyte*)"glCullFace"));
  continue;
}

if(strcmp("glFogf",call_name)==0){
  auto func = MakeFunc((PFNGLFOGFPROC)glXGetProcAddress((const GLubyte*)"glFogf"));
  continue;
}

if(strcmp("glFogfv",call_name)==0){
  auto func = MakeFunc((PFNGLFOGFVPROC)glXGetProcAddress((const GLubyte*)"glFogfv"));
  continue;
}

if(strcmp("glFogi",call_name)==0){
  auto func = MakeFunc((PFNGLFOGIPROC)glXGetProcAddress((const GLubyte*)"glFogi"));
  continue;
}

if(strcmp("glFogiv",call_name)==0){
  auto func = MakeFunc((PFNGLFOGIVPROC)glXGetProcAddress((const GLubyte*)"glFogiv"));
  continue;
}

if(strcmp("glFrontFace",call_name)==0){
  auto func = MakeFunc((PFNGLFRONTFACEPROC)glXGetProcAddress((const GLubyte*)"glFrontFace"));
  continue;
}

if(strcmp("glHint",call_name)==0){
  auto func = MakeFunc((PFNGLHINTPROC)glXGetProcAddress((const GLubyte*)"glHint"));
  continue;
}

if(strcmp("glLightf",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTFPROC)glXGetProcAddress((const GLubyte*)"glLightf"));
  continue;
}

if(strcmp("glLightfv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTFVPROC)glXGetProcAddress((const GLubyte*)"glLightfv"));
  continue;
}

if(strcmp("glLighti",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTIPROC)glXGetProcAddress((const GLubyte*)"glLighti"));
  continue;
}

if(strcmp("glLightiv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTIVPROC)glXGetProcAddress((const GLubyte*)"glLightiv"));
  continue;
}

if(strcmp("glLightModelf",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELFPROC)glXGetProcAddress((const GLubyte*)"glLightModelf"));
  continue;
}

if(strcmp("glLightModelfv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELFVPROC)glXGetProcAddress((const GLubyte*)"glLightModelfv"));
  continue;
}

if(strcmp("glLightModeli",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELIPROC)glXGetProcAddress((const GLubyte*)"glLightModeli"));
  continue;
}

if(strcmp("glLightModeliv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELIVPROC)glXGetProcAddress((const GLubyte*)"glLightModeliv"));
  continue;
}

if(strcmp("glLineStipple",call_name)==0){
  auto func = MakeFunc((PFNGLLINESTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glLineStipple"));
  continue;
}

if(strcmp("glLineWidth",call_name)==0){
  auto func = MakeFunc((PFNGLLINEWIDTHPROC)glXGetProcAddress((const GLubyte*)"glLineWidth"));
  continue;
}

if(strcmp("glMaterialf",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALFPROC)glXGetProcAddress((const GLubyte*)"glMaterialf"));
  continue;
}

if(strcmp("glMaterialfv",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALFVPROC)glXGetProcAddress((const GLubyte*)"glMaterialfv"));
  continue;
}

if(strcmp("glMateriali",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALIPROC)glXGetProcAddress((const GLubyte*)"glMateriali"));
  continue;
}

if(strcmp("glMaterialiv",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALIVPROC)glXGetProcAddress((const GLubyte*)"glMaterialiv"));
  continue;
}

if(strcmp("glPointSize",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTSIZEPROC)glXGetProcAddress((const GLubyte*)"glPointSize"));
  continue;
}

if(strcmp("glPolygonMode",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONMODEPROC)glXGetProcAddress((const GLubyte*)"glPolygonMode"));
  continue;
}

if(strcmp("glPolygonStipple",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONSTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glPolygonStipple"));
  continue;
}

if(strcmp("glScissor",call_name)==0){
  auto func = MakeFunc((PFNGLSCISSORPROC)glXGetProcAddress((const GLubyte*)"glScissor"));
  continue;
}

if(strcmp("glShadeModel",call_name)==0){
  auto func = MakeFunc((PFNGLSHADEMODELPROC)glXGetProcAddress((const GLubyte*)"glShadeModel"));
  continue;
}

if(strcmp("glTexParameterf",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glTexParameterf"));
  continue;
}

if(strcmp("glTexParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterfv"));
  continue;
}

if(strcmp("glTexParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glTexParameteri"));
  continue;
}

if(strcmp("glTexParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameteriv"));
  continue;
}

if(strcmp("glTexImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexImage1D"));
  continue;
}

if(strcmp("glTexImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexImage2D"));
  continue;
}

if(strcmp("glTexEnvf",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVFPROC)glXGetProcAddress((const GLubyte*)"glTexEnvf"));
  continue;
}

if(strcmp("glTexEnvfv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVFVPROC)glXGetProcAddress((const GLubyte*)"glTexEnvfv"));
  continue;
}

if(strcmp("glTexEnvi",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVIPROC)glXGetProcAddress((const GLubyte*)"glTexEnvi"));
  continue;
}

if(strcmp("glTexEnviv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVIVPROC)glXGetProcAddress((const GLubyte*)"glTexEnviv"));
  continue;
}

if(strcmp("glTexGend",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENDPROC)glXGetProcAddress((const GLubyte*)"glTexGend"));
  continue;
}

if(strcmp("glTexGendv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENDVPROC)glXGetProcAddress((const GLubyte*)"glTexGendv"));
  continue;
}

if(strcmp("glTexGenf",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENFPROC)glXGetProcAddress((const GLubyte*)"glTexGenf"));
  continue;
}

if(strcmp("glTexGenfv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENFVPROC)glXGetProcAddress((const GLubyte*)"glTexGenfv"));
  continue;
}

if(strcmp("glTexGeni",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENIPROC)glXGetProcAddress((const GLubyte*)"glTexGeni"));
  continue;
}

if(strcmp("glTexGeniv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENIVPROC)glXGetProcAddress((const GLubyte*)"glTexGeniv"));
  continue;
}

if(strcmp("glFeedbackBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLFEEDBACKBUFFERPROC)glXGetProcAddress((const GLubyte*)"glFeedbackBuffer"));
  continue;
}

if(strcmp("glSelectBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLSELECTBUFFERPROC)glXGetProcAddress((const GLubyte*)"glSelectBuffer"));
  continue;
}

if(strcmp("glRenderMode",call_name)==0){
  auto func = MakeFunc((PFNGLRENDERMODEPROC)glXGetProcAddress((const GLubyte*)"glRenderMode"));
  continue;
}

if(strcmp("glInitNames",call_name)==0){
  auto func = MakeFunc((PFNGLINITNAMESPROC)glXGetProcAddress((const GLubyte*)"glInitNames"));
  continue;
}

if(strcmp("glLoadName",call_name)==0){
  auto func = MakeFunc((PFNGLLOADNAMEPROC)glXGetProcAddress((const GLubyte*)"glLoadName"));
  continue;
}

if(strcmp("glPassThrough",call_name)==0){
  auto func = MakeFunc((PFNGLPASSTHROUGHPROC)glXGetProcAddress((const GLubyte*)"glPassThrough"));
  continue;
}

if(strcmp("glPopName",call_name)==0){
  auto func = MakeFunc((PFNGLPOPNAMEPROC)glXGetProcAddress((const GLubyte*)"glPopName"));
  continue;
}

if(strcmp("glPushName",call_name)==0){
  auto func = MakeFunc((PFNGLPUSHNAMEPROC)glXGetProcAddress((const GLubyte*)"glPushName"));
  continue;
}

if(strcmp("glDrawBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWBUFFERPROC)glXGetProcAddress((const GLubyte*)"glDrawBuffer"));
  continue;
}

if(strcmp("glClear",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARPROC)glXGetProcAddress((const GLubyte*)"glClear"));
  continue;
}

if(strcmp("glClearAccum",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARACCUMPROC)glXGetProcAddress((const GLubyte*)"glClearAccum"));
  continue;
}

if(strcmp("glClearIndex",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARINDEXPROC)glXGetProcAddress((const GLubyte*)"glClearIndex"));
  continue;
}

if(strcmp("glClearColor",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARCOLORPROC)glXGetProcAddress((const GLubyte*)"glClearColor"));
  continue;
}

if(strcmp("glClearStencil",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARSTENCILPROC)glXGetProcAddress((const GLubyte*)"glClearStencil"));
  continue;
}

if(strcmp("glClearDepth",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARDEPTHPROC)glXGetProcAddress((const GLubyte*)"glClearDepth"));
  continue;
}

if(strcmp("glStencilMask",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILMASKPROC)glXGetProcAddress((const GLubyte*)"glStencilMask"));
  continue;
}

if(strcmp("glColorMask",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORMASKPROC)glXGetProcAddress((const GLubyte*)"glColorMask"));
  continue;
}

if(strcmp("glDepthMask",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHMASKPROC)glXGetProcAddress((const GLubyte*)"glDepthMask"));
  continue;
}

if(strcmp("glIndexMask",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXMASKPROC)glXGetProcAddress((const GLubyte*)"glIndexMask"));
  continue;
}

if(strcmp("glAccum",call_name)==0){
  auto func = MakeFunc((PFNGLACCUMPROC)glXGetProcAddress((const GLubyte*)"glAccum"));
  continue;
}

if(strcmp("glDisable",call_name)==0){
  auto func = MakeFunc((PFNGLDISABLEPROC)glXGetProcAddress((const GLubyte*)"glDisable"));
  continue;
}

if(strcmp("glEnable",call_name)==0){
  auto func = MakeFunc((PFNGLENABLEPROC)glXGetProcAddress((const GLubyte*)"glEnable"));
  continue;
}

if(strcmp("glFinish",call_name)==0){
  auto func = MakeFunc((PFNGLFINISHPROC)glXGetProcAddress((const GLubyte*)"glFinish"));
  continue;
}

if(strcmp("glFlush",call_name)==0){
  auto func = MakeFunc((PFNGLFLUSHPROC)glXGetProcAddress((const GLubyte*)"glFlush"));
  continue;
}

if(strcmp("glPopAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLPOPATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPopAttrib"));
  continue;
}

if(strcmp("glPushAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLPUSHATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPushAttrib"));
  continue;
}

if(strcmp("glMap1d",call_name)==0){
  auto func = MakeFunc((PFNGLMAP1DPROC)glXGetProcAddress((const GLubyte*)"glMap1d"));
  continue;
}

if(strcmp("glMap1f",call_name)==0){
  auto func = MakeFunc((PFNGLMAP1FPROC)glXGetProcAddress((const GLubyte*)"glMap1f"));
  continue;
}

if(strcmp("glMap2d",call_name)==0){
  auto func = MakeFunc((PFNGLMAP2DPROC)glXGetProcAddress((const GLubyte*)"glMap2d"));
  continue;
}

if(strcmp("glMap2f",call_name)==0){
  auto func = MakeFunc((PFNGLMAP2FPROC)glXGetProcAddress((const GLubyte*)"glMap2f"));
  continue;
}

if(strcmp("glMapGrid1d",call_name)==0){
  auto func = MakeFunc((PFNGLMAPGRID1DPROC)glXGetProcAddress((const GLubyte*)"glMapGrid1d"));
  continue;
}

if(strcmp("glMapGrid1f",call_name)==0){
  auto func = MakeFunc((PFNGLMAPGRID1FPROC)glXGetProcAddress((const GLubyte*)"glMapGrid1f"));
  continue;
}

if(strcmp("glMapGrid2d",call_name)==0){
  auto func = MakeFunc((PFNGLMAPGRID2DPROC)glXGetProcAddress((const GLubyte*)"glMapGrid2d"));
  continue;
}

if(strcmp("glMapGrid2f",call_name)==0){
  auto func = MakeFunc((PFNGLMAPGRID2FPROC)glXGetProcAddress((const GLubyte*)"glMapGrid2f"));
  continue;
}

if(strcmp("glEvalCoord1d",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1d"));
  continue;
}

if(strcmp("glEvalCoord1dv",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1dv"));
  continue;
}

if(strcmp("glEvalCoord1f",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD1FPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1f"));
  continue;
}

if(strcmp("glEvalCoord1fv",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD1FVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord1fv"));
  continue;
}

if(strcmp("glEvalCoord2d",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2d"));
  continue;
}

if(strcmp("glEvalCoord2dv",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2dv"));
  continue;
}

if(strcmp("glEvalCoord2f",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD2FPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2f"));
  continue;
}

if(strcmp("glEvalCoord2fv",call_name)==0){
  auto func = MakeFunc((PFNGLEVALCOORD2FVPROC)glXGetProcAddress((const GLubyte*)"glEvalCoord2fv"));
  continue;
}

if(strcmp("glEvalMesh1",call_name)==0){
  auto func = MakeFunc((PFNGLEVALMESH1PROC)glXGetProcAddress((const GLubyte*)"glEvalMesh1"));
  continue;
}

if(strcmp("glEvalPoint1",call_name)==0){
  auto func = MakeFunc((PFNGLEVALPOINT1PROC)glXGetProcAddress((const GLubyte*)"glEvalPoint1"));
  continue;
}

if(strcmp("glEvalMesh2",call_name)==0){
  auto func = MakeFunc((PFNGLEVALMESH2PROC)glXGetProcAddress((const GLubyte*)"glEvalMesh2"));
  continue;
}

if(strcmp("glEvalPoint2",call_name)==0){
  auto func = MakeFunc((PFNGLEVALPOINT2PROC)glXGetProcAddress((const GLubyte*)"glEvalPoint2"));
  continue;
}

if(strcmp("glAlphaFunc",call_name)==0){
  auto func = MakeFunc((PFNGLALPHAFUNCPROC)glXGetProcAddress((const GLubyte*)"glAlphaFunc"));
  continue;
}

if(strcmp("glBlendFunc",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDFUNCPROC)glXGetProcAddress((const GLubyte*)"glBlendFunc"));
  continue;
}

if(strcmp("glLogicOp",call_name)==0){
  auto func = MakeFunc((PFNGLLOGICOPPROC)glXGetProcAddress((const GLubyte*)"glLogicOp"));
  continue;
}

if(strcmp("glStencilFunc",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILFUNCPROC)glXGetProcAddress((const GLubyte*)"glStencilFunc"));
  continue;
}

if(strcmp("glStencilOp",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILOPPROC)glXGetProcAddress((const GLubyte*)"glStencilOp"));
  continue;
}

if(strcmp("glDepthFunc",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHFUNCPROC)glXGetProcAddress((const GLubyte*)"glDepthFunc"));
  continue;
}

if(strcmp("glPixelZoom",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELZOOMPROC)glXGetProcAddress((const GLubyte*)"glPixelZoom"));
  continue;
}

if(strcmp("glPixelTransferf",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELTRANSFERFPROC)glXGetProcAddress((const GLubyte*)"glPixelTransferf"));
  continue;
}

if(strcmp("glPixelTransferi",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELTRANSFERIPROC)glXGetProcAddress((const GLubyte*)"glPixelTransferi"));
  continue;
}

if(strcmp("glPixelStoref",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELSTOREFPROC)glXGetProcAddress((const GLubyte*)"glPixelStoref"));
  continue;
}

if(strcmp("glPixelStorei",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELSTOREIPROC)glXGetProcAddress((const GLubyte*)"glPixelStorei"));
  continue;
}

if(strcmp("glPixelMapfv",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELMAPFVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapfv"));
  continue;
}

if(strcmp("glPixelMapuiv",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELMAPUIVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapuiv"));
  continue;
}

if(strcmp("glPixelMapusv",call_name)==0){
  auto func = MakeFunc((PFNGLPIXELMAPUSVPROC)glXGetProcAddress((const GLubyte*)"glPixelMapusv"));
  continue;
}

if(strcmp("glReadBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLREADBUFFERPROC)glXGetProcAddress((const GLubyte*)"glReadBuffer"));
  continue;
}

if(strcmp("glCopyPixels",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYPIXELSPROC)glXGetProcAddress((const GLubyte*)"glCopyPixels"));
  continue;
}

if(strcmp("glReadPixels",call_name)==0){
  auto func = MakeFunc((PFNGLREADPIXELSPROC)glXGetProcAddress((const GLubyte*)"glReadPixels"));
  continue;
}

if(strcmp("glDrawPixels",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWPIXELSPROC)glXGetProcAddress((const GLubyte*)"glDrawPixels"));
  continue;
}

if(strcmp("glGetBooleanv",call_name)==0){
  auto func = MakeFunc((PFNGLGETBOOLEANVPROC)glXGetProcAddress((const GLubyte*)"glGetBooleanv"));
  continue;
}

if(strcmp("glGetClipPlane",call_name)==0){
  auto func = MakeFunc((PFNGLGETCLIPPLANEPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlane"));
  continue;
}

if(strcmp("glGetDoublev",call_name)==0){
  auto func = MakeFunc((PFNGLGETDOUBLEVPROC)glXGetProcAddress((const GLubyte*)"glGetDoublev"));
  continue;
}

if(strcmp("glGetError",call_name)==0){
  auto func = MakeFunc((PFNGLGETERRORPROC)glXGetProcAddress((const GLubyte*)"glGetError"));
  continue;
}

if(strcmp("glGetFloatv",call_name)==0){
  auto func = MakeFunc((PFNGLGETFLOATVPROC)glXGetProcAddress((const GLubyte*)"glGetFloatv"));
  continue;
}

if(strcmp("glGetIntegerv",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTEGERVPROC)glXGetProcAddress((const GLubyte*)"glGetIntegerv"));
  continue;
}

if(strcmp("glGetLightfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETLIGHTFVPROC)glXGetProcAddress((const GLubyte*)"glGetLightfv"));
  continue;
}

if(strcmp("glGetLightiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETLIGHTIVPROC)glXGetProcAddress((const GLubyte*)"glGetLightiv"));
  continue;
}

if(strcmp("glGetMapdv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMAPDVPROC)glXGetProcAddress((const GLubyte*)"glGetMapdv"));
  continue;
}

if(strcmp("glGetMapfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMAPFVPROC)glXGetProcAddress((const GLubyte*)"glGetMapfv"));
  continue;
}

if(strcmp("glGetMapiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMAPIVPROC)glXGetProcAddress((const GLubyte*)"glGetMapiv"));
  continue;
}

if(strcmp("glGetMaterialfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMATERIALFVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialfv"));
  continue;
}

if(strcmp("glGetMaterialiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMATERIALIVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialiv"));
  continue;
}

if(strcmp("glGetPixelMapfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPIXELMAPFVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapfv"));
  continue;
}

if(strcmp("glGetPixelMapuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPIXELMAPUIVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapuiv"));
  continue;
}

if(strcmp("glGetPixelMapusv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPIXELMAPUSVPROC)glXGetProcAddress((const GLubyte*)"glGetPixelMapusv"));
  continue;
}

if(strcmp("glGetPolygonStipple",call_name)==0){
  auto func = MakeFunc((PFNGLGETPOLYGONSTIPPLEPROC)glXGetProcAddress((const GLubyte*)"glGetPolygonStipple"));
  continue;
}

if(strcmp("glGetString",call_name)==0){
  auto func = MakeFunc((PFNGLGETSTRINGPROC)glXGetProcAddress((const GLubyte*)"glGetString"));
  continue;
}

if(strcmp("glGetTexEnvfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXENVFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnvfv"));
  continue;
}

if(strcmp("glGetTexEnviv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXENVIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnviv"));
  continue;
}

if(strcmp("glGetTexGendv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXGENDVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGendv"));
  continue;
}

if(strcmp("glGetTexGenfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXGENFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGenfv"));
  continue;
}

if(strcmp("glGetTexGeniv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXGENIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexGeniv"));
  continue;
}

if(strcmp("glGetTexImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTexImage"));
  continue;
}

if(strcmp("glGetTexParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterfv"));
  continue;
}

if(strcmp("glGetTexParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameteriv"));
  continue;
}

if(strcmp("glGetTexLevelParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXLEVELPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTexLevelParameterfv"));
  continue;
}

if(strcmp("glGetTexLevelParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXLEVELPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexLevelParameteriv"));
  continue;
}

if(strcmp("glIsEnabled",call_name)==0){
  auto func = MakeFunc((PFNGLISENABLEDPROC)glXGetProcAddress((const GLubyte*)"glIsEnabled"));
  continue;
}

if(strcmp("glIsList",call_name)==0){
  auto func = MakeFunc((PFNGLISLISTPROC)glXGetProcAddress((const GLubyte*)"glIsList"));
  continue;
}

if(strcmp("glDepthRange",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEPROC)glXGetProcAddress((const GLubyte*)"glDepthRange"));
  continue;
}

if(strcmp("glFrustum",call_name)==0){
  auto func = MakeFunc((PFNGLFRUSTUMPROC)glXGetProcAddress((const GLubyte*)"glFrustum"));
  continue;
}

if(strcmp("glLoadIdentity",call_name)==0){
  auto func = MakeFunc((PFNGLLOADIDENTITYPROC)glXGetProcAddress((const GLubyte*)"glLoadIdentity"));
  continue;
}

if(strcmp("glLoadMatrixf",call_name)==0){
  auto func = MakeFunc((PFNGLLOADMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixf"));
  continue;
}

if(strcmp("glLoadMatrixd",call_name)==0){
  auto func = MakeFunc((PFNGLLOADMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixd"));
  continue;
}

if(strcmp("glMatrixMode",call_name)==0){
  auto func = MakeFunc((PFNGLMATRIXMODEPROC)glXGetProcAddress((const GLubyte*)"glMatrixMode"));
  continue;
}

if(strcmp("glMultMatrixf",call_name)==0){
  auto func = MakeFunc((PFNGLMULTMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixf"));
  continue;
}

if(strcmp("glMultMatrixd",call_name)==0){
  auto func = MakeFunc((PFNGLMULTMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixd"));
  continue;
}

if(strcmp("glOrtho",call_name)==0){
  auto func = MakeFunc((PFNGLORTHOPROC)glXGetProcAddress((const GLubyte*)"glOrtho"));
  continue;
}

if(strcmp("glPopMatrix",call_name)==0){
  auto func = MakeFunc((PFNGLPOPMATRIXPROC)glXGetProcAddress((const GLubyte*)"glPopMatrix"));
  continue;
}

if(strcmp("glPushMatrix",call_name)==0){
  auto func = MakeFunc((PFNGLPUSHMATRIXPROC)glXGetProcAddress((const GLubyte*)"glPushMatrix"));
  continue;
}

if(strcmp("glRotated",call_name)==0){
  auto func = MakeFunc((PFNGLROTATEDPROC)glXGetProcAddress((const GLubyte*)"glRotated"));
  continue;
}

if(strcmp("glRotatef",call_name)==0){
  auto func = MakeFunc((PFNGLROTATEFPROC)glXGetProcAddress((const GLubyte*)"glRotatef"));
  continue;
}

if(strcmp("glScaled",call_name)==0){
  auto func = MakeFunc((PFNGLSCALEDPROC)glXGetProcAddress((const GLubyte*)"glScaled"));
  continue;
}

if(strcmp("glScalef",call_name)==0){
  auto func = MakeFunc((PFNGLSCALEFPROC)glXGetProcAddress((const GLubyte*)"glScalef"));
  continue;
}

if(strcmp("glTranslated",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSLATEDPROC)glXGetProcAddress((const GLubyte*)"glTranslated"));
  continue;
}

if(strcmp("glTranslatef",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSLATEFPROC)glXGetProcAddress((const GLubyte*)"glTranslatef"));
  continue;
}

if(strcmp("glViewport",call_name)==0){
  auto func = MakeFunc((PFNGLVIEWPORTPROC)glXGetProcAddress((const GLubyte*)"glViewport"));
  continue;
}

if(strcmp("glArrayElement",call_name)==0){
  auto func = MakeFunc((PFNGLARRAYELEMENTPROC)glXGetProcAddress((const GLubyte*)"glArrayElement"));
  continue;
}

if(strcmp("glBindTexture",call_name)==0){
  auto func = MakeFunc((PFNGLBINDTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glBindTexture"));
  continue;
}

if(strcmp("glColorPointer",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORPOINTERPROC)glXGetProcAddress((const GLubyte*)"glColorPointer"));
  continue;
}

if(strcmp("glDisableClientState",call_name)==0){
  auto func = MakeFunc((PFNGLDISABLECLIENTSTATEPROC)glXGetProcAddress((const GLubyte*)"glDisableClientState"));
  continue;
}

if(strcmp("glDrawArrays",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWARRAYSPROC)glXGetProcAddress((const GLubyte*)"glDrawArrays"));
  continue;
}

if(strcmp("glDrawElements",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSPROC)glXGetProcAddress((const GLubyte*)"glDrawElements"));
  continue;
}

if(strcmp("glEdgeFlagPointer",call_name)==0){
  auto func = MakeFunc((PFNGLEDGEFLAGPOINTERPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagPointer"));
  continue;
}

if(strcmp("glEnableClientState",call_name)==0){
  auto func = MakeFunc((PFNGLENABLECLIENTSTATEPROC)glXGetProcAddress((const GLubyte*)"glEnableClientState"));
  continue;
}

if(strcmp("glIndexPointer",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXPOINTERPROC)glXGetProcAddress((const GLubyte*)"glIndexPointer"));
  continue;
}

if(strcmp("glIndexub",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXUBPROC)glXGetProcAddress((const GLubyte*)"glIndexub"));
  continue;
}

if(strcmp("glIndexubv",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXUBVPROC)glXGetProcAddress((const GLubyte*)"glIndexubv"));
  continue;
}

if(strcmp("glInterleavedArrays",call_name)==0){
  auto func = MakeFunc((PFNGLINTERLEAVEDARRAYSPROC)glXGetProcAddress((const GLubyte*)"glInterleavedArrays"));
  continue;
}

if(strcmp("glNormalPointer",call_name)==0){
  auto func = MakeFunc((PFNGLNORMALPOINTERPROC)glXGetProcAddress((const GLubyte*)"glNormalPointer"));
  continue;
}

if(strcmp("glPolygonOffset",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONOFFSETPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffset"));
  continue;
}

if(strcmp("glTexCoordPointer",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDPOINTERPROC)glXGetProcAddress((const GLubyte*)"glTexCoordPointer"));
  continue;
}

if(strcmp("glVertexPointer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexPointer"));
  continue;
}

if(strcmp("glAreTexturesResident",call_name)==0){
  auto func = MakeFunc((PFNGLARETEXTURESRESIDENTPROC)glXGetProcAddress((const GLubyte*)"glAreTexturesResident"));
  continue;
}

if(strcmp("glCopyTexImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexImage1D"));
  continue;
}

if(strcmp("glCopyTexImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexImage2D"));
  continue;
}

if(strcmp("glCopyTexSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage1D"));
  continue;
}

if(strcmp("glCopyTexSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage2D"));
  continue;
}

if(strcmp("glDeleteTextures",call_name)==0){
  auto func = MakeFunc((PFNGLDELETETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glDeleteTextures"));
  continue;
}

if(strcmp("glGenTextures",call_name)==0){
  auto func = MakeFunc((PFNGLGENTEXTURESPROC)glXGetProcAddress((const GLubyte*)"glGenTextures"));
  continue;
}

if(strcmp("glGetPointerv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetPointerv"));
  continue;
}

if(strcmp("glIsTexture",call_name)==0){
  auto func = MakeFunc((PFNGLISTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glIsTexture"));
  continue;
}

if(strcmp("glPrioritizeTextures",call_name)==0){
  auto func = MakeFunc((PFNGLPRIORITIZETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glPrioritizeTextures"));
  continue;
}

if(strcmp("glTexSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage1D"));
  continue;
}

if(strcmp("glTexSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage2D"));
  continue;
}

if(strcmp("glPopClientAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLPOPCLIENTATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPopClientAttrib"));
  continue;
}

if(strcmp("glPushClientAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLPUSHCLIENTATTRIBPROC)glXGetProcAddress((const GLubyte*)"glPushClientAttrib"));
  continue;
}

if(strcmp("glBlendColor",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDCOLORPROC)glXGetProcAddress((const GLubyte*)"glBlendColor"));
  continue;
}

if(strcmp("glBlendEquation",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDEQUATIONPROC)glXGetProcAddress((const GLubyte*)"glBlendEquation"));
  continue;
}

if(strcmp("glDrawRangeElements",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWRANGEELEMENTSPROC)glXGetProcAddress((const GLubyte*)"glDrawRangeElements"));
  continue;
}

if(strcmp("glColorTable",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glColorTable"));
  continue;
}

if(strcmp("glColorTableParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORTABLEPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glColorTableParameterfv"));
  continue;
}

if(strcmp("glColorTableParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORTABLEPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glColorTableParameteriv"));
  continue;
}

if(strcmp("glCopyColorTable",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glCopyColorTable"));
  continue;
}

if(strcmp("glGetColorTable",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOLORTABLEPROC)glXGetProcAddress((const GLubyte*)"glGetColorTable"));
  continue;
}

if(strcmp("glGetColorTableParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOLORTABLEPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetColorTableParameterfv"));
  continue;
}

if(strcmp("glGetColorTableParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOLORTABLEPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetColorTableParameteriv"));
  continue;
}

if(strcmp("glColorSubTable",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORSUBTABLEPROC)glXGetProcAddress((const GLubyte*)"glColorSubTable"));
  continue;
}

if(strcmp("glCopyColorSubTable",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYCOLORSUBTABLEPROC)glXGetProcAddress((const GLubyte*)"glCopyColorSubTable"));
  continue;
}

if(strcmp("glConvolutionFilter1D",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONFILTER1DPROC)glXGetProcAddress((const GLubyte*)"glConvolutionFilter1D"));
  continue;
}

if(strcmp("glConvolutionFilter2D",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glConvolutionFilter2D"));
  continue;
}

if(strcmp("glConvolutionParameterf",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameterf"));
  continue;
}

if(strcmp("glConvolutionParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameterfv"));
  continue;
}

if(strcmp("glConvolutionParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameteri"));
  continue;
}

if(strcmp("glConvolutionParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLCONVOLUTIONPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glConvolutionParameteriv"));
  continue;
}

if(strcmp("glCopyConvolutionFilter1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYCONVOLUTIONFILTER1DPROC)glXGetProcAddress((const GLubyte*)"glCopyConvolutionFilter1D"));
  continue;
}

if(strcmp("glCopyConvolutionFilter2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYCONVOLUTIONFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glCopyConvolutionFilter2D"));
  continue;
}

if(strcmp("glGetConvolutionFilter",call_name)==0){
  auto func = MakeFunc((PFNGLGETCONVOLUTIONFILTERPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionFilter"));
  continue;
}

if(strcmp("glGetConvolutionParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETCONVOLUTIONPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionParameterfv"));
  continue;
}

if(strcmp("glGetConvolutionParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETCONVOLUTIONPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetConvolutionParameteriv"));
  continue;
}

if(strcmp("glGetSeparableFilter",call_name)==0){
  auto func = MakeFunc((PFNGLGETSEPARABLEFILTERPROC)glXGetProcAddress((const GLubyte*)"glGetSeparableFilter"));
  continue;
}

if(strcmp("glSeparableFilter2D",call_name)==0){
  auto func = MakeFunc((PFNGLSEPARABLEFILTER2DPROC)glXGetProcAddress((const GLubyte*)"glSeparableFilter2D"));
  continue;
}

if(strcmp("glGetHistogram",call_name)==0){
  auto func = MakeFunc((PFNGLGETHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glGetHistogram"));
  continue;
}

if(strcmp("glGetHistogramParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETHISTOGRAMPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetHistogramParameterfv"));
  continue;
}

if(strcmp("glGetHistogramParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETHISTOGRAMPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetHistogramParameteriv"));
  continue;
}

if(strcmp("glGetMinmax",call_name)==0){
  auto func = MakeFunc((PFNGLGETMINMAXPROC)glXGetProcAddress((const GLubyte*)"glGetMinmax"));
  continue;
}

if(strcmp("glGetMinmaxParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMINMAXPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetMinmaxParameterfv"));
  continue;
}

if(strcmp("glGetMinmaxParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMINMAXPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetMinmaxParameteriv"));
  continue;
}

if(strcmp("glHistogram",call_name)==0){
  auto func = MakeFunc((PFNGLHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glHistogram"));
  continue;
}

if(strcmp("glMinmax",call_name)==0){
  auto func = MakeFunc((PFNGLMINMAXPROC)glXGetProcAddress((const GLubyte*)"glMinmax"));
  continue;
}

if(strcmp("glResetHistogram",call_name)==0){
  auto func = MakeFunc((PFNGLRESETHISTOGRAMPROC)glXGetProcAddress((const GLubyte*)"glResetHistogram"));
  continue;
}

if(strcmp("glResetMinmax",call_name)==0){
  auto func = MakeFunc((PFNGLRESETMINMAXPROC)glXGetProcAddress((const GLubyte*)"glResetMinmax"));
  continue;
}

if(strcmp("glTexImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexImage3D"));
  continue;
}

if(strcmp("glTexSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexSubImage3D"));
  continue;
}

if(strcmp("glCopyTexSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCopyTexSubImage3D"));
  continue;
}

if(strcmp("glActiveTexture",call_name)==0){
  auto func = MakeFunc((PFNGLACTIVETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glActiveTexture"));
  continue;
}

if(strcmp("glClientActiveTexture",call_name)==0){
  auto func = MakeFunc((PFNGLCLIENTACTIVETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glClientActiveTexture"));
  continue;
}

if(strcmp("glMultiTexCoord1d",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1d"));
  continue;
}

if(strcmp("glMultiTexCoord1dv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1dv"));
  continue;
}

if(strcmp("glMultiTexCoord1fARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1fARB"));
  continue;
}

if(strcmp("glMultiTexCoord1fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1fvARB"));
  continue;
}

if(strcmp("glMultiTexCoord1i",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1i"));
  continue;
}

if(strcmp("glMultiTexCoord1iv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1iv"));
  continue;
}

if(strcmp("glMultiTexCoord1s",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1s"));
  continue;
}

if(strcmp("glMultiTexCoord1sv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD1SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord1sv"));
  continue;
}

if(strcmp("glMultiTexCoord2d",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2d"));
  continue;
}

if(strcmp("glMultiTexCoord2dv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2dv"));
  continue;
}

if(strcmp("glMultiTexCoord2fARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2fARB"));
  continue;
}

if(strcmp("glMultiTexCoord2fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2fvARB"));
  continue;
}

if(strcmp("glMultiTexCoord2i",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2i"));
  continue;
}

if(strcmp("glMultiTexCoord2iv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2iv"));
  continue;
}

if(strcmp("glMultiTexCoord2s",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2s"));
  continue;
}

if(strcmp("glMultiTexCoord2sv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD2SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord2sv"));
  continue;
}

if(strcmp("glMultiTexCoord3d",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3d"));
  continue;
}

if(strcmp("glMultiTexCoord3dv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3dv"));
  continue;
}

if(strcmp("glMultiTexCoord3fARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3fARB"));
  continue;
}

if(strcmp("glMultiTexCoord3fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3fvARB"));
  continue;
}

if(strcmp("glMultiTexCoord3i",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3i"));
  continue;
}

if(strcmp("glMultiTexCoord3iv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3iv"));
  continue;
}

if(strcmp("glMultiTexCoord3s",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3s"));
  continue;
}

if(strcmp("glMultiTexCoord3sv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD3SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord3sv"));
  continue;
}

if(strcmp("glMultiTexCoord4d",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4DPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4d"));
  continue;
}

if(strcmp("glMultiTexCoord4dv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4DVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4dv"));
  continue;
}

if(strcmp("glMultiTexCoord4fARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4FARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4fARB"));
  continue;
}

if(strcmp("glMultiTexCoord4fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4FVARBPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4fvARB"));
  continue;
}

if(strcmp("glMultiTexCoord4i",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4IPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4i"));
  continue;
}

if(strcmp("glMultiTexCoord4iv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4IVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4iv"));
  continue;
}

if(strcmp("glMultiTexCoord4s",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4SPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4s"));
  continue;
}

if(strcmp("glMultiTexCoord4sv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4SVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4sv"));
  continue;
}

if(strcmp("glCompressedTexImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage1D"));
  continue;
}

if(strcmp("glCompressedTexImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage2D"));
  continue;
}

if(strcmp("glCompressedTexImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexImage3D"));
  continue;
}

if(strcmp("glCompressedTexSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage1D"));
  continue;
}

if(strcmp("glCompressedTexSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage2D"));
  continue;
}

if(strcmp("glCompressedTexSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTexSubImage3D"));
  continue;
}

if(strcmp("glGetCompressedTexImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOMPRESSEDTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTexImage"));
  continue;
}

if(strcmp("glLoadTransposeMatrixd",call_name)==0){
  auto func = MakeFunc((PFNGLLOADTRANSPOSEMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glLoadTransposeMatrixd"));
  continue;
}

if(strcmp("glLoadTransposeMatrixf",call_name)==0){
  auto func = MakeFunc((PFNGLLOADTRANSPOSEMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glLoadTransposeMatrixf"));
  continue;
}

if(strcmp("glMultTransposeMatrixd",call_name)==0){
  auto func = MakeFunc((PFNGLMULTTRANSPOSEMATRIXDPROC)glXGetProcAddress((const GLubyte*)"glMultTransposeMatrixd"));
  continue;
}

if(strcmp("glMultTransposeMatrixf",call_name)==0){
  auto func = MakeFunc((PFNGLMULTTRANSPOSEMATRIXFPROC)glXGetProcAddress((const GLubyte*)"glMultTransposeMatrixf"));
  continue;
}

if(strcmp("glSampleCoverage",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLECOVERAGEPROC)glXGetProcAddress((const GLubyte*)"glSampleCoverage"));
  continue;
}

if(strcmp("glBlendFuncSeparate",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDFUNCSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glBlendFuncSeparate"));
  continue;
}

if(strcmp("glFogCoordPointer",call_name)==0){
  auto func = MakeFunc((PFNGLFOGCOORDPOINTERPROC)glXGetProcAddress((const GLubyte*)"glFogCoordPointer"));
  continue;
}

if(strcmp("glFogCoordd",call_name)==0){
  auto func = MakeFunc((PFNGLFOGCOORDDPROC)glXGetProcAddress((const GLubyte*)"glFogCoordd"));
  continue;
}

if(strcmp("glFogCoorddv",call_name)==0){
  auto func = MakeFunc((PFNGLFOGCOORDDVPROC)glXGetProcAddress((const GLubyte*)"glFogCoorddv"));
  continue;
}

if(strcmp("glMultiDrawArrays",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWARRAYSPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArrays"));
  continue;
}

if(strcmp("glPointParameterf",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glPointParameterf"));
  continue;
}

if(strcmp("glPointParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glPointParameterfv"));
  continue;
}

if(strcmp("glPointParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glPointParameteri"));
  continue;
}

if(strcmp("glPointParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glPointParameteriv"));
  continue;
}

if(strcmp("glSecondaryColor3b",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3BPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3b"));
  continue;
}

if(strcmp("glSecondaryColor3bv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3BVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3bv"));
  continue;
}

if(strcmp("glSecondaryColor3d",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3DPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3d"));
  continue;
}

if(strcmp("glSecondaryColor3dv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3DVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3dv"));
  continue;
}

if(strcmp("glSecondaryColor3i",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3IPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3i"));
  continue;
}

if(strcmp("glSecondaryColor3iv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3IVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3iv"));
  continue;
}

if(strcmp("glSecondaryColor3s",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3SPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3s"));
  continue;
}

if(strcmp("glSecondaryColor3sv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3SVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3sv"));
  continue;
}

if(strcmp("glSecondaryColor3ub",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3UBPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ub"));
  continue;
}

if(strcmp("glSecondaryColor3ubv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3UBVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ubv"));
  continue;
}

if(strcmp("glSecondaryColor3ui",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3UIPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3ui"));
  continue;
}

if(strcmp("glSecondaryColor3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3UIVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3uiv"));
  continue;
}

if(strcmp("glSecondaryColor3us",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3USPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3us"));
  continue;
}

if(strcmp("glSecondaryColor3usv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3USVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3usv"));
  continue;
}

if(strcmp("glSecondaryColorPointer",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLORPOINTERPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorPointer"));
  continue;
}

if(strcmp("glWindowPos2d",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2DPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2d"));
  continue;
}

if(strcmp("glWindowPos2dv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2DVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2dv"));
  continue;
}

if(strcmp("glWindowPos2f",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2FPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2f"));
  continue;
}

if(strcmp("glWindowPos2fv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2FVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2fv"));
  continue;
}

if(strcmp("glWindowPos2i",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2IPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2i"));
  continue;
}

if(strcmp("glWindowPos2iv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2IVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2iv"));
  continue;
}

if(strcmp("glWindowPos2s",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2SPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2s"));
  continue;
}

if(strcmp("glWindowPos2sv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS2SVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos2sv"));
  continue;
}

if(strcmp("glWindowPos3d",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3DPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3d"));
  continue;
}

if(strcmp("glWindowPos3dv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3DVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3dv"));
  continue;
}

if(strcmp("glWindowPos3f",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3FPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3f"));
  continue;
}

if(strcmp("glWindowPos3fv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3FVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3fv"));
  continue;
}

if(strcmp("glWindowPos3i",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3IPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3i"));
  continue;
}

if(strcmp("glWindowPos3iv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3IVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3iv"));
  continue;
}

if(strcmp("glWindowPos3s",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3SPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3s"));
  continue;
}

if(strcmp("glWindowPos3sv",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS3SVPROC)glXGetProcAddress((const GLubyte*)"glWindowPos3sv"));
  continue;
}

if(strcmp("glBeginQuery",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINQUERYPROC)glXGetProcAddress((const GLubyte*)"glBeginQuery"));
  continue;
}

if(strcmp("glBindBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindBuffer"));
  continue;
}

if(strcmp("glBufferData",call_name)==0){
  auto func = MakeFunc((PFNGLBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glBufferData"));
  continue;
}

if(strcmp("glBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glBufferSubData"));
  continue;
}

if(strcmp("glDeleteBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteBuffers"));
  continue;
}

if(strcmp("glDeleteQueries",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEQUERIESPROC)glXGetProcAddress((const GLubyte*)"glDeleteQueries"));
  continue;
}

if(strcmp("glEndQuery",call_name)==0){
  auto func = MakeFunc((PFNGLENDQUERYPROC)glXGetProcAddress((const GLubyte*)"glEndQuery"));
  continue;
}

if(strcmp("glGenBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLGENBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenBuffers"));
  continue;
}

if(strcmp("glGenQueries",call_name)==0){
  auto func = MakeFunc((PFNGLGENQUERIESPROC)glXGetProcAddress((const GLubyte*)"glGenQueries"));
  continue;
}

if(strcmp("glGetBufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetBufferParameteriv"));
  continue;
}

if(strcmp("glGetBufferPointerv",call_name)==0){
  auto func = MakeFunc((PFNGLGETBUFFERPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetBufferPointerv"));
  continue;
}

if(strcmp("glGetBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLGETBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glGetBufferSubData"));
  continue;
}

if(strcmp("glGetQueryObjectiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYOBJECTIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectiv"));
  continue;
}

if(strcmp("glGetQueryObjectuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYOBJECTUIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectuiv"));
  continue;
}

if(strcmp("glGetQueryiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryiv"));
  continue;
}

if(strcmp("glIsBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLISBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsBuffer"));
  continue;
}

if(strcmp("glIsQuery",call_name)==0){
  auto func = MakeFunc((PFNGLISQUERYPROC)glXGetProcAddress((const GLubyte*)"glIsQuery"));
  continue;
}

if(strcmp("glMapBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLMAPBUFFERPROC)glXGetProcAddress((const GLubyte*)"glMapBuffer"));
  continue;
}

if(strcmp("glUnmapBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLUNMAPBUFFERPROC)glXGetProcAddress((const GLubyte*)"glUnmapBuffer"));
  continue;
}

if(strcmp("glAttachShader",call_name)==0){
  auto func = MakeFunc((PFNGLATTACHSHADERPROC)glXGetProcAddress((const GLubyte*)"glAttachShader"));
  continue;
}

if(strcmp("glBindAttribLocation",call_name)==0){
  auto func = MakeFunc((PFNGLBINDATTRIBLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glBindAttribLocation"));
  continue;
}

if(strcmp("glBlendEquationSeparate",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDEQUATIONSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationSeparate"));
  continue;
}

if(strcmp("glCompileShader",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPILESHADERPROC)glXGetProcAddress((const GLubyte*)"glCompileShader"));
  continue;
}

if(strcmp("glCreateProgram",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glCreateProgram"));
  continue;
}

if(strcmp("glCreateShader",call_name)==0){
  auto func = MakeFunc((PFNGLCREATESHADERPROC)glXGetProcAddress((const GLubyte*)"glCreateShader"));
  continue;
}

if(strcmp("glDeleteProgram",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgram"));
  continue;
}

if(strcmp("glDeleteShader",call_name)==0){
  auto func = MakeFunc((PFNGLDELETESHADERPROC)glXGetProcAddress((const GLubyte*)"glDeleteShader"));
  continue;
}

if(strcmp("glDetachShader",call_name)==0){
  auto func = MakeFunc((PFNGLDETACHSHADERPROC)glXGetProcAddress((const GLubyte*)"glDetachShader"));
  continue;
}

if(strcmp("glDisableVertexAttribArray",call_name)==0){
  auto func = MakeFunc((PFNGLDISABLEVERTEXATTRIBARRAYPROC)glXGetProcAddress((const GLubyte*)"glDisableVertexAttribArray"));
  continue;
}

if(strcmp("glDrawBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDrawBuffers"));
  continue;
}

if(strcmp("glEnableVertexAttribArray",call_name)==0){
  auto func = MakeFunc((PFNGLENABLEVERTEXATTRIBARRAYPROC)glXGetProcAddress((const GLubyte*)"glEnableVertexAttribArray"));
  continue;
}

if(strcmp("glGetActiveAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEATTRIBPROC)glXGetProcAddress((const GLubyte*)"glGetActiveAttrib"));
  continue;
}

if(strcmp("glGetActiveUniform",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEUNIFORMPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniform"));
  continue;
}

if(strcmp("glGetAttachedShaders",call_name)==0){
  auto func = MakeFunc((PFNGLGETATTACHEDSHADERSPROC)glXGetProcAddress((const GLubyte*)"glGetAttachedShaders"));
  continue;
}

if(strcmp("glGetAttribLocation",call_name)==0){
  auto func = MakeFunc((PFNGLGETATTRIBLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetAttribLocation"));
  continue;
}

if(strcmp("glGetProgramInfoLog",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetProgramInfoLog"));
  continue;
}

if(strcmp("glGetProgramiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramiv"));
  continue;
}

if(strcmp("glGetShaderInfoLog",call_name)==0){
  auto func = MakeFunc((PFNGLGETSHADERINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetShaderInfoLog"));
  continue;
}

if(strcmp("glGetShaderSource",call_name)==0){
  auto func = MakeFunc((PFNGLGETSHADERSOURCEPROC)glXGetProcAddress((const GLubyte*)"glGetShaderSource"));
  continue;
}

if(strcmp("glGetShaderiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSHADERIVPROC)glXGetProcAddress((const GLubyte*)"glGetShaderiv"));
  continue;
}

if(strcmp("glGetUniformLocation",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetUniformLocation"));
  continue;
}

if(strcmp("glGetUniformfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMFVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformfv"));
  continue;
}

if(strcmp("glGetUniformiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformiv"));
  continue;
}

if(strcmp("glGetVertexAttribPointerv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribPointerv"));
  continue;
}

if(strcmp("glGetVertexAttribdv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBDVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribdv"));
  continue;
}

if(strcmp("glGetVertexAttribfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBFVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribfv"));
  continue;
}

if(strcmp("glGetVertexAttribiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribiv"));
  continue;
}

if(strcmp("glIsProgram",call_name)==0){
  auto func = MakeFunc((PFNGLISPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glIsProgram"));
  continue;
}

if(strcmp("glIsShader",call_name)==0){
  auto func = MakeFunc((PFNGLISSHADERPROC)glXGetProcAddress((const GLubyte*)"glIsShader"));
  continue;
}

if(strcmp("glLinkProgram",call_name)==0){
  auto func = MakeFunc((PFNGLLINKPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glLinkProgram"));
  continue;
}

if(strcmp("glShaderSource",call_name)==0){
  auto func = MakeFunc((PFNGLSHADERSOURCEPROC)glXGetProcAddress((const GLubyte*)"glShaderSource"));
  continue;
}

if(strcmp("glStencilFuncSeparate",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILFUNCSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilFuncSeparate"));
  continue;
}

if(strcmp("glStencilMaskSeparate",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILMASKSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilMaskSeparate"));
  continue;
}

if(strcmp("glStencilOpSeparate",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILOPSEPARATEPROC)glXGetProcAddress((const GLubyte*)"glStencilOpSeparate"));
  continue;
}

if(strcmp("glUniform1f",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1FPROC)glXGetProcAddress((const GLubyte*)"glUniform1f"));
  continue;
}

if(strcmp("glUniform1fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1FVPROC)glXGetProcAddress((const GLubyte*)"glUniform1fv"));
  continue;
}

if(strcmp("glUniform1i",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1IPROC)glXGetProcAddress((const GLubyte*)"glUniform1i"));
  continue;
}

if(strcmp("glUniform1iv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1IVPROC)glXGetProcAddress((const GLubyte*)"glUniform1iv"));
  continue;
}

if(strcmp("glUniform2f",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2FPROC)glXGetProcAddress((const GLubyte*)"glUniform2f"));
  continue;
}

if(strcmp("glUniform2fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2FVPROC)glXGetProcAddress((const GLubyte*)"glUniform2fv"));
  continue;
}

if(strcmp("glUniform2i",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2IPROC)glXGetProcAddress((const GLubyte*)"glUniform2i"));
  continue;
}

if(strcmp("glUniform2iv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2IVPROC)glXGetProcAddress((const GLubyte*)"glUniform2iv"));
  continue;
}

if(strcmp("glUniform3f",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3FPROC)glXGetProcAddress((const GLubyte*)"glUniform3f"));
  continue;
}

if(strcmp("glUniform3fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3FVPROC)glXGetProcAddress((const GLubyte*)"glUniform3fv"));
  continue;
}

if(strcmp("glUniform3i",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3IPROC)glXGetProcAddress((const GLubyte*)"glUniform3i"));
  continue;
}

if(strcmp("glUniform3iv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3IVPROC)glXGetProcAddress((const GLubyte*)"glUniform3iv"));
  continue;
}

if(strcmp("glUniform4f",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4FPROC)glXGetProcAddress((const GLubyte*)"glUniform4f"));
  continue;
}

if(strcmp("glUniform4fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4FVPROC)glXGetProcAddress((const GLubyte*)"glUniform4fv"));
  continue;
}

if(strcmp("glUniform4i",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4IPROC)glXGetProcAddress((const GLubyte*)"glUniform4i"));
  continue;
}

if(strcmp("glUniform4iv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4IVPROC)glXGetProcAddress((const GLubyte*)"glUniform4iv"));
  continue;
}

if(strcmp("glUniformMatrix2fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2fv"));
  continue;
}

if(strcmp("glUniformMatrix3fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3fv"));
  continue;
}

if(strcmp("glUniformMatrix4fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4fv"));
  continue;
}

if(strcmp("glUseProgram",call_name)==0){
  auto func = MakeFunc((PFNGLUSEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glUseProgram"));
  continue;
}

if(strcmp("glValidateProgram",call_name)==0){
  auto func = MakeFunc((PFNGLVALIDATEPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glValidateProgram"));
  continue;
}

if(strcmp("glVertexAttrib1d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1d"));
  continue;
}

if(strcmp("glVertexAttrib1dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dv"));
  continue;
}

if(strcmp("glVertexAttrib1s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1s"));
  continue;
}

if(strcmp("glVertexAttrib1sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1sv"));
  continue;
}

if(strcmp("glVertexAttrib2d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2d"));
  continue;
}

if(strcmp("glVertexAttrib2dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dv"));
  continue;
}

if(strcmp("glVertexAttrib2s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2s"));
  continue;
}

if(strcmp("glVertexAttrib2sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2sv"));
  continue;
}

if(strcmp("glVertexAttrib3d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3d"));
  continue;
}

if(strcmp("glVertexAttrib3dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dv"));
  continue;
}

if(strcmp("glVertexAttrib3s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3s"));
  continue;
}

if(strcmp("glVertexAttrib3sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3sv"));
  continue;
}

if(strcmp("glVertexAttrib4Nbv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nbv"));
  continue;
}

if(strcmp("glVertexAttrib4Niv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Niv"));
  continue;
}

if(strcmp("glVertexAttrib4Nsv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NSVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nsv"));
  continue;
}

if(strcmp("glVertexAttrib4Nub",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NUBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nub"));
  continue;
}

if(strcmp("glVertexAttrib4Nubv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NUBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nubv"));
  continue;
}

if(strcmp("glVertexAttrib4Nuiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NUIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nuiv"));
  continue;
}

if(strcmp("glVertexAttrib4Nusv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4NUSVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4Nusv"));
  continue;
}

if(strcmp("glVertexAttrib4bv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4BVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4bv"));
  continue;
}

if(strcmp("glVertexAttrib4d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4d"));
  continue;
}

if(strcmp("glVertexAttrib4dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dv"));
  continue;
}

if(strcmp("glVertexAttrib4iv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4IVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4iv"));
  continue;
}

if(strcmp("glVertexAttrib4s",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4SPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4s"));
  continue;
}

if(strcmp("glVertexAttrib4sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4sv"));
  continue;
}

if(strcmp("glVertexAttrib4ubv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4UBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubv"));
  continue;
}

if(strcmp("glVertexAttrib4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4uiv"));
  continue;
}

if(strcmp("glVertexAttrib4usv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4USVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4usv"));
  continue;
}

if(strcmp("glVertexAttribPointer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribPointer"));
  continue;
}

if(strcmp("glUniformMatrix2x3fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2X3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x3fv"));
  continue;
}

if(strcmp("glUniformMatrix2x4fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2X4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x4fv"));
  continue;
}

if(strcmp("glUniformMatrix3x2fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3X2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x2fv"));
  continue;
}

if(strcmp("glUniformMatrix3x4fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3X4FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x4fv"));
  continue;
}

if(strcmp("glUniformMatrix4x2fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4X2FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x2fv"));
  continue;
}

if(strcmp("glUniformMatrix4x3fv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4X3FVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x3fv"));
  continue;
}

if(strcmp("glBeginConditionalRender",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINCONDITIONALRENDERPROC)glXGetProcAddress((const GLubyte*)"glBeginConditionalRender"));
  continue;
}

if(strcmp("glBeginTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glBeginTransformFeedback"));
  continue;
}

if(strcmp("glBindBufferBase",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFERBASEPROC)glXGetProcAddress((const GLubyte*)"glBindBufferBase"));
  continue;
}

if(strcmp("glBindBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glBindBufferRange"));
  continue;
}

if(strcmp("glBindFragDataLocation",call_name)==0){
  auto func = MakeFunc((PFNGLBINDFRAGDATALOCATIONPROC)glXGetProcAddress((const GLubyte*)"glBindFragDataLocation"));
  continue;
}

if(strcmp("glClampColor",call_name)==0){
  auto func = MakeFunc((PFNGLCLAMPCOLORPROC)glXGetProcAddress((const GLubyte*)"glClampColor"));
  continue;
}

if(strcmp("glClearBufferfi",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERFIPROC)glXGetProcAddress((const GLubyte*)"glClearBufferfi"));
  continue;
}

if(strcmp("glClearBufferfv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERFVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferfv"));
  continue;
}

if(strcmp("glClearBufferiv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferiv"));
  continue;
}

if(strcmp("glClearBufferuiv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERUIVPROC)glXGetProcAddress((const GLubyte*)"glClearBufferuiv"));
  continue;
}

if(strcmp("glColorMaski",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORMASKIPROC)glXGetProcAddress((const GLubyte*)"glColorMaski"));
  continue;
}

if(strcmp("glDisablei",call_name)==0){
  auto func = MakeFunc((PFNGLDISABLEIPROC)glXGetProcAddress((const GLubyte*)"glDisablei"));
  continue;
}

if(strcmp("glEnablei",call_name)==0){
  auto func = MakeFunc((PFNGLENABLEIPROC)glXGetProcAddress((const GLubyte*)"glEnablei"));
  continue;
}

if(strcmp("glEndConditionalRender",call_name)==0){
  auto func = MakeFunc((PFNGLENDCONDITIONALRENDERPROC)glXGetProcAddress((const GLubyte*)"glEndConditionalRender"));
  continue;
}

if(strcmp("glEndTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLENDTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glEndTransformFeedback"));
  continue;
}

if(strcmp("glGetBooleani_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETBOOLEANI_VPROC)glXGetProcAddress((const GLubyte*)"glGetBooleani_v"));
  continue;
}

if(strcmp("glGetFragDataLocation",call_name)==0){
  auto func = MakeFunc((PFNGLGETFRAGDATALOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetFragDataLocation"));
  continue;
}

if(strcmp("glGetIntegeri_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTEGERI_VPROC)glXGetProcAddress((const GLubyte*)"glGetIntegeri_v"));
  continue;
}

if(strcmp("glGetStringi",call_name)==0){
  auto func = MakeFunc((PFNGLGETSTRINGIPROC)glXGetProcAddress((const GLubyte*)"glGetStringi"));
  continue;
}

if(strcmp("glGetTexParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterIiv"));
  continue;
}

if(strcmp("glGetTexParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterIuiv"));
  continue;
}

if(strcmp("glGetTransformFeedbackVarying",call_name)==0){
  auto func = MakeFunc((PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbackVarying"));
  continue;
}

if(strcmp("glGetUniformuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMUIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformuiv"));
  continue;
}

if(strcmp("glGetVertexAttribIiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBIIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribIiv"));
  continue;
}

if(strcmp("glGetVertexAttribIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribIuiv"));
  continue;
}

if(strcmp("glIsEnabledi",call_name)==0){
  auto func = MakeFunc((PFNGLISENABLEDIPROC)glXGetProcAddress((const GLubyte*)"glIsEnabledi"));
  continue;
}

if(strcmp("glTexParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterIiv"));
  continue;
}

if(strcmp("glTexParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterIuiv"));
  continue;
}

if(strcmp("glTransformFeedbackVaryings",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSFORMFEEDBACKVARYINGSPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackVaryings"));
  continue;
}

if(strcmp("glUniform1ui",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1UIPROC)glXGetProcAddress((const GLubyte*)"glUniform1ui"));
  continue;
}

if(strcmp("glUniform1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform1uiv"));
  continue;
}

if(strcmp("glUniform2ui",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2UIPROC)glXGetProcAddress((const GLubyte*)"glUniform2ui"));
  continue;
}

if(strcmp("glUniform2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform2uiv"));
  continue;
}

if(strcmp("glUniform3ui",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3UIPROC)glXGetProcAddress((const GLubyte*)"glUniform3ui"));
  continue;
}

if(strcmp("glUniform3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform3uiv"));
  continue;
}

if(strcmp("glUniform4ui",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4UIPROC)glXGetProcAddress((const GLubyte*)"glUniform4ui"));
  continue;
}

if(strcmp("glUniform4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4UIVPROC)glXGetProcAddress((const GLubyte*)"glUniform4uiv"));
  continue;
}

if(strcmp("glVertexAttribI1iv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI1IVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1iv"));
  continue;
}

if(strcmp("glVertexAttribI1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI1UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1uiv"));
  continue;
}

if(strcmp("glVertexAttribI4bv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4BVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4bv"));
  continue;
}

if(strcmp("glVertexAttribI4sv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4SVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4sv"));
  continue;
}

if(strcmp("glVertexAttribI4ubv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4UBVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4ubv"));
  continue;
}

if(strcmp("glVertexAttribI4usv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4USVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4usv"));
  continue;
}

if(strcmp("glVertexAttribIPointer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBIPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribIPointer"));
  continue;
}

if(strcmp("glPrimitiveRestartIndex",call_name)==0){
  auto func = MakeFunc((PFNGLPRIMITIVERESTARTINDEXPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveRestartIndex"));
  continue;
}

if(strcmp("glTexBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glTexBuffer"));
  continue;
}

if(strcmp("glFramebufferTexture",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture"));
  continue;
}

if(strcmp("glGetBufferParameteri64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETBUFFERPARAMETERI64VPROC)glXGetProcAddress((const GLubyte*)"glGetBufferParameteri64v"));
  continue;
}

if(strcmp("glGetInteger64i_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTEGER64I_VPROC)glXGetProcAddress((const GLubyte*)"glGetInteger64i_v"));
  continue;
}

if(strcmp("glVertexAttribDivisor",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribDivisor"));
  continue;
}

if(strcmp("glMinSampleShading",call_name)==0){
  auto func = MakeFunc((PFNGLMINSAMPLESHADINGPROC)glXGetProcAddress((const GLubyte*)"glMinSampleShading"));
  continue;
}

if(strcmp("glMemoryBarrierByRegion",call_name)==0){
  auto func = MakeFunc((PFNGLMEMORYBARRIERBYREGIONPROC)glXGetProcAddress((const GLubyte*)"glMemoryBarrierByRegion"));
  continue;
}

if(strcmp("glBindProgramARB",call_name)==0){
  auto func = MakeFunc((PFNGLBINDPROGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glBindProgramARB"));
  continue;
}

if(strcmp("glDeleteProgramsARB",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEPROGRAMSARBPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgramsARB"));
  continue;
}

if(strcmp("glGenProgramsARB",call_name)==0){
  auto func = MakeFunc((PFNGLGENPROGRAMSARBPROC)glXGetProcAddress((const GLubyte*)"glGenProgramsARB"));
  continue;
}

if(strcmp("glGetProgramEnvParameterdvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMENVPARAMETERDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramEnvParameterdvARB"));
  continue;
}

if(strcmp("glGetProgramEnvParameterfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMENVPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramEnvParameterfvARB"));
  continue;
}

if(strcmp("glGetProgramLocalParameterdvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramLocalParameterdvARB"));
  continue;
}

if(strcmp("glGetProgramLocalParameterfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramLocalParameterfvARB"));
  continue;
}

if(strcmp("glGetProgramStringARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMSTRINGARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStringARB"));
  continue;
}

if(strcmp("glGetProgramivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetProgramivARB"));
  continue;
}

if(strcmp("glIsProgramARB",call_name)==0){
  auto func = MakeFunc((PFNGLISPROGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glIsProgramARB"));
  continue;
}

if(strcmp("glProgramEnvParameter4dARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMENVPARAMETER4DARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4dARB"));
  continue;
}

if(strcmp("glProgramEnvParameter4dvARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMENVPARAMETER4DVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4dvARB"));
  continue;
}

if(strcmp("glProgramEnvParameter4fARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMENVPARAMETER4FARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4fARB"));
  continue;
}

if(strcmp("glProgramEnvParameter4fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMENVPARAMETER4FVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameter4fvARB"));
  continue;
}

if(strcmp("glProgramLocalParameter4dARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMLOCALPARAMETER4DARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4dARB"));
  continue;
}

if(strcmp("glProgramLocalParameter4dvARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4dvARB"));
  continue;
}

if(strcmp("glProgramLocalParameter4fARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMLOCALPARAMETER4FARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4fARB"));
  continue;
}

if(strcmp("glProgramLocalParameter4fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameter4fvARB"));
  continue;
}

if(strcmp("glProgramStringARB",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMSTRINGARBPROC)glXGetProcAddress((const GLubyte*)"glProgramStringARB"));
  continue;
}

if(strcmp("glVertexAttrib1fARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fARB"));
  continue;
}

if(strcmp("glVertexAttrib1fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fvARB"));
  continue;
}

if(strcmp("glVertexAttrib2fARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fARB"));
  continue;
}

if(strcmp("glVertexAttrib2fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fvARB"));
  continue;
}

if(strcmp("glVertexAttrib3fARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fARB"));
  continue;
}

if(strcmp("glVertexAttrib3fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fvARB"));
  continue;
}

if(strcmp("glVertexAttrib4fARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4FARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fARB"));
  continue;
}

if(strcmp("glVertexAttrib4fvARB",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4FVARBPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fvARB"));
  continue;
}

if(strcmp("glAttachObjectARB",call_name)==0){
  auto func = MakeFunc((PFNGLATTACHOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glAttachObjectARB"));
  continue;
}

if(strcmp("glCreateProgramObjectARB",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEPROGRAMOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glCreateProgramObjectARB"));
  continue;
}

if(strcmp("glCreateShaderObjectARB",call_name)==0){
  auto func = MakeFunc((PFNGLCREATESHADEROBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderObjectARB"));
  continue;
}

if(strcmp("glDeleteObjectARB",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glDeleteObjectARB"));
  continue;
}

if(strcmp("glDetachObjectARB",call_name)==0){
  auto func = MakeFunc((PFNGLDETACHOBJECTARBPROC)glXGetProcAddress((const GLubyte*)"glDetachObjectARB"));
  continue;
}

if(strcmp("glGetAttachedObjectsARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETATTACHEDOBJECTSARBPROC)glXGetProcAddress((const GLubyte*)"glGetAttachedObjectsARB"));
  continue;
}

if(strcmp("glGetHandleARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETHANDLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetHandleARB"));
  continue;
}

if(strcmp("glGetInfoLogARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETINFOLOGARBPROC)glXGetProcAddress((const GLubyte*)"glGetInfoLogARB"));
  continue;
}

if(strcmp("glGetObjectParameterfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETOBJECTPARAMETERFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterfvARB"));
  continue;
}

if(strcmp("glGetObjectParameterivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETOBJECTPARAMETERIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterivARB"));
  continue;
}

if(strcmp("glDrawArraysInstancedARB",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWARRAYSINSTANCEDARBPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysInstancedARB"));
  continue;
}

if(strcmp("glDrawElementsInstancedARB",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSINSTANCEDARBPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedARB"));
  continue;
}

if(strcmp("glBindFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBINDFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindFramebuffer"));
  continue;
}

if(strcmp("glBindRenderbuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBINDRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindRenderbuffer"));
  continue;
}

if(strcmp("glBlitFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBLITFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBlitFramebuffer"));
  continue;
}

if(strcmp("glCheckFramebufferStatus",call_name)==0){
  auto func = MakeFunc((PFNGLCHECKFRAMEBUFFERSTATUSPROC)glXGetProcAddress((const GLubyte*)"glCheckFramebufferStatus"));
  continue;
}

if(strcmp("glDeleteFramebuffers",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteFramebuffers"));
  continue;
}

if(strcmp("glDeleteRenderbuffers",call_name)==0){
  auto func = MakeFunc((PFNGLDELETERENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteRenderbuffers"));
  continue;
}

if(strcmp("glFramebufferRenderbuffer",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glFramebufferRenderbuffer"));
  continue;
}

if(strcmp("glFramebufferTexture1D",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERTEXTURE1DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture1D"));
  continue;
}

if(strcmp("glFramebufferTexture2D",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERTEXTURE2DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture2D"));
  continue;
}

if(strcmp("glFramebufferTexture3D",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERTEXTURE3DPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTexture3D"));
  continue;
}

if(strcmp("glFramebufferTextureLayer",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERTEXTURELAYERPROC)glXGetProcAddress((const GLubyte*)"glFramebufferTextureLayer"));
  continue;
}

if(strcmp("glGenFramebuffers",call_name)==0){
  auto func = MakeFunc((PFNGLGENFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenFramebuffers"));
  continue;
}

if(strcmp("glGenRenderbuffers",call_name)==0){
  auto func = MakeFunc((PFNGLGENRENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glGenRenderbuffers"));
  continue;
}

if(strcmp("glGenerateMipmap",call_name)==0){
  auto func = MakeFunc((PFNGLGENERATEMIPMAPPROC)glXGetProcAddress((const GLubyte*)"glGenerateMipmap"));
  continue;
}

if(strcmp("glGetFramebufferAttachmentParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetFramebufferAttachmentParameteriv"));
  continue;
}

if(strcmp("glGetRenderbufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETRENDERBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetRenderbufferParameteriv"));
  continue;
}

if(strcmp("glIsFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLISFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsFramebuffer"));
  continue;
}

if(strcmp("glIsRenderbuffer",call_name)==0){
  auto func = MakeFunc((PFNGLISRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glIsRenderbuffer"));
  continue;
}

if(strcmp("glRenderbufferStorage",call_name)==0){
  auto func = MakeFunc((PFNGLRENDERBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glRenderbufferStorage"));
  continue;
}

if(strcmp("glRenderbufferStorageMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glRenderbufferStorageMultisample"));
  continue;
}

if(strcmp("glFlushMappedBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLFLUSHMAPPEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedBufferRange"));
  continue;
}

if(strcmp("glMapBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLMAPBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glMapBufferRange"));
  continue;
}

if(strcmp("glBindVertexArray",call_name)==0){
  auto func = MakeFunc((PFNGLBINDVERTEXARRAYPROC)glXGetProcAddress((const GLubyte*)"glBindVertexArray"));
  continue;
}

if(strcmp("glDeleteVertexArrays",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glDeleteVertexArrays"));
  continue;
}

if(strcmp("glGenVertexArrays",call_name)==0){
  auto func = MakeFunc((PFNGLGENVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glGenVertexArrays"));
  continue;
}

if(strcmp("glIsVertexArray",call_name)==0){
  auto func = MakeFunc((PFNGLISVERTEXARRAYPROC)glXGetProcAddress((const GLubyte*)"glIsVertexArray"));
  continue;
}

if(strcmp("glGetActiveUniformBlockName",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformBlockName"));
  continue;
}

if(strcmp("glGetActiveUniformBlockiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEUNIFORMBLOCKIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformBlockiv"));
  continue;
}

if(strcmp("glGetActiveUniformName",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEUNIFORMNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformName"));
  continue;
}

if(strcmp("glGetActiveUniformsiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEUNIFORMSIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveUniformsiv"));
  continue;
}

if(strcmp("glGetUniformBlockIndex",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMBLOCKINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetUniformBlockIndex"));
  continue;
}

if(strcmp("glGetUniformIndices",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMINDICESPROC)glXGetProcAddress((const GLubyte*)"glGetUniformIndices"));
  continue;
}

if(strcmp("glUniformBlockBinding",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMBLOCKBINDINGPROC)glXGetProcAddress((const GLubyte*)"glUniformBlockBinding"));
  continue;
}

if(strcmp("glCopyBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyBufferSubData"));
  continue;
}

if(strcmp("glClientWaitSync",call_name)==0){
  auto func = MakeFunc((PFNGLCLIENTWAITSYNCPROC)glXGetProcAddress((const GLubyte*)"glClientWaitSync"));
  continue;
}

if(strcmp("glDeleteSync",call_name)==0){
  auto func = MakeFunc((PFNGLDELETESYNCPROC)glXGetProcAddress((const GLubyte*)"glDeleteSync"));
  continue;
}

if(strcmp("glFenceSync",call_name)==0){
  auto func = MakeFunc((PFNGLFENCESYNCPROC)glXGetProcAddress((const GLubyte*)"glFenceSync"));
  continue;
}

if(strcmp("glGetInteger64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTEGER64VPROC)glXGetProcAddress((const GLubyte*)"glGetInteger64v"));
  continue;
}

if(strcmp("glGetSynciv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSYNCIVPROC)glXGetProcAddress((const GLubyte*)"glGetSynciv"));
  continue;
}

if(strcmp("glIsSync",call_name)==0){
  auto func = MakeFunc((PFNGLISSYNCPROC)glXGetProcAddress((const GLubyte*)"glIsSync"));
  continue;
}

if(strcmp("glWaitSync",call_name)==0){
  auto func = MakeFunc((PFNGLWAITSYNCPROC)glXGetProcAddress((const GLubyte*)"glWaitSync"));
  continue;
}

if(strcmp("glDrawElementsBaseVertex",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsBaseVertex"));
  continue;
}

if(strcmp("glDrawElementsInstancedBaseVertex",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertex"));
  continue;
}

if(strcmp("glDrawRangeElementsBaseVertex",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glDrawRangeElementsBaseVertex"));
  continue;
}

if(strcmp("glMultiDrawElementsBaseVertex",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsBaseVertex"));
  continue;
}

if(strcmp("glProvokingVertex",call_name)==0){
  auto func = MakeFunc((PFNGLPROVOKINGVERTEXPROC)glXGetProcAddress((const GLubyte*)"glProvokingVertex"));
  continue;
}

if(strcmp("glGetMultisamplefv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMULTISAMPLEFVPROC)glXGetProcAddress((const GLubyte*)"glGetMultisamplefv"));
  continue;
}

if(strcmp("glSampleMaski",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLEMASKIPROC)glXGetProcAddress((const GLubyte*)"glSampleMaski"));
  continue;
}

if(strcmp("glTexImage2DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXIMAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexImage2DMultisample"));
  continue;
}

if(strcmp("glTexImage3DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXIMAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexImage3DMultisample"));
  continue;
}

if(strcmp("glBlendEquationSeparateiARB",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDEQUATIONSEPARATEIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationSeparateiARB"));
  continue;
}

if(strcmp("glBlendEquationiARB",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDEQUATIONIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendEquationiARB"));
  continue;
}

if(strcmp("glBlendFuncSeparateiARB",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDFUNCSEPARATEIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendFuncSeparateiARB"));
  continue;
}

if(strcmp("glBlendFunciARB",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDFUNCIARBPROC)glXGetProcAddress((const GLubyte*)"glBlendFunciARB"));
  continue;
}

if(strcmp("glBindFragDataLocationIndexed",call_name)==0){
  auto func = MakeFunc((PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glBindFragDataLocationIndexed"));
  continue;
}

if(strcmp("glGetFragDataIndex",call_name)==0){
  auto func = MakeFunc((PFNGLGETFRAGDATAINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetFragDataIndex"));
  continue;
}

if(strcmp("glBindSampler",call_name)==0){
  auto func = MakeFunc((PFNGLBINDSAMPLERPROC)glXGetProcAddress((const GLubyte*)"glBindSampler"));
  continue;
}

if(strcmp("glDeleteSamplers",call_name)==0){
  auto func = MakeFunc((PFNGLDELETESAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glDeleteSamplers"));
  continue;
}

if(strcmp("glGenSamplers",call_name)==0){
  auto func = MakeFunc((PFNGLGENSAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glGenSamplers"));
  continue;
}

if(strcmp("glGetSamplerParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSAMPLERPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterIiv"));
  continue;
}

if(strcmp("glGetSamplerParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSAMPLERPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterIuiv"));
  continue;
}

if(strcmp("glGetSamplerParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSAMPLERPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameterfv"));
  continue;
}

if(strcmp("glGetSamplerParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETSAMPLERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetSamplerParameteriv"));
  continue;
}

if(strcmp("glIsSampler",call_name)==0){
  auto func = MakeFunc((PFNGLISSAMPLERPROC)glXGetProcAddress((const GLubyte*)"glIsSampler"));
  continue;
}

if(strcmp("glSamplerParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterIiv"));
  continue;
}

if(strcmp("glSamplerParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterIuiv"));
  continue;
}

if(strcmp("glSamplerParameterf",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterf"));
  continue;
}

if(strcmp("glSamplerParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameterfv"));
  continue;
}

if(strcmp("glSamplerParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameteri"));
  continue;
}

if(strcmp("glSamplerParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glSamplerParameteriv"));
  continue;
}

if(strcmp("glGetQueryObjecti64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYOBJECTI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjecti64v"));
  continue;
}

if(strcmp("glGetQueryObjectui64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYOBJECTUI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryObjectui64v"));
  continue;
}

if(strcmp("glQueryCounter",call_name)==0){
  auto func = MakeFunc((PFNGLQUERYCOUNTERPROC)glXGetProcAddress((const GLubyte*)"glQueryCounter"));
  continue;
}

if(strcmp("glColorP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORP3UIPROC)glXGetProcAddress((const GLubyte*)"glColorP3ui"));
  continue;
}

if(strcmp("glColorP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORP3UIVPROC)glXGetProcAddress((const GLubyte*)"glColorP3uiv"));
  continue;
}

if(strcmp("glColorP4ui",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORP4UIPROC)glXGetProcAddress((const GLubyte*)"glColorP4ui"));
  continue;
}

if(strcmp("glColorP4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORP4UIVPROC)glXGetProcAddress((const GLubyte*)"glColorP4uiv"));
  continue;
}

if(strcmp("glMultiTexCoordP1ui",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP1UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP1ui"));
  continue;
}

if(strcmp("glMultiTexCoordP1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP1UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP1uiv"));
  continue;
}

if(strcmp("glMultiTexCoordP2ui",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP2UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP2ui"));
  continue;
}

if(strcmp("glMultiTexCoordP2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP2UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP2uiv"));
  continue;
}

if(strcmp("glMultiTexCoordP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP3UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP3ui"));
  continue;
}

if(strcmp("glMultiTexCoordP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP3UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP3uiv"));
  continue;
}

if(strcmp("glMultiTexCoordP4ui",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP4UIPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP4ui"));
  continue;
}

if(strcmp("glMultiTexCoordP4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORDP4UIVPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoordP4uiv"));
  continue;
}

if(strcmp("glNormalP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLNORMALP3UIPROC)glXGetProcAddress((const GLubyte*)"glNormalP3ui"));
  continue;
}

if(strcmp("glNormalP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLNORMALP3UIVPROC)glXGetProcAddress((const GLubyte*)"glNormalP3uiv"));
  continue;
}

if(strcmp("glSecondaryColorP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLORP3UIPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorP3ui"));
  continue;
}

if(strcmp("glSecondaryColorP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLORP3UIVPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColorP3uiv"));
  continue;
}

if(strcmp("glTexCoordP1ui",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP1UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP1ui"));
  continue;
}

if(strcmp("glTexCoordP1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP1UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP1uiv"));
  continue;
}

if(strcmp("glTexCoordP2ui",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP2UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP2ui"));
  continue;
}

if(strcmp("glTexCoordP2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP2UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP2uiv"));
  continue;
}

if(strcmp("glTexCoordP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP3UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP3ui"));
  continue;
}

if(strcmp("glTexCoordP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP3UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP3uiv"));
  continue;
}

if(strcmp("glTexCoordP4ui",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP4UIPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP4ui"));
  continue;
}

if(strcmp("glTexCoordP4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDP4UIVPROC)glXGetProcAddress((const GLubyte*)"glTexCoordP4uiv"));
  continue;
}

if(strcmp("glVertexAttribP1ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP1UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP1ui"));
  continue;
}

if(strcmp("glVertexAttribP1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP1UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP1uiv"));
  continue;
}

if(strcmp("glVertexAttribP2ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP2UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP2ui"));
  continue;
}

if(strcmp("glVertexAttribP2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP2UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP2uiv"));
  continue;
}

if(strcmp("glVertexAttribP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP3UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP3ui"));
  continue;
}

if(strcmp("glVertexAttribP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP3UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP3uiv"));
  continue;
}

if(strcmp("glVertexAttribP4ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP4UIPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP4ui"));
  continue;
}

if(strcmp("glVertexAttribP4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBP4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribP4uiv"));
  continue;
}

if(strcmp("glVertexP2ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP2UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP2ui"));
  continue;
}

if(strcmp("glVertexP2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP2UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP2uiv"));
  continue;
}

if(strcmp("glVertexP3ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP3UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP3ui"));
  continue;
}

if(strcmp("glVertexP3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP3UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP3uiv"));
  continue;
}

if(strcmp("glVertexP4ui",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP4UIPROC)glXGetProcAddress((const GLubyte*)"glVertexP4ui"));
  continue;
}

if(strcmp("glVertexP4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXP4UIVPROC)glXGetProcAddress((const GLubyte*)"glVertexP4uiv"));
  continue;
}

if(strcmp("glDrawArraysIndirect",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWARRAYSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysIndirect"));
  continue;
}

if(strcmp("glDrawElementsIndirect",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsIndirect"));
  continue;
}

if(strcmp("glGetUniformdv",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMDVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformdv"));
  continue;
}

if(strcmp("glUniform1d",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1DPROC)glXGetProcAddress((const GLubyte*)"glUniform1d"));
  continue;
}

if(strcmp("glUniform1dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM1DVPROC)glXGetProcAddress((const GLubyte*)"glUniform1dv"));
  continue;
}

if(strcmp("glUniform2d",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2DPROC)glXGetProcAddress((const GLubyte*)"glUniform2d"));
  continue;
}

if(strcmp("glUniform2dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM2DVPROC)glXGetProcAddress((const GLubyte*)"glUniform2dv"));
  continue;
}

if(strcmp("glUniform3d",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3DPROC)glXGetProcAddress((const GLubyte*)"glUniform3d"));
  continue;
}

if(strcmp("glUniform3dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM3DVPROC)glXGetProcAddress((const GLubyte*)"glUniform3dv"));
  continue;
}

if(strcmp("glUniform4d",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4DPROC)glXGetProcAddress((const GLubyte*)"glUniform4d"));
  continue;
}

if(strcmp("glUniform4dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORM4DVPROC)glXGetProcAddress((const GLubyte*)"glUniform4dv"));
  continue;
}

if(strcmp("glUniformMatrix2dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2dv"));
  continue;
}

if(strcmp("glUniformMatrix2x3dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2X3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x3dv"));
  continue;
}

if(strcmp("glUniformMatrix2x4dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX2X4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix2x4dv"));
  continue;
}

if(strcmp("glUniformMatrix3dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3dv"));
  continue;
}

if(strcmp("glUniformMatrix3x2dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3X2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x2dv"));
  continue;
}

if(strcmp("glUniformMatrix3x4dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX3X4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix3x4dv"));
  continue;
}

if(strcmp("glUniformMatrix4dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4dv"));
  continue;
}

if(strcmp("glUniformMatrix4x2dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4X2DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x2dv"));
  continue;
}

if(strcmp("glUniformMatrix4x3dv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMMATRIX4X3DVPROC)glXGetProcAddress((const GLubyte*)"glUniformMatrix4x3dv"));
  continue;
}

if(strcmp("glGetActiveSubroutineName",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVESUBROUTINENAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineName"));
  continue;
}

if(strcmp("glGetActiveSubroutineUniformName",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformName"));
  continue;
}

if(strcmp("glGetActiveSubroutineUniformiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformiv"));
  continue;
}

if(strcmp("glGetProgramStageiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMSTAGEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStageiv"));
  continue;
}

if(strcmp("glGetSubroutineIndex",call_name)==0){
  auto func = MakeFunc((PFNGLGETSUBROUTINEINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetSubroutineIndex"));
  continue;
}

if(strcmp("glGetSubroutineUniformLocation",call_name)==0){
  auto func = MakeFunc((PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetSubroutineUniformLocation"));
  continue;
}

if(strcmp("glGetUniformSubroutineuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETUNIFORMSUBROUTINEUIVPROC)glXGetProcAddress((const GLubyte*)"glGetUniformSubroutineuiv"));
  continue;
}

if(strcmp("glUniformSubroutinesuiv",call_name)==0){
  auto func = MakeFunc((PFNGLUNIFORMSUBROUTINESUIVPROC)glXGetProcAddress((const GLubyte*)"glUniformSubroutinesuiv"));
  continue;
}

if(strcmp("glPatchParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLPATCHPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glPatchParameterfv"));
  continue;
}

if(strcmp("glPatchParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLPATCHPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glPatchParameteri"));
  continue;
}

if(strcmp("glBindTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLBINDTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glBindTransformFeedback"));
  continue;
}

if(strcmp("glDeleteTransformFeedbacks",call_name)==0){
  auto func = MakeFunc((PFNGLDELETETRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glDeleteTransformFeedbacks"));
  continue;
}

if(strcmp("glDrawTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedback"));
  continue;
}

if(strcmp("glGenTransformFeedbacks",call_name)==0){
  auto func = MakeFunc((PFNGLGENTRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glGenTransformFeedbacks"));
  continue;
}

if(strcmp("glIsTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLISTRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glIsTransformFeedback"));
  continue;
}

if(strcmp("glPauseTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLPAUSETRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glPauseTransformFeedback"));
  continue;
}

if(strcmp("glResumeTransformFeedback",call_name)==0){
  auto func = MakeFunc((PFNGLRESUMETRANSFORMFEEDBACKPROC)glXGetProcAddress((const GLubyte*)"glResumeTransformFeedback"));
  continue;
}

if(strcmp("glBeginQueryIndexed",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINQUERYINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glBeginQueryIndexed"));
  continue;
}

if(strcmp("glDrawTransformFeedbackStream",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackStream"));
  continue;
}

if(strcmp("glEndQueryIndexed",call_name)==0){
  auto func = MakeFunc((PFNGLENDQUERYINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glEndQueryIndexed"));
  continue;
}

if(strcmp("glGetQueryIndexediv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYINDEXEDIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryIndexediv"));
  continue;
}

if(strcmp("glClearDepthf",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARDEPTHFPROC)glXGetProcAddress((const GLubyte*)"glClearDepthf"));
  continue;
}

if(strcmp("glDepthRangef",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEFPROC)glXGetProcAddress((const GLubyte*)"glDepthRangef"));
  continue;
}

if(strcmp("glGetShaderPrecisionFormat",call_name)==0){
  auto func = MakeFunc((PFNGLGETSHADERPRECISIONFORMATPROC)glXGetProcAddress((const GLubyte*)"glGetShaderPrecisionFormat"));
  continue;
}

if(strcmp("glReleaseShaderCompiler",call_name)==0){
  auto func = MakeFunc((PFNGLRELEASESHADERCOMPILERPROC)glXGetProcAddress((const GLubyte*)"glReleaseShaderCompiler"));
  continue;
}

if(strcmp("glShaderBinary",call_name)==0){
  auto func = MakeFunc((PFNGLSHADERBINARYPROC)glXGetProcAddress((const GLubyte*)"glShaderBinary"));
  continue;
}

if(strcmp("glGetProgramBinary",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMBINARYPROC)glXGetProcAddress((const GLubyte*)"glGetProgramBinary"));
  continue;
}

if(strcmp("glProgramBinary",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMBINARYPROC)glXGetProcAddress((const GLubyte*)"glProgramBinary"));
  continue;
}

if(strcmp("glProgramParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glProgramParameteri"));
  continue;
}

if(strcmp("glGetVertexAttribLdv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBLDVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribLdv"));
  continue;
}

if(strcmp("glVertexAttribL1d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL1DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL1d"));
  continue;
}

if(strcmp("glVertexAttribL1dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL1DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL1dv"));
  continue;
}

if(strcmp("glVertexAttribL2d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL2DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL2d"));
  continue;
}

if(strcmp("glVertexAttribL2dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL2DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL2dv"));
  continue;
}

if(strcmp("glVertexAttribL3d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL3DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL3d"));
  continue;
}

if(strcmp("glVertexAttribL3dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL3DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL3dv"));
  continue;
}

if(strcmp("glVertexAttribL4d",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL4DPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL4d"));
  continue;
}

if(strcmp("glVertexAttribL4dv",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBL4DVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribL4dv"));
  continue;
}

if(strcmp("glVertexAttribLPointer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBLPOINTERPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribLPointer"));
  continue;
}

if(strcmp("glDepthRangeArrayv",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEARRAYVPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeArrayv"));
  continue;
}

if(strcmp("glDepthRangeIndexed",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeIndexed"));
  continue;
}

if(strcmp("glGetDoublei_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETDOUBLEI_VPROC)glXGetProcAddress((const GLubyte*)"glGetDoublei_v"));
  continue;
}

if(strcmp("glGetFloati_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETFLOATI_VPROC)glXGetProcAddress((const GLubyte*)"glGetFloati_v"));
  continue;
}

if(strcmp("glScissorArrayv",call_name)==0){
  auto func = MakeFunc((PFNGLSCISSORARRAYVPROC)glXGetProcAddress((const GLubyte*)"glScissorArrayv"));
  continue;
}

if(strcmp("glScissorIndexed",call_name)==0){
  auto func = MakeFunc((PFNGLSCISSORINDEXEDPROC)glXGetProcAddress((const GLubyte*)"glScissorIndexed"));
  continue;
}

if(strcmp("glScissorIndexedv",call_name)==0){
  auto func = MakeFunc((PFNGLSCISSORINDEXEDVPROC)glXGetProcAddress((const GLubyte*)"glScissorIndexedv"));
  continue;
}

if(strcmp("glViewportArrayv",call_name)==0){
  auto func = MakeFunc((PFNGLVIEWPORTARRAYVPROC)glXGetProcAddress((const GLubyte*)"glViewportArrayv"));
  continue;
}

if(strcmp("glViewportIndexedf",call_name)==0){
  auto func = MakeFunc((PFNGLVIEWPORTINDEXEDFPROC)glXGetProcAddress((const GLubyte*)"glViewportIndexedf"));
  continue;
}

if(strcmp("glViewportIndexedfv",call_name)==0){
  auto func = MakeFunc((PFNGLVIEWPORTINDEXEDFVPROC)glXGetProcAddress((const GLubyte*)"glViewportIndexedfv"));
  continue;
}

if(strcmp("glGetGraphicsResetStatusARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETGRAPHICSRESETSTATUSARBPROC)glXGetProcAddress((const GLubyte*)"glGetGraphicsResetStatusARB"));
  continue;
}

if(strcmp("glGetnColorTableARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNCOLORTABLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnColorTableARB"));
  continue;
}

if(strcmp("glGetnCompressedTexImageARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnCompressedTexImageARB"));
  continue;
}

if(strcmp("glGetnConvolutionFilterARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNCONVOLUTIONFILTERARBPROC)glXGetProcAddress((const GLubyte*)"glGetnConvolutionFilterARB"));
  continue;
}

if(strcmp("glGetnHistogramARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNHISTOGRAMARBPROC)glXGetProcAddress((const GLubyte*)"glGetnHistogramARB"));
  continue;
}

if(strcmp("glGetnMapdvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNMAPDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapdvARB"));
  continue;
}

if(strcmp("glGetnMapfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNMAPFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapfvARB"));
  continue;
}

if(strcmp("glGetnMapivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNMAPIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMapivARB"));
  continue;
}

if(strcmp("glGetnMinmaxARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNMINMAXARBPROC)glXGetProcAddress((const GLubyte*)"glGetnMinmaxARB"));
  continue;
}

if(strcmp("glGetnPixelMapfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNPIXELMAPFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapfvARB"));
  continue;
}

if(strcmp("glGetnPixelMapuivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNPIXELMAPUIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapuivARB"));
  continue;
}

if(strcmp("glGetnPixelMapusvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNPIXELMAPUSVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPixelMapusvARB"));
  continue;
}

if(strcmp("glGetnPolygonStippleARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNPOLYGONSTIPPLEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnPolygonStippleARB"));
  continue;
}

if(strcmp("glGetnSeparableFilterARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNSEPARABLEFILTERARBPROC)glXGetProcAddress((const GLubyte*)"glGetnSeparableFilterARB"));
  continue;
}

if(strcmp("glGetnTexImageARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNTEXIMAGEARBPROC)glXGetProcAddress((const GLubyte*)"glGetnTexImageARB"));
  continue;
}

if(strcmp("glGetnUniformdvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNUNIFORMDVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformdvARB"));
  continue;
}

if(strcmp("glGetnUniformfvARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNUNIFORMFVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformfvARB"));
  continue;
}

if(strcmp("glGetnUniformivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNUNIFORMIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformivARB"));
  continue;
}

if(strcmp("glGetnUniformuivARB",call_name)==0){
  auto func = MakeFunc((PFNGLGETNUNIFORMUIVARBPROC)glXGetProcAddress((const GLubyte*)"glGetnUniformuivARB"));
  continue;
}

if(strcmp("glReadnPixelsARB",call_name)==0){
  auto func = MakeFunc((PFNGLREADNPIXELSARBPROC)glXGetProcAddress((const GLubyte*)"glReadnPixelsARB"));
  continue;
}

if(strcmp("glDrawArraysInstancedBaseInstance",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawArraysInstancedBaseInstance"));
  continue;
}

if(strcmp("glDrawElementsInstancedBaseInstance",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseInstance"));
  continue;
}

if(strcmp("glDrawElementsInstancedBaseVertexBaseInstance",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)glXGetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertexBaseInstance"));
  continue;
}

if(strcmp("glDrawTransformFeedbackInstanced",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackInstanced"));
  continue;
}

if(strcmp("glDrawTransformFeedbackStreamInstanced",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glXGetProcAddress((const GLubyte*)"glDrawTransformFeedbackStreamInstanced"));
  continue;
}

if(strcmp("glGetInternalformativ",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTERNALFORMATIVPROC)glXGetProcAddress((const GLubyte*)"glGetInternalformativ"));
  continue;
}

if(strcmp("glGetActiveAtomicCounterBufferiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glGetActiveAtomicCounterBufferiv"));
  continue;
}

if(strcmp("glBindImageTexture",call_name)==0){
  auto func = MakeFunc((PFNGLBINDIMAGETEXTUREPROC)glXGetProcAddress((const GLubyte*)"glBindImageTexture"));
  continue;
}

if(strcmp("glMemoryBarrier",call_name)==0){
  auto func = MakeFunc((PFNGLMEMORYBARRIERPROC)glXGetProcAddress((const GLubyte*)"glMemoryBarrier"));
  continue;
}

if(strcmp("glTexStorage1D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSTORAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage1D"));
  continue;
}

if(strcmp("glTexStorage2D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSTORAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage2D"));
  continue;
}

if(strcmp("glTexStorage3D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSTORAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTexStorage3D"));
  continue;
}

if(strcmp("glTextureStorage1DEXT",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE1DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage1DEXT"));
  continue;
}

if(strcmp("glTextureStorage2DEXT",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE2DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2DEXT"));
  continue;
}

if(strcmp("glTextureStorage3DEXT",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE3DEXTPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3DEXT"));
  continue;
}

if(strcmp("glClearBufferData",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glClearBufferData"));
  continue;
}

if(strcmp("glClearBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glClearBufferSubData"));
  continue;
}

if(strcmp("glDispatchCompute",call_name)==0){
  auto func = MakeFunc((PFNGLDISPATCHCOMPUTEPROC)glXGetProcAddress((const GLubyte*)"glDispatchCompute"));
  continue;
}

if(strcmp("glDispatchComputeIndirect",call_name)==0){
  auto func = MakeFunc((PFNGLDISPATCHCOMPUTEINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glDispatchComputeIndirect"));
  continue;
}

if(strcmp("glCopyImageSubData",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYIMAGESUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyImageSubData"));
  continue;
}

if(strcmp("glTextureView",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREVIEWPROC)glXGetProcAddress((const GLubyte*)"glTextureView"));
  continue;
}

if(strcmp("glBindVertexBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBINDVERTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBindVertexBuffer"));
  continue;
}

if(strcmp("glVertexAttribBinding",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBBINDINGPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribBinding"));
  continue;
}

if(strcmp("glVertexAttribFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribFormat"));
  continue;
}

if(strcmp("glVertexAttribIFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBIFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribIFormat"));
  continue;
}

if(strcmp("glVertexAttribLFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBLFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribLFormat"));
  continue;
}

if(strcmp("glVertexBindingDivisor",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXBINDINGDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexBindingDivisor"));
  continue;
}

if(strcmp("glFramebufferParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLFRAMEBUFFERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glFramebufferParameteri"));
  continue;
}

if(strcmp("glGetFramebufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETFRAMEBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetFramebufferParameteriv"));
  continue;
}

if(strcmp("glGetInternalformati64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETINTERNALFORMATI64VPROC)glXGetProcAddress((const GLubyte*)"glGetInternalformati64v"));
  continue;
}

if(strcmp("glMultiDrawArraysIndirect",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWARRAYSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArraysIndirect"));
  continue;
}

if(strcmp("glMultiDrawElementsIndirect",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWELEMENTSINDIRECTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsIndirect"));
  continue;
}

if(strcmp("glGetProgramInterfaceiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMINTERFACEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramInterfaceiv"));
  continue;
}

if(strcmp("glGetProgramResourceIndex",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMRESOURCEINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceIndex"));
  continue;
}

if(strcmp("glGetProgramResourceLocation",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMRESOURCELOCATIONPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceLocation"));
  continue;
}

if(strcmp("glGetProgramResourceLocationIndex",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceLocationIndex"));
  continue;
}

if(strcmp("glGetProgramResourceName",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMRESOURCENAMEPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceName"));
  continue;
}

if(strcmp("glGetProgramResourceiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMRESOURCEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramResourceiv"));
  continue;
}

if(strcmp("glShaderStorageBlockBinding",call_name)==0){
  auto func = MakeFunc((PFNGLSHADERSTORAGEBLOCKBINDINGPROC)glXGetProcAddress((const GLubyte*)"glShaderStorageBlockBinding"));
  continue;
}

if(strcmp("glTexBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLTEXBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTexBufferRange"));
  continue;
}

if(strcmp("glTexStorage2DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSTORAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexStorage2DMultisample"));
  continue;
}

if(strcmp("glTexStorage3DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXSTORAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTexStorage3DMultisample"));
  continue;
}

if(strcmp("glBufferStorage",call_name)==0){
  auto func = MakeFunc((PFNGLBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glBufferStorage"));
  continue;
}

if(strcmp("glClearTexImage",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARTEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glClearTexImage"));
  continue;
}

if(strcmp("glClearTexSubImage",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARTEXSUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glClearTexSubImage"));
  continue;
}

if(strcmp("glBindBuffersBase",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFERSBASEPROC)glXGetProcAddress((const GLubyte*)"glBindBuffersBase"));
  continue;
}

if(strcmp("glBindBuffersRange",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFERSRANGEPROC)glXGetProcAddress((const GLubyte*)"glBindBuffersRange"));
  continue;
}

if(strcmp("glBindImageTextures",call_name)==0){
  auto func = MakeFunc((PFNGLBINDIMAGETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glBindImageTextures"));
  continue;
}

if(strcmp("glBindSamplers",call_name)==0){
  auto func = MakeFunc((PFNGLBINDSAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glBindSamplers"));
  continue;
}

if(strcmp("glBindTextures",call_name)==0){
  auto func = MakeFunc((PFNGLBINDTEXTURESPROC)glXGetProcAddress((const GLubyte*)"glBindTextures"));
  continue;
}

if(strcmp("glBindVertexBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLBINDVERTEXBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glBindVertexBuffers"));
  continue;
}

if(strcmp("glDispatchComputeGroupSizeARB",call_name)==0){
  auto func = MakeFunc((PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)glXGetProcAddress((const GLubyte*)"glDispatchComputeGroupSizeARB"));
  continue;
}

if(strcmp("glMultiDrawArraysIndirectCountARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawArraysIndirectCountARB"));
  continue;
}

if(strcmp("glMultiDrawElementsIndirectCountARB",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsIndirectCountARB"));
  continue;
}

if(strcmp("glClipControl",call_name)==0){
  auto func = MakeFunc((PFNGLCLIPCONTROLPROC)glXGetProcAddress((const GLubyte*)"glClipControl"));
  continue;
}

if(strcmp("glBindTextureUnit",call_name)==0){
  auto func = MakeFunc((PFNGLBINDTEXTUREUNITPROC)glXGetProcAddress((const GLubyte*)"glBindTextureUnit"));
  continue;
}

if(strcmp("glBlitNamedFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLBLITNAMEDFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glBlitNamedFramebuffer"));
  continue;
}

if(strcmp("glCheckNamedFramebufferStatus",call_name)==0){
  auto func = MakeFunc((PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)glXGetProcAddress((const GLubyte*)"glCheckNamedFramebufferStatus"));
  continue;
}

if(strcmp("glClearNamedBufferData",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glClearNamedBufferData"));
  continue;
}

if(strcmp("glClearNamedBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glClearNamedBufferSubData"));
  continue;
}

if(strcmp("glClearNamedFramebufferfi",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferfi"));
  continue;
}

if(strcmp("glClearNamedFramebufferfv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferfv"));
  continue;
}

if(strcmp("glClearNamedFramebufferiv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferiv"));
  continue;
}

if(strcmp("glClearNamedFramebufferuiv",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)glXGetProcAddress((const GLubyte*)"glClearNamedFramebufferuiv"));
  continue;
}

if(strcmp("glCompressedTextureSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage1D"));
  continue;
}

if(strcmp("glCompressedTextureSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage2D"));
  continue;
}

if(strcmp("glCompressedTextureSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCompressedTextureSubImage3D"));
  continue;
}

if(strcmp("glCopyNamedBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glCopyNamedBufferSubData"));
  continue;
}

if(strcmp("glCopyTextureSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage1D"));
  continue;
}

if(strcmp("glCopyTextureSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage2D"));
  continue;
}

if(strcmp("glCopyTextureSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLCOPYTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glCopyTextureSubImage3D"));
  continue;
}

if(strcmp("glCreateBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateBuffers"));
  continue;
}

if(strcmp("glCreateFramebuffers",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEFRAMEBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateFramebuffers"));
  continue;
}

if(strcmp("glCreateProgramPipelines",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glCreateProgramPipelines"));
  continue;
}

if(strcmp("glCreateQueries",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEQUERIESPROC)glXGetProcAddress((const GLubyte*)"glCreateQueries"));
  continue;
}

if(strcmp("glCreateRenderbuffers",call_name)==0){
  auto func = MakeFunc((PFNGLCREATERENDERBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glCreateRenderbuffers"));
  continue;
}

if(strcmp("glCreateSamplers",call_name)==0){
  auto func = MakeFunc((PFNGLCREATESAMPLERSPROC)glXGetProcAddress((const GLubyte*)"glCreateSamplers"));
  continue;
}

if(strcmp("glCreateTextures",call_name)==0){
  auto func = MakeFunc((PFNGLCREATETEXTURESPROC)glXGetProcAddress((const GLubyte*)"glCreateTextures"));
  continue;
}

if(strcmp("glCreateTransformFeedbacks",call_name)==0){
  auto func = MakeFunc((PFNGLCREATETRANSFORMFEEDBACKSPROC)glXGetProcAddress((const GLubyte*)"glCreateTransformFeedbacks"));
  continue;
}

if(strcmp("glCreateVertexArrays",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEVERTEXARRAYSPROC)glXGetProcAddress((const GLubyte*)"glCreateVertexArrays"));
  continue;
}

if(strcmp("glDisableVertexArrayAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLDISABLEVERTEXARRAYATTRIBPROC)glXGetProcAddress((const GLubyte*)"glDisableVertexArrayAttrib"));
  continue;
}

if(strcmp("glEnableVertexArrayAttrib",call_name)==0){
  auto func = MakeFunc((PFNGLENABLEVERTEXARRAYATTRIBPROC)glXGetProcAddress((const GLubyte*)"glEnableVertexArrayAttrib"));
  continue;
}

if(strcmp("glFlushMappedNamedBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedNamedBufferRange"));
  continue;
}

if(strcmp("glGenerateTextureMipmap",call_name)==0){
  auto func = MakeFunc((PFNGLGENERATETEXTUREMIPMAPPROC)glXGetProcAddress((const GLubyte*)"glGenerateTextureMipmap"));
  continue;
}

if(strcmp("glGetCompressedTextureImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTextureImage"));
  continue;
}

if(strcmp("glGetNamedBufferParameteri64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferParameteri64v"));
  continue;
}

if(strcmp("glGetNamedBufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferParameteriv"));
  continue;
}

if(strcmp("glGetNamedBufferPointerv",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDBUFFERPOINTERVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferPointerv"));
  continue;
}

if(strcmp("glGetNamedBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glGetNamedBufferSubData"));
  continue;
}

if(strcmp("glGetNamedFramebufferAttachmentParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedFramebufferAttachmentParameteriv"));
  continue;
}

if(strcmp("glGetNamedFramebufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedFramebufferParameteriv"));
  continue;
}

if(strcmp("glGetNamedRenderbufferParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetNamedRenderbufferParameteriv"));
  continue;
}

if(strcmp("glGetQueryBufferObjecti64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYBUFFEROBJECTI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjecti64v"));
  continue;
}

if(strcmp("glGetQueryBufferObjectiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYBUFFEROBJECTIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectiv"));
  continue;
}

if(strcmp("glGetQueryBufferObjectui64v",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYBUFFEROBJECTUI64VPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectui64v"));
  continue;
}

if(strcmp("glGetQueryBufferObjectuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETQUERYBUFFEROBJECTUIVPROC)glXGetProcAddress((const GLubyte*)"glGetQueryBufferObjectuiv"));
  continue;
}

if(strcmp("glGetTextureImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTUREIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTextureImage"));
  continue;
}

if(strcmp("glGetTextureLevelParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTURELEVELPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureLevelParameterfv"));
  continue;
}

if(strcmp("glGetTextureLevelParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTURELEVELPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureLevelParameteriv"));
  continue;
}

if(strcmp("glGetTextureParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTUREPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterIiv"));
  continue;
}

if(strcmp("glGetTextureParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTUREPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterIuiv"));
  continue;
}

if(strcmp("glGetTextureParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTUREPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameterfv"));
  continue;
}

if(strcmp("glGetTextureParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTUREPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glGetTextureParameteriv"));
  continue;
}

if(strcmp("glGetTransformFeedbacki64_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETTRANSFORMFEEDBACKI64_VPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbacki64_v"));
  continue;
}

if(strcmp("glGetTransformFeedbacki_v",call_name)==0){
  auto func = MakeFunc((PFNGLGETTRANSFORMFEEDBACKI_VPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbacki_v"));
  continue;
}

if(strcmp("glGetTransformFeedbackiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTRANSFORMFEEDBACKIVPROC)glXGetProcAddress((const GLubyte*)"glGetTransformFeedbackiv"));
  continue;
}

if(strcmp("glGetVertexArrayIndexed64iv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXARRAYINDEXED64IVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayIndexed64iv"));
  continue;
}

if(strcmp("glGetVertexArrayIndexediv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXARRAYINDEXEDIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayIndexediv"));
  continue;
}

if(strcmp("glGetVertexArrayiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXARRAYIVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexArrayiv"));
  continue;
}

if(strcmp("glInvalidateNamedFramebufferData",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateNamedFramebufferData"));
  continue;
}

if(strcmp("glInvalidateNamedFramebufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateNamedFramebufferSubData"));
  continue;
}

if(strcmp("glMapNamedBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLMAPNAMEDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glMapNamedBuffer"));
  continue;
}

if(strcmp("glMapNamedBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLMAPNAMEDBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glMapNamedBufferRange"));
  continue;
}

if(strcmp("glNamedBufferData",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferData"));
  continue;
}

if(strcmp("glNamedBufferStorage",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferStorage"));
  continue;
}

if(strcmp("glNamedBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glNamedBufferSubData"));
  continue;
}

if(strcmp("glNamedFramebufferDrawBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferDrawBuffer"));
  continue;
}

if(strcmp("glNamedFramebufferDrawBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferDrawBuffers"));
  continue;
}

if(strcmp("glNamedFramebufferParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferParameteri"));
  continue;
}

if(strcmp("glNamedFramebufferReadBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferReadBuffer"));
  continue;
}

if(strcmp("glNamedFramebufferRenderbuffer",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferRenderbuffer"));
  continue;
}

if(strcmp("glNamedFramebufferTexture",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferTexture"));
  continue;
}

if(strcmp("glNamedFramebufferTextureLayer",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)glXGetProcAddress((const GLubyte*)"glNamedFramebufferTextureLayer"));
  continue;
}

if(strcmp("glNamedRenderbufferStorage",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDRENDERBUFFERSTORAGEPROC)glXGetProcAddress((const GLubyte*)"glNamedRenderbufferStorage"));
  continue;
}

if(strcmp("glNamedRenderbufferStorageMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glNamedRenderbufferStorageMultisample"));
  continue;
}

if(strcmp("glTextureBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREBUFFERPROC)glXGetProcAddress((const GLubyte*)"glTextureBuffer"));
  continue;
}

if(strcmp("glTextureBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTextureBufferRange"));
  continue;
}

if(strcmp("glTextureParameterIiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERIIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterIiv"));
  continue;
}

if(strcmp("glTextureParameterIuiv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERIUIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterIuiv"));
  continue;
}

if(strcmp("glTextureParameterf",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERFPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterf"));
  continue;
}

if(strcmp("glTextureParameterfv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERFVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameterfv"));
  continue;
}

if(strcmp("glTextureParameteri",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERIPROC)glXGetProcAddress((const GLubyte*)"glTextureParameteri"));
  continue;
}

if(strcmp("glTextureParameteriv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREPARAMETERIVPROC)glXGetProcAddress((const GLubyte*)"glTextureParameteriv"));
  continue;
}

if(strcmp("glTextureStorage1D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage1D"));
  continue;
}

if(strcmp("glTextureStorage2D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2D"));
  continue;
}

if(strcmp("glTextureStorage2DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage2DMultisample"));
  continue;
}

if(strcmp("glTextureStorage3D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3D"));
  continue;
}

if(strcmp("glTextureStorage3DMultisample",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)glXGetProcAddress((const GLubyte*)"glTextureStorage3DMultisample"));
  continue;
}

if(strcmp("glTextureSubImage1D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESUBIMAGE1DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage1D"));
  continue;
}

if(strcmp("glTextureSubImage2D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESUBIMAGE2DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage2D"));
  continue;
}

if(strcmp("glTextureSubImage3D",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTURESUBIMAGE3DPROC)glXGetProcAddress((const GLubyte*)"glTextureSubImage3D"));
  continue;
}

if(strcmp("glTransformFeedbackBufferBase",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackBufferBase"));
  continue;
}

if(strcmp("glTransformFeedbackBufferRange",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)glXGetProcAddress((const GLubyte*)"glTransformFeedbackBufferRange"));
  continue;
}

if(strcmp("glUnmapNamedBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLUNMAPNAMEDBUFFERPROC)glXGetProcAddress((const GLubyte*)"glUnmapNamedBuffer"));
  continue;
}

if(strcmp("glVertexArrayAttribBinding",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYATTRIBBINDINGPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribBinding"));
  continue;
}

if(strcmp("glVertexArrayAttribFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYATTRIBFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribFormat"));
  continue;
}

if(strcmp("glVertexArrayAttribIFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYATTRIBIFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribIFormat"));
  continue;
}

if(strcmp("glVertexArrayAttribLFormat",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYATTRIBLFORMATPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayAttribLFormat"));
  continue;
}

if(strcmp("glVertexArrayBindingDivisor",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYBINDINGDIVISORPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayBindingDivisor"));
  continue;
}

if(strcmp("glVertexArrayElementBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYELEMENTBUFFERPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayElementBuffer"));
  continue;
}

if(strcmp("glVertexArrayVertexBuffer",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYVERTEXBUFFERPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayVertexBuffer"));
  continue;
}

if(strcmp("glVertexArrayVertexBuffers",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXARRAYVERTEXBUFFERSPROC)glXGetProcAddress((const GLubyte*)"glVertexArrayVertexBuffers"));
  continue;
}

if(strcmp("glGetCompressedTextureSubImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetCompressedTextureSubImage"));
  continue;
}

if(strcmp("glGetTextureSubImage",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXTURESUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glGetTextureSubImage"));
  continue;
}

if(strcmp("glInvalidateBufferData",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATEBUFFERDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateBufferData"));
  continue;
}

if(strcmp("glInvalidateBufferSubData",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATEBUFFERSUBDATAPROC)glXGetProcAddress((const GLubyte*)"glInvalidateBufferSubData"));
  continue;
}

if(strcmp("glInvalidateFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATEFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glInvalidateFramebuffer"));
  continue;
}

if(strcmp("glInvalidateSubFramebuffer",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATESUBFRAMEBUFFERPROC)glXGetProcAddress((const GLubyte*)"glInvalidateSubFramebuffer"));
  continue;
}

if(strcmp("glInvalidateTexImage",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATETEXIMAGEPROC)glXGetProcAddress((const GLubyte*)"glInvalidateTexImage"));
  continue;
}

if(strcmp("glInvalidateTexSubImage",call_name)==0){
  auto func = MakeFunc((PFNGLINVALIDATETEXSUBIMAGEPROC)glXGetProcAddress((const GLubyte*)"glInvalidateTexSubImage"));
  continue;
}

if(strcmp("glPolygonOffsetEXT",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONOFFSETEXTPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetEXT"));
  continue;
}

if(strcmp("glDrawTexfOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXFOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexfOES"));
  continue;
}

if(strcmp("glDrawTexfvOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXFVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexfvOES"));
  continue;
}

if(strcmp("glDrawTexiOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXIOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexiOES"));
  continue;
}

if(strcmp("glDrawTexivOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXIVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexivOES"));
  continue;
}

if(strcmp("glDrawTexsOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXSOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexsOES"));
  continue;
}

if(strcmp("glDrawTexsvOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXSVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexsvOES"));
  continue;
}

if(strcmp("glDrawTexxOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXXOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexxOES"));
  continue;
}

if(strcmp("glDrawTexxvOES",call_name)==0){
  auto func = MakeFunc((PFNGLDRAWTEXXVOESPROC)glXGetProcAddress((const GLubyte*)"glDrawTexxvOES"));
  continue;
}

if(strcmp("glPointSizePointerOES",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTSIZEPOINTEROESPROC)glXGetProcAddress((const GLubyte*)"glPointSizePointerOES"));
  continue;
}

if(strcmp("glQueryMatrixxOES",call_name)==0){
  auto func = MakeFunc((PFNGLQUERYMATRIXXOESPROC)glXGetProcAddress((const GLubyte*)"glQueryMatrixxOES"));
  continue;
}

if(strcmp("glSampleMaskSGIS",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLEMASKSGISPROC)glXGetProcAddress((const GLubyte*)"glSampleMaskSGIS"));
  continue;
}

if(strcmp("glSamplePatternSGIS",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLEPATTERNSGISPROC)glXGetProcAddress((const GLubyte*)"glSamplePatternSGIS"));
  continue;
}

if(strcmp("glColorPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glColorPointerEXT"));
  continue;
}

if(strcmp("glEdgeFlagPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLEDGEFLAGPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glEdgeFlagPointerEXT"));
  continue;
}

if(strcmp("glIndexPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLINDEXPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glIndexPointerEXT"));
  continue;
}

if(strcmp("glNormalPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLNORMALPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glNormalPointerEXT"));
  continue;
}

if(strcmp("glTexCoordPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLTEXCOORDPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glTexCoordPointerEXT"));
  continue;
}

if(strcmp("glVertexPointerEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXPOINTEREXTPROC)glXGetProcAddress((const GLubyte*)"glVertexPointerEXT"));
  continue;
}

if(strcmp("glDiscardFramebufferEXT",call_name)==0){
  auto func = MakeFunc((PFNGLDISCARDFRAMEBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glDiscardFramebufferEXT"));
  continue;
}

if(strcmp("glActiveShaderProgram",call_name)==0){
  auto func = MakeFunc((PFNGLACTIVESHADERPROGRAMPROC)glXGetProcAddress((const GLubyte*)"glActiveShaderProgram"));
  continue;
}

if(strcmp("glBindProgramPipeline",call_name)==0){
  auto func = MakeFunc((PFNGLBINDPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glBindProgramPipeline"));
  continue;
}

if(strcmp("glCreateShaderProgramv",call_name)==0){
  auto func = MakeFunc((PFNGLCREATESHADERPROGRAMVPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderProgramv"));
  continue;
}

if(strcmp("glDeleteProgramPipelines",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glDeleteProgramPipelines"));
  continue;
}

if(strcmp("glGenProgramPipelines",call_name)==0){
  auto func = MakeFunc((PFNGLGENPROGRAMPIPELINESPROC)glXGetProcAddress((const GLubyte*)"glGenProgramPipelines"));
  continue;
}

if(strcmp("glGetProgramPipelineInfoLog",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMPIPELINEINFOLOGPROC)glXGetProcAddress((const GLubyte*)"glGetProgramPipelineInfoLog"));
  continue;
}

if(strcmp("glGetProgramPipelineiv",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMPIPELINEIVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramPipelineiv"));
  continue;
}

if(strcmp("glIsProgramPipeline",call_name)==0){
  auto func = MakeFunc((PFNGLISPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glIsProgramPipeline"));
  continue;
}

if(strcmp("glLockArraysEXT",call_name)==0){
  auto func = MakeFunc((PFNGLLOCKARRAYSEXTPROC)glXGetProcAddress((const GLubyte*)"glLockArraysEXT"));
  continue;
}

if(strcmp("glProgramUniform1d",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1d"));
  continue;
}

if(strcmp("glProgramUniform1dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1dv"));
  continue;
}

if(strcmp("glProgramUniform1f",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1f"));
  continue;
}

if(strcmp("glProgramUniform1fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1fv"));
  continue;
}

if(strcmp("glProgramUniform1i",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1i"));
  continue;
}

if(strcmp("glProgramUniform1iv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1iv"));
  continue;
}

if(strcmp("glProgramUniform1ui",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1ui"));
  continue;
}

if(strcmp("glProgramUniform1uiv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM1UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform1uiv"));
  continue;
}

if(strcmp("glProgramUniform2d",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2d"));
  continue;
}

if(strcmp("glProgramUniform2dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2dv"));
  continue;
}

if(strcmp("glProgramUniform2f",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2f"));
  continue;
}

if(strcmp("glProgramUniform2fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2fv"));
  continue;
}

if(strcmp("glProgramUniform2i",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2i"));
  continue;
}

if(strcmp("glProgramUniform2iv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2iv"));
  continue;
}

if(strcmp("glProgramUniform2ui",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2ui"));
  continue;
}

if(strcmp("glProgramUniform2uiv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM2UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform2uiv"));
  continue;
}

if(strcmp("glProgramUniform3d",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3d"));
  continue;
}

if(strcmp("glProgramUniform3dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3dv"));
  continue;
}

if(strcmp("glProgramUniform3f",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3f"));
  continue;
}

if(strcmp("glProgramUniform3fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3fv"));
  continue;
}

if(strcmp("glProgramUniform3i",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3i"));
  continue;
}

if(strcmp("glProgramUniform3iv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3iv"));
  continue;
}

if(strcmp("glProgramUniform3ui",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3ui"));
  continue;
}

if(strcmp("glProgramUniform3uiv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM3UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform3uiv"));
  continue;
}

if(strcmp("glProgramUniform4d",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4DPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4d"));
  continue;
}

if(strcmp("glProgramUniform4dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4dv"));
  continue;
}

if(strcmp("glProgramUniform4f",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4FPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4f"));
  continue;
}

if(strcmp("glProgramUniform4fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4fv"));
  continue;
}

if(strcmp("glProgramUniform4i",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4IPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4i"));
  continue;
}

if(strcmp("glProgramUniform4iv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4IVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4iv"));
  continue;
}

if(strcmp("glProgramUniform4ui",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4UIPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4ui"));
  continue;
}

if(strcmp("glProgramUniform4uiv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORM4UIVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniform4uiv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2x3dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2x3fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2x4dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix2x4fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3x2dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3x2fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3x4dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix3x4fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4x2dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4x2fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2fv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4x3dv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3dv"));
  continue;
}

if(strcmp("glProgramUniformMatrix4x3fv",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)glXGetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3fv"));
  continue;
}

if(strcmp("glUnlockArraysEXT",call_name)==0){
  auto func = MakeFunc((PFNGLUNLOCKARRAYSEXTPROC)glXGetProcAddress((const GLubyte*)"glUnlockArraysEXT"));
  continue;
}

if(strcmp("glUseProgramStages",call_name)==0){
  auto func = MakeFunc((PFNGLUSEPROGRAMSTAGESPROC)glXGetProcAddress((const GLubyte*)"glUseProgramStages"));
  continue;
}

if(strcmp("glValidateProgramPipeline",call_name)==0){
  auto func = MakeFunc((PFNGLVALIDATEPROGRAMPIPELINEPROC)glXGetProcAddress((const GLubyte*)"glValidateProgramPipeline"));
  continue;
}

if(strcmp("glDebugMessageCallback",call_name)==0){
  auto func = MakeFunc((PFNGLDEBUGMESSAGECALLBACKPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageCallback"));
  continue;
}

if(strcmp("glDebugMessageControl",call_name)==0){
  auto func = MakeFunc((PFNGLDEBUGMESSAGECONTROLPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageControl"));
  continue;
}

if(strcmp("glDebugMessageInsert",call_name)==0){
  auto func = MakeFunc((PFNGLDEBUGMESSAGEINSERTPROC)glXGetProcAddress((const GLubyte*)"glDebugMessageInsert"));
  continue;
}

if(strcmp("glGetDebugMessageLog",call_name)==0){
  auto func = MakeFunc((PFNGLGETDEBUGMESSAGELOGPROC)glXGetProcAddress((const GLubyte*)"glGetDebugMessageLog"));
  continue;
}

if(strcmp("glGetObjectLabel",call_name)==0){
  auto func = MakeFunc((PFNGLGETOBJECTLABELPROC)glXGetProcAddress((const GLubyte*)"glGetObjectLabel"));
  continue;
}

if(strcmp("glGetObjectPtrLabel",call_name)==0){
  auto func = MakeFunc((PFNGLGETOBJECTPTRLABELPROC)glXGetProcAddress((const GLubyte*)"glGetObjectPtrLabel"));
  continue;
}

if(strcmp("glObjectLabel",call_name)==0){
  auto func = MakeFunc((PFNGLOBJECTLABELPROC)glXGetProcAddress((const GLubyte*)"glObjectLabel"));
  continue;
}

if(strcmp("glObjectPtrLabel",call_name)==0){
  auto func = MakeFunc((PFNGLOBJECTPTRLABELPROC)glXGetProcAddress((const GLubyte*)"glObjectPtrLabel"));
  continue;
}

if(strcmp("glPopDebugGroup",call_name)==0){
  auto func = MakeFunc((PFNGLPOPDEBUGGROUPPROC)glXGetProcAddress((const GLubyte*)"glPopDebugGroup"));
  continue;
}

if(strcmp("glPushDebugGroup",call_name)==0){
  auto func = MakeFunc((PFNGLPUSHDEBUGGROUPPROC)glXGetProcAddress((const GLubyte*)"glPushDebugGroup"));
  continue;
}

if(strcmp("glSecondaryColor3fEXT",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3FEXTPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3fEXT"));
  continue;
}

if(strcmp("glSecondaryColor3fvEXT",call_name)==0){
  auto func = MakeFunc((PFNGLSECONDARYCOLOR3FVEXTPROC)glXGetProcAddress((const GLubyte*)"glSecondaryColor3fvEXT"));
  continue;
}

if(strcmp("glMultiDrawElementsEXT",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIDRAWELEMENTSEXTPROC)glXGetProcAddress((const GLubyte*)"glMultiDrawElementsEXT"));
  continue;
}

if(strcmp("glFogCoordfEXT",call_name)==0){
  auto func = MakeFunc((PFNGLFOGCOORDFEXTPROC)glXGetProcAddress((const GLubyte*)"glFogCoordfEXT"));
  continue;
}

if(strcmp("glFogCoordfvEXT",call_name)==0){
  auto func = MakeFunc((PFNGLFOGCOORDFVEXTPROC)glXGetProcAddress((const GLubyte*)"glFogCoordfvEXT"));
  continue;
}

if(strcmp("glResizeBuffersMESA",call_name)==0){
  auto func = MakeFunc((PFNGLRESIZEBUFFERSMESAPROC)glXGetProcAddress((const GLubyte*)"glResizeBuffersMESA"));
  continue;
}

if(strcmp("glWindowPos4dMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4DMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4dMESA"));
  continue;
}

if(strcmp("glWindowPos4dvMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4DVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4dvMESA"));
  continue;
}

if(strcmp("glWindowPos4fMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4FMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4fMESA"));
  continue;
}

if(strcmp("glWindowPos4fvMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4FVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4fvMESA"));
  continue;
}

if(strcmp("glWindowPos4iMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4IMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4iMESA"));
  continue;
}

if(strcmp("glWindowPos4ivMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4IVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4ivMESA"));
  continue;
}

if(strcmp("glWindowPos4sMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4SMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4sMESA"));
  continue;
}

if(strcmp("glWindowPos4svMESA",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWPOS4SVMESAPROC)glXGetProcAddress((const GLubyte*)"glWindowPos4svMESA"));
  continue;
}

if(strcmp("glMultiModeDrawArraysIBM",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIMODEDRAWARRAYSIBMPROC)glXGetProcAddress((const GLubyte*)"glMultiModeDrawArraysIBM"));
  continue;
}

if(strcmp("glMultiModeDrawElementsIBM",call_name)==0){
  auto func = MakeFunc((PFNGLMULTIMODEDRAWELEMENTSIBMPROC)glXGetProcAddress((const GLubyte*)"glMultiModeDrawElementsIBM"));
  continue;
}

if(strcmp("glAreProgramsResidentNV",call_name)==0){
  auto func = MakeFunc((PFNGLAREPROGRAMSRESIDENTNVPROC)glXGetProcAddress((const GLubyte*)"glAreProgramsResidentNV"));
  continue;
}

if(strcmp("glExecuteProgramNV",call_name)==0){
  auto func = MakeFunc((PFNGLEXECUTEPROGRAMNVPROC)glXGetProcAddress((const GLubyte*)"glExecuteProgramNV"));
  continue;
}

if(strcmp("glGetProgramParameterdvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMPARAMETERDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramParameterdvNV"));
  continue;
}

if(strcmp("glGetProgramParameterfvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMPARAMETERFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramParameterfvNV"));
  continue;
}

if(strcmp("glGetProgramStringNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMSTRINGNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramStringNV"));
  continue;
}

if(strcmp("glGetProgramivNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramivNV"));
  continue;
}

if(strcmp("glGetTrackMatrixivNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETTRACKMATRIXIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetTrackMatrixivNV"));
  continue;
}

if(strcmp("glGetVertexAttribdvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribdvNV"));
  continue;
}

if(strcmp("glGetVertexAttribfvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribfvNV"));
  continue;
}

if(strcmp("glGetVertexAttribivNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETVERTEXATTRIBIVNVPROC)glXGetProcAddress((const GLubyte*)"glGetVertexAttribivNV"));
  continue;
}

if(strcmp("glLoadProgramNV",call_name)==0){
  auto func = MakeFunc((PFNGLLOADPROGRAMNVPROC)glXGetProcAddress((const GLubyte*)"glLoadProgramNV"));
  continue;
}

if(strcmp("glProgramParameters4dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMPARAMETERS4DVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramParameters4dvNV"));
  continue;
}

if(strcmp("glProgramParameters4fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMPARAMETERS4FVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramParameters4fvNV"));
  continue;
}

if(strcmp("glRequestResidentProgramsNV",call_name)==0){
  auto func = MakeFunc((PFNGLREQUESTRESIDENTPROGRAMSNVPROC)glXGetProcAddress((const GLubyte*)"glRequestResidentProgramsNV"));
  continue;
}

if(strcmp("glTrackMatrixNV",call_name)==0){
  auto func = MakeFunc((PFNGLTRACKMATRIXNVPROC)glXGetProcAddress((const GLubyte*)"glTrackMatrixNV"));
  continue;
}

if(strcmp("glVertexAttrib1dNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dNV"));
  continue;
}

if(strcmp("glVertexAttrib1dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1dvNV"));
  continue;
}

if(strcmp("glVertexAttrib1fNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fNV"));
  continue;
}

if(strcmp("glVertexAttrib1fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1fvNV"));
  continue;
}

if(strcmp("glVertexAttrib1sNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1sNV"));
  continue;
}

if(strcmp("glVertexAttrib1svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB1SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib1svNV"));
  continue;
}

if(strcmp("glVertexAttrib2dNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dNV"));
  continue;
}

if(strcmp("glVertexAttrib2dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2dvNV"));
  continue;
}

if(strcmp("glVertexAttrib2fNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fNV"));
  continue;
}

if(strcmp("glVertexAttrib2fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2fvNV"));
  continue;
}

if(strcmp("glVertexAttrib2sNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2sNV"));
  continue;
}

if(strcmp("glVertexAttrib2svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB2SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib2svNV"));
  continue;
}

if(strcmp("glVertexAttrib3dNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dNV"));
  continue;
}

if(strcmp("glVertexAttrib3dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3dvNV"));
  continue;
}

if(strcmp("glVertexAttrib3fNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fNV"));
  continue;
}

if(strcmp("glVertexAttrib3fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3fvNV"));
  continue;
}

if(strcmp("glVertexAttrib3sNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3sNV"));
  continue;
}

if(strcmp("glVertexAttrib3svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB3SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib3svNV"));
  continue;
}

if(strcmp("glVertexAttrib4dNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4DNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dNV"));
  continue;
}

if(strcmp("glVertexAttrib4dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4dvNV"));
  continue;
}

if(strcmp("glVertexAttrib4fNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4FNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fNV"));
  continue;
}

if(strcmp("glVertexAttrib4fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4fvNV"));
  continue;
}

if(strcmp("glVertexAttrib4sNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4SNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4sNV"));
  continue;
}

if(strcmp("glVertexAttrib4svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4svNV"));
  continue;
}

if(strcmp("glVertexAttrib4ubNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4UBNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubNV"));
  continue;
}

if(strcmp("glVertexAttrib4ubvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIB4UBVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttrib4ubvNV"));
  continue;
}

if(strcmp("glVertexAttribPointerNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBPOINTERNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribPointerNV"));
  continue;
}

if(strcmp("glVertexAttribs1dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS1DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1dvNV"));
  continue;
}

if(strcmp("glVertexAttribs1fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS1FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1fvNV"));
  continue;
}

if(strcmp("glVertexAttribs1svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS1SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs1svNV"));
  continue;
}

if(strcmp("glVertexAttribs2dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS2DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2dvNV"));
  continue;
}

if(strcmp("glVertexAttribs2fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS2FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2fvNV"));
  continue;
}

if(strcmp("glVertexAttribs2svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS2SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs2svNV"));
  continue;
}

if(strcmp("glVertexAttribs3dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS3DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3dvNV"));
  continue;
}

if(strcmp("glVertexAttribs3fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS3FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3fvNV"));
  continue;
}

if(strcmp("glVertexAttribs3svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS3SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs3svNV"));
  continue;
}

if(strcmp("glVertexAttribs4dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS4DVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4dvNV"));
  continue;
}

if(strcmp("glVertexAttribs4fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS4FVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4fvNV"));
  continue;
}

if(strcmp("glVertexAttribs4svNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS4SVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4svNV"));
  continue;
}

if(strcmp("glVertexAttribs4ubvNV",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBS4UBVNVPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribs4ubvNV"));
  continue;
}

if(strcmp("glGetTexBumpParameterfvATI",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXBUMPPARAMETERFVATIPROC)glXGetProcAddress((const GLubyte*)"glGetTexBumpParameterfvATI"));
  continue;
}

if(strcmp("glGetTexBumpParameterivATI",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXBUMPPARAMETERIVATIPROC)glXGetProcAddress((const GLubyte*)"glGetTexBumpParameterivATI"));
  continue;
}

if(strcmp("glTexBumpParameterfvATI",call_name)==0){
  auto func = MakeFunc((PFNGLTEXBUMPPARAMETERFVATIPROC)glXGetProcAddress((const GLubyte*)"glTexBumpParameterfvATI"));
  continue;
}

if(strcmp("glTexBumpParameterivATI",call_name)==0){
  auto func = MakeFunc((PFNGLTEXBUMPPARAMETERIVATIPROC)glXGetProcAddress((const GLubyte*)"glTexBumpParameterivATI"));
  continue;
}

if(strcmp("glAlphaFragmentOp1ATI",call_name)==0){
  auto func = MakeFunc((PFNGLALPHAFRAGMENTOP1ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp1ATI"));
  continue;
}

if(strcmp("glAlphaFragmentOp2ATI",call_name)==0){
  auto func = MakeFunc((PFNGLALPHAFRAGMENTOP2ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp2ATI"));
  continue;
}

if(strcmp("glAlphaFragmentOp3ATI",call_name)==0){
  auto func = MakeFunc((PFNGLALPHAFRAGMENTOP3ATIPROC)glXGetProcAddress((const GLubyte*)"glAlphaFragmentOp3ATI"));
  continue;
}

if(strcmp("glBeginFragmentShaderATI",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glBeginFragmentShaderATI"));
  continue;
}

if(strcmp("glBindFragmentShaderATI",call_name)==0){
  auto func = MakeFunc((PFNGLBINDFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glBindFragmentShaderATI"));
  continue;
}

if(strcmp("glColorFragmentOp1ATI",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORFRAGMENTOP1ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp1ATI"));
  continue;
}

if(strcmp("glColorFragmentOp2ATI",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORFRAGMENTOP2ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp2ATI"));
  continue;
}

if(strcmp("glColorFragmentOp3ATI",call_name)==0){
  auto func = MakeFunc((PFNGLCOLORFRAGMENTOP3ATIPROC)glXGetProcAddress((const GLubyte*)"glColorFragmentOp3ATI"));
  continue;
}

if(strcmp("glDeleteFragmentShaderATI",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glDeleteFragmentShaderATI"));
  continue;
}

if(strcmp("glEndFragmentShaderATI",call_name)==0){
  auto func = MakeFunc((PFNGLENDFRAGMENTSHADERATIPROC)glXGetProcAddress((const GLubyte*)"glEndFragmentShaderATI"));
  continue;
}

if(strcmp("glGenFragmentShadersATI",call_name)==0){
  auto func = MakeFunc((PFNGLGENFRAGMENTSHADERSATIPROC)glXGetProcAddress((const GLubyte*)"glGenFragmentShadersATI"));
  continue;
}

if(strcmp("glPassTexCoordATI",call_name)==0){
  auto func = MakeFunc((PFNGLPASSTEXCOORDATIPROC)glXGetProcAddress((const GLubyte*)"glPassTexCoordATI"));
  continue;
}

if(strcmp("glSampleMapATI",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLEMAPATIPROC)glXGetProcAddress((const GLubyte*)"glSampleMapATI"));
  continue;
}

if(strcmp("glSetFragmentShaderConstantATI",call_name)==0){
  auto func = MakeFunc((PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)glXGetProcAddress((const GLubyte*)"glSetFragmentShaderConstantATI"));
  continue;
}

if(strcmp("glDepthRangeArrayfvOES",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEARRAYFVOESPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeArrayfvOES"));
  continue;
}

if(strcmp("glDepthRangeIndexedfOES",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEINDEXEDFOESPROC)glXGetProcAddress((const GLubyte*)"glDepthRangeIndexedfOES"));
  continue;
}

if(strcmp("glActiveStencilFaceEXT",call_name)==0){
  auto func = MakeFunc((PFNGLACTIVESTENCILFACEEXTPROC)glXGetProcAddress((const GLubyte*)"glActiveStencilFaceEXT"));
  continue;
}

if(strcmp("glBindVertexArrayAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLBINDVERTEXARRAYAPPLEPROC)glXGetProcAddress((const GLubyte*)"glBindVertexArrayAPPLE"));
  continue;
}

if(strcmp("glGenVertexArraysAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLGENVERTEXARRAYSAPPLEPROC)glXGetProcAddress((const GLubyte*)"glGenVertexArraysAPPLE"));
  continue;
}

if(strcmp("glGetProgramNamedParameterdvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramNamedParameterdvNV"));
  continue;
}

if(strcmp("glGetProgramNamedParameterfvNV",call_name)==0){
  auto func = MakeFunc((PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)glXGetProcAddress((const GLubyte*)"glGetProgramNamedParameterfvNV"));
  continue;
}

if(strcmp("glProgramNamedParameter4dNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4dNV"));
  continue;
}

if(strcmp("glProgramNamedParameter4dvNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4dvNV"));
  continue;
}

if(strcmp("glProgramNamedParameter4fNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4fNV"));
  continue;
}

if(strcmp("glProgramNamedParameter4fvNV",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)glXGetProcAddress((const GLubyte*)"glProgramNamedParameter4fvNV"));
  continue;
}

if(strcmp("glPrimitiveRestartNV",call_name)==0){
  auto func = MakeFunc((PFNGLPRIMITIVERESTARTNVPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveRestartNV"));
  continue;
}

if(strcmp("glGetTexGenxvOES",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXGENXVOESPROC)glXGetProcAddress((const GLubyte*)"glGetTexGenxvOES"));
  continue;
}

if(strcmp("glTexGenxOES",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENXOESPROC)glXGetProcAddress((const GLubyte*)"glTexGenxOES"));
  continue;
}

if(strcmp("glTexGenxvOES",call_name)==0){
  auto func = MakeFunc((PFNGLTEXGENXVOESPROC)glXGetProcAddress((const GLubyte*)"glTexGenxvOES"));
  continue;
}

if(strcmp("glDepthBoundsEXT",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHBOUNDSEXTPROC)glXGetProcAddress((const GLubyte*)"glDepthBoundsEXT"));
  continue;
}

if(strcmp("glBindFramebufferEXT",call_name)==0){
  auto func = MakeFunc((PFNGLBINDFRAMEBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glBindFramebufferEXT"));
  continue;
}

if(strcmp("glBindRenderbufferEXT",call_name)==0){
  auto func = MakeFunc((PFNGLBINDRENDERBUFFEREXTPROC)glXGetProcAddress((const GLubyte*)"glBindRenderbufferEXT"));
  continue;
}

if(strcmp("glStringMarkerGREMEDY",call_name)==0){
  auto func = MakeFunc((PFNGLSTRINGMARKERGREMEDYPROC)glXGetProcAddress((const GLubyte*)"glStringMarkerGREMEDY"));
  continue;
}

if(strcmp("glBufferParameteriAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLBUFFERPARAMETERIAPPLEPROC)glXGetProcAddress((const GLubyte*)"glBufferParameteriAPPLE"));
  continue;
}

if(strcmp("glFlushMappedBufferRangeAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glFlushMappedBufferRangeAPPLE"));
  continue;
}

if(strcmp("glVertexAttribI1iEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI1IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1iEXT"));
  continue;
}

if(strcmp("glVertexAttribI1uiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI1UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI1uiEXT"));
  continue;
}

if(strcmp("glVertexAttribI2iEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI2IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2iEXT"));
  continue;
}

if(strcmp("glVertexAttribI2ivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI2IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2ivEXT"));
  continue;
}

if(strcmp("glVertexAttribI2uiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI2UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2uiEXT"));
  continue;
}

if(strcmp("glVertexAttribI2uivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI2UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI2uivEXT"));
  continue;
}

if(strcmp("glVertexAttribI3iEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI3IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3iEXT"));
  continue;
}

if(strcmp("glVertexAttribI3ivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI3IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3ivEXT"));
  continue;
}

if(strcmp("glVertexAttribI3uiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI3UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3uiEXT"));
  continue;
}

if(strcmp("glVertexAttribI3uivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI3UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI3uivEXT"));
  continue;
}

if(strcmp("glVertexAttribI4iEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4IEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4iEXT"));
  continue;
}

if(strcmp("glVertexAttribI4ivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4IVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4ivEXT"));
  continue;
}

if(strcmp("glVertexAttribI4uiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4UIEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4uiEXT"));
  continue;
}

if(strcmp("glVertexAttribI4uivEXT",call_name)==0){
  auto func = MakeFunc((PFNGLVERTEXATTRIBI4UIVEXTPROC)glXGetProcAddress((const GLubyte*)"glVertexAttribI4uivEXT"));
  continue;
}

if(strcmp("glClearColorIiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARCOLORIIEXTPROC)glXGetProcAddress((const GLubyte*)"glClearColorIiEXT"));
  continue;
}

if(strcmp("glClearColorIuiEXT",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARCOLORIUIEXTPROC)glXGetProcAddress((const GLubyte*)"glClearColorIuiEXT"));
  continue;
}

if(strcmp("glBindBufferOffsetEXT",call_name)==0){
  auto func = MakeFunc((PFNGLBINDBUFFEROFFSETEXTPROC)glXGetProcAddress((const GLubyte*)"glBindBufferOffsetEXT"));
  continue;
}

if(strcmp("glBeginPerfMonitorAMD",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINPERFMONITORAMDPROC)glXGetProcAddress((const GLubyte*)"glBeginPerfMonitorAMD"));
  continue;
}

if(strcmp("glDeletePerfMonitorsAMD",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEPERFMONITORSAMDPROC)glXGetProcAddress((const GLubyte*)"glDeletePerfMonitorsAMD"));
  continue;
}

if(strcmp("glEndPerfMonitorAMD",call_name)==0){
  auto func = MakeFunc((PFNGLENDPERFMONITORAMDPROC)glXGetProcAddress((const GLubyte*)"glEndPerfMonitorAMD"));
  continue;
}

if(strcmp("glGenPerfMonitorsAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGENPERFMONITORSAMDPROC)glXGetProcAddress((const GLubyte*)"glGenPerfMonitorsAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorCounterDataAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterDataAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorCounterInfoAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterInfoAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorCounterStringAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCounterStringAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorCountersAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORCOUNTERSAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorCountersAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorGroupStringAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorGroupStringAMD"));
  continue;
}

if(strcmp("glGetPerfMonitorGroupsAMD",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFMONITORGROUPSAMDPROC)glXGetProcAddress((const GLubyte*)"glGetPerfMonitorGroupsAMD"));
  continue;
}

if(strcmp("glSelectPerfMonitorCountersAMD",call_name)==0){
  auto func = MakeFunc((PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)glXGetProcAddress((const GLubyte*)"glSelectPerfMonitorCountersAMD"));
  continue;
}

if(strcmp("glGetObjectParameterivAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLGETOBJECTPARAMETERIVAPPLEPROC)glXGetProcAddress((const GLubyte*)"glGetObjectParameterivAPPLE"));
  continue;
}

if(strcmp("glObjectPurgeableAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLOBJECTPURGEABLEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glObjectPurgeableAPPLE"));
  continue;
}

if(strcmp("glObjectUnpurgeableAPPLE",call_name)==0){
  auto func = MakeFunc((PFNGLOBJECTUNPURGEABLEAPPLEPROC)glXGetProcAddress((const GLubyte*)"glObjectUnpurgeableAPPLE"));
  continue;
}

if(strcmp("glActiveProgramEXT",call_name)==0){
  auto func = MakeFunc((PFNGLACTIVEPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glActiveProgramEXT"));
  continue;
}

if(strcmp("glCreateShaderProgramEXT",call_name)==0){
  auto func = MakeFunc((PFNGLCREATESHADERPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glCreateShaderProgramEXT"));
  continue;
}

if(strcmp("glUseShaderProgramEXT",call_name)==0){
  auto func = MakeFunc((PFNGLUSESHADERPROGRAMEXTPROC)glXGetProcAddress((const GLubyte*)"glUseShaderProgramEXT"));
  continue;
}

if(strcmp("glTextureBarrierNV",call_name)==0){
  auto func = MakeFunc((PFNGLTEXTUREBARRIERNVPROC)glXGetProcAddress((const GLubyte*)"glTextureBarrierNV"));
  continue;
}

if(strcmp("glVDPAUFiniNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUFININVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUFiniNV"));
  continue;
}

if(strcmp("glVDPAUGetSurfaceivNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUGETSURFACEIVNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUGetSurfaceivNV"));
  continue;
}

if(strcmp("glVDPAUInitNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUINITNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUInitNV"));
  continue;
}

if(strcmp("glVDPAUIsSurfaceNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUISSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUIsSurfaceNV"));
  continue;
}

if(strcmp("glVDPAUMapSurfacesNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUMapSurfacesNV"));
  continue;
}

if(strcmp("glVDPAURegisterOutputSurfaceNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAURegisterOutputSurfaceNV"));
  continue;
}

if(strcmp("glVDPAURegisterVideoSurfaceNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAURegisterVideoSurfaceNV"));
  continue;
}

if(strcmp("glVDPAUSurfaceAccessNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUSURFACEACCESSNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUSurfaceAccessNV"));
  continue;
}

if(strcmp("glVDPAUUnmapSurfacesNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUUNMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUUnmapSurfacesNV"));
  continue;
}

if(strcmp("glVDPAUUnregisterSurfaceNV",call_name)==0){
  auto func = MakeFunc((PFNGLVDPAUUNREGISTERSURFACENVPROC)glXGetProcAddress((const GLubyte*)"glVDPAUUnregisterSurfaceNV"));
  continue;
}

if(strcmp("glBeginPerfQueryINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLBEGINPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glBeginPerfQueryINTEL"));
  continue;
}

if(strcmp("glCreatePerfQueryINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLCREATEPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glCreatePerfQueryINTEL"));
  continue;
}

if(strcmp("glDeletePerfQueryINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLDELETEPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glDeletePerfQueryINTEL"));
  continue;
}

if(strcmp("glEndPerfQueryINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLENDPERFQUERYINTELPROC)glXGetProcAddress((const GLubyte*)"glEndPerfQueryINTEL"));
  continue;
}

if(strcmp("glGetFirstPerfQueryIdINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETFIRSTPERFQUERYIDINTELPROC)glXGetProcAddress((const GLubyte*)"glGetFirstPerfQueryIdINTEL"));
  continue;
}

if(strcmp("glGetNextPerfQueryIdINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETNEXTPERFQUERYIDINTELPROC)glXGetProcAddress((const GLubyte*)"glGetNextPerfQueryIdINTEL"));
  continue;
}

if(strcmp("glGetPerfCounterInfoINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFCOUNTERINFOINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfCounterInfoINTEL"));
  continue;
}

if(strcmp("glGetPerfQueryDataINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFQUERYDATAINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryDataINTEL"));
  continue;
}

if(strcmp("glGetPerfQueryIdByNameINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFQUERYIDBYNAMEINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryIdByNameINTEL"));
  continue;
}

if(strcmp("glGetPerfQueryInfoINTEL",call_name)==0){
  auto func = MakeFunc((PFNGLGETPERFQUERYINFOINTELPROC)glXGetProcAddress((const GLubyte*)"glGetPerfQueryInfoINTEL"));
  continue;
}

if(strcmp("glPolygonOffsetClampEXT",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONOFFSETCLAMPEXTPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetClampEXT"));
  continue;
}

if(strcmp("glWindowRectanglesEXT",call_name)==0){
  auto func = MakeFunc((PFNGLWINDOWRECTANGLESEXTPROC)glXGetProcAddress((const GLubyte*)"glWindowRectanglesEXT"));
  continue;
}

if(strcmp("glStencilFuncSeparateATI",call_name)==0){
  auto func = MakeFunc((PFNGLSTENCILFUNCSEPARATEATIPROC)glXGetProcAddress((const GLubyte*)"glStencilFuncSeparateATI"));
  continue;
}

if(strcmp("glProgramEnvParameters4fvEXT",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)glXGetProcAddress((const GLubyte*)"glProgramEnvParameters4fvEXT"));
  continue;
}

if(strcmp("glProgramLocalParameters4fvEXT",call_name)==0){
  auto func = MakeFunc((PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)glXGetProcAddress((const GLubyte*)"glProgramLocalParameters4fvEXT"));
  continue;
}

if(strcmp("glEGLImageTargetRenderbufferStorageOES",call_name)==0){
  auto func = MakeFunc((PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)glXGetProcAddress((const GLubyte*)"glEGLImageTargetRenderbufferStorageOES"));
  continue;
}

if(strcmp("glEGLImageTargetTexture2DOES",call_name)==0){
  auto func = MakeFunc((PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)glXGetProcAddress((const GLubyte*)"glEGLImageTargetTexture2DOES"));
  continue;
}

if(strcmp("glAlphaFuncx",call_name)==0){
  auto func = MakeFunc((PFNGLALPHAFUNCXPROC)glXGetProcAddress((const GLubyte*)"glAlphaFuncx"));
  continue;
}

if(strcmp("glClearColorx",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARCOLORXPROC)glXGetProcAddress((const GLubyte*)"glClearColorx"));
  continue;
}

if(strcmp("glClearDepthx",call_name)==0){
  auto func = MakeFunc((PFNGLCLEARDEPTHXPROC)glXGetProcAddress((const GLubyte*)"glClearDepthx"));
  continue;
}

if(strcmp("glColor4x",call_name)==0){
  auto func = MakeFunc((PFNGLCOLOR4XPROC)glXGetProcAddress((const GLubyte*)"glColor4x"));
  continue;
}

if(strcmp("glDepthRangex",call_name)==0){
  auto func = MakeFunc((PFNGLDEPTHRANGEXPROC)glXGetProcAddress((const GLubyte*)"glDepthRangex"));
  continue;
}

if(strcmp("glFogx",call_name)==0){
  auto func = MakeFunc((PFNGLFOGXPROC)glXGetProcAddress((const GLubyte*)"glFogx"));
  continue;
}

if(strcmp("glFogxv",call_name)==0){
  auto func = MakeFunc((PFNGLFOGXVPROC)glXGetProcAddress((const GLubyte*)"glFogxv"));
  continue;
}

if(strcmp("glFrustumf",call_name)==0){
  auto func = MakeFunc((PFNGLFRUSTUMFPROC)glXGetProcAddress((const GLubyte*)"glFrustumf"));
  continue;
}

if(strcmp("glFrustumx",call_name)==0){
  auto func = MakeFunc((PFNGLFRUSTUMXPROC)glXGetProcAddress((const GLubyte*)"glFrustumx"));
  continue;
}

if(strcmp("glLightModelx",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELXPROC)glXGetProcAddress((const GLubyte*)"glLightModelx"));
  continue;
}

if(strcmp("glLightModelxv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTMODELXVPROC)glXGetProcAddress((const GLubyte*)"glLightModelxv"));
  continue;
}

if(strcmp("glLightx",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTXPROC)glXGetProcAddress((const GLubyte*)"glLightx"));
  continue;
}

if(strcmp("glLightxv",call_name)==0){
  auto func = MakeFunc((PFNGLLIGHTXVPROC)glXGetProcAddress((const GLubyte*)"glLightxv"));
  continue;
}

if(strcmp("glLineWidthx",call_name)==0){
  auto func = MakeFunc((PFNGLLINEWIDTHXPROC)glXGetProcAddress((const GLubyte*)"glLineWidthx"));
  continue;
}

if(strcmp("glLoadMatrixx",call_name)==0){
  auto func = MakeFunc((PFNGLLOADMATRIXXPROC)glXGetProcAddress((const GLubyte*)"glLoadMatrixx"));
  continue;
}

if(strcmp("glMaterialx",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALXPROC)glXGetProcAddress((const GLubyte*)"glMaterialx"));
  continue;
}

if(strcmp("glMaterialxv",call_name)==0){
  auto func = MakeFunc((PFNGLMATERIALXVPROC)glXGetProcAddress((const GLubyte*)"glMaterialxv"));
  continue;
}

if(strcmp("glMultMatrixx",call_name)==0){
  auto func = MakeFunc((PFNGLMULTMATRIXXPROC)glXGetProcAddress((const GLubyte*)"glMultMatrixx"));
  continue;
}

if(strcmp("glMultiTexCoord4x",call_name)==0){
  auto func = MakeFunc((PFNGLMULTITEXCOORD4XPROC)glXGetProcAddress((const GLubyte*)"glMultiTexCoord4x"));
  continue;
}

if(strcmp("glNormal3x",call_name)==0){
  auto func = MakeFunc((PFNGLNORMAL3XPROC)glXGetProcAddress((const GLubyte*)"glNormal3x"));
  continue;
}

if(strcmp("glOrthof",call_name)==0){
  auto func = MakeFunc((PFNGLORTHOFPROC)glXGetProcAddress((const GLubyte*)"glOrthof"));
  continue;
}

if(strcmp("glOrthox",call_name)==0){
  auto func = MakeFunc((PFNGLORTHOXPROC)glXGetProcAddress((const GLubyte*)"glOrthox"));
  continue;
}

if(strcmp("glPointSizex",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTSIZEXPROC)glXGetProcAddress((const GLubyte*)"glPointSizex"));
  continue;
}

if(strcmp("glPolygonOffsetx",call_name)==0){
  auto func = MakeFunc((PFNGLPOLYGONOFFSETXPROC)glXGetProcAddress((const GLubyte*)"glPolygonOffsetx"));
  continue;
}

if(strcmp("glRotatex",call_name)==0){
  auto func = MakeFunc((PFNGLROTATEXPROC)glXGetProcAddress((const GLubyte*)"glRotatex"));
  continue;
}

if(strcmp("glSampleCoveragex",call_name)==0){
  auto func = MakeFunc((PFNGLSAMPLECOVERAGEXPROC)glXGetProcAddress((const GLubyte*)"glSampleCoveragex"));
  continue;
}

if(strcmp("glScalex",call_name)==0){
  auto func = MakeFunc((PFNGLSCALEXPROC)glXGetProcAddress((const GLubyte*)"glScalex"));
  continue;
}

if(strcmp("glTexEnvx",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVXPROC)glXGetProcAddress((const GLubyte*)"glTexEnvx"));
  continue;
}

if(strcmp("glTexEnvxv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXENVXVPROC)glXGetProcAddress((const GLubyte*)"glTexEnvxv"));
  continue;
}

if(strcmp("glTexParameterx",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERXPROC)glXGetProcAddress((const GLubyte*)"glTexParameterx"));
  continue;
}

if(strcmp("glTranslatex",call_name)==0){
  auto func = MakeFunc((PFNGLTRANSLATEXPROC)glXGetProcAddress((const GLubyte*)"glTranslatex"));
  continue;
}

if(strcmp("glClipPlanef",call_name)==0){
  auto func = MakeFunc((PFNGLCLIPPLANEFPROC)glXGetProcAddress((const GLubyte*)"glClipPlanef"));
  continue;
}

if(strcmp("glClipPlanex",call_name)==0){
  auto func = MakeFunc((PFNGLCLIPPLANEXPROC)glXGetProcAddress((const GLubyte*)"glClipPlanex"));
  continue;
}

if(strcmp("glGetClipPlanef",call_name)==0){
  auto func = MakeFunc((PFNGLGETCLIPPLANEFPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlanef"));
  continue;
}

if(strcmp("glGetClipPlanex",call_name)==0){
  auto func = MakeFunc((PFNGLGETCLIPPLANEXPROC)glXGetProcAddress((const GLubyte*)"glGetClipPlanex"));
  continue;
}

if(strcmp("glGetFixedv",call_name)==0){
  auto func = MakeFunc((PFNGLGETFIXEDVPROC)glXGetProcAddress((const GLubyte*)"glGetFixedv"));
  continue;
}

if(strcmp("glGetLightxv",call_name)==0){
  auto func = MakeFunc((PFNGLGETLIGHTXVPROC)glXGetProcAddress((const GLubyte*)"glGetLightxv"));
  continue;
}

if(strcmp("glGetMaterialxv",call_name)==0){
  auto func = MakeFunc((PFNGLGETMATERIALXVPROC)glXGetProcAddress((const GLubyte*)"glGetMaterialxv"));
  continue;
}

if(strcmp("glGetTexEnvxv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXENVXVPROC)glXGetProcAddress((const GLubyte*)"glGetTexEnvxv"));
  continue;
}

if(strcmp("glGetTexParameterxv",call_name)==0){
  auto func = MakeFunc((PFNGLGETTEXPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glGetTexParameterxv"));
  continue;
}

if(strcmp("glPointParameterx",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERXPROC)glXGetProcAddress((const GLubyte*)"glPointParameterx"));
  continue;
}

if(strcmp("glPointParameterxv",call_name)==0){
  auto func = MakeFunc((PFNGLPOINTPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glPointParameterxv"));
  continue;
}

if(strcmp("glTexParameterxv",call_name)==0){
  auto func = MakeFunc((PFNGLTEXPARAMETERXVPROC)glXGetProcAddress((const GLubyte*)"glTexParameterxv"));
  continue;
}

if(strcmp("glBlendBarrier",call_name)==0){
  auto func = MakeFunc((PFNGLBLENDBARRIERPROC)glXGetProcAddress((const GLubyte*)"glBlendBarrier"));
  continue;
}

if(strcmp("glPrimitiveBoundingBox",call_name)==0){
  auto func = MakeFunc((PFNGLPRIMITIVEBOUNDINGBOXPROC)glXGetProcAddress((const GLubyte*)"glPrimitiveBoundingBox"));
  continue;
}